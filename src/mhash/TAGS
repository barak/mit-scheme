
mhash.scm,2084
(define (import-mhash)32,1077
(define mhash-algorithm-names)62,1767
(define mhash-contexts 63,1798
(define mhash-hmac-contexts 64,1826
(define mhash-contexts-mutex)65,1859
(define (add-context-cleanup 72,1999
(define (add-hmac-context-cleanup 79,2212
(define (remove-context-cleanup 86,2440
(define (remove-hmac-context-cleanup 93,2672
(define (weak-assq 100,2924
(define (cleanup-contexts)108,3126
(define (cleanup-hmac-contexts)126,3607
(define (cleanup-mhash-contexts)144,4108
(define (mhash-name->id 153,4297
(define-structure mhash-context 160,4571
(define-structure mhash-hmac-context 161,4619
(define (guarantee-mhash-context 163,4673
(define (guarantee-mhash-hmac-context 169,4921
(define (guarantee-subbytevector 175,5189
(define (with-context-locked 184,5556
(define (with-hmac-context-locked 187,5665
(define (with-context-locked-open 190,5784
(define (with-hmac-context-locked-open 198,6065
(define (mhash-type-names)206,6361
(define (mhash-get-block-size 209,6435
(define (mhash-init 213,6554
(define (mhash-update 225,6978
(define (mhash-end 231,7205
(define (mhash-hmac-init 241,7522
(define (mhash-hmac-update 257,8148
(define (mhash-hmac-end 264,8455
(define mhash-keygen-names)274,8803
(define (keygen-name->id 276,8832
(define (mhash-keygen-type-names)283,9095
(define (mhash-keygen-uses-salt? 286,9173
(define (mhash-keygen-uses-count? 290,9320
(define (mhash-keygen-uses-hash-algorithm 294,9470
(define (mhash-keygen-salt-size 298,9626
(define (mhash-keygen-max-key-size 302,9756
(define (mhash-keygen 306,9895
(define (salted-keygen-params 338,11151
(define-structure (mhash-keygen-type 356,11721
(define (make-mhash-keygen-type 361,11890
(define (initialize-mhash-variables!)399,13200
(define (reset-mhash-variables!)427,13964
(define (mhash-file 435,14258
(define (mhash-string 441,14429
(define (mhash-bytevector 444,14555
(define (port-consumer 451,14860
(define (call-with-buffer 464,15205
(define (initialize-package!)476,15440
(define (make-names-vector 482,15658
(define (names-vector->list 493,15916

optiondb.scm,32
(define-load-option 'MHASH3,20

mhash.pkg,221
MIT/GNU Scheme is free software;10,311
the Free Software Foundation;12,451
the Free Software Foundation; either version 2 of the License,12,451
the Free Software Foundation; either version 2 of the License, or 12,451

mhash-check.scm,0

make.scm,0

compile.scm,0
