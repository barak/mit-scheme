#| -*-Scheme-*-

Copyright (C) 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
    1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
    2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
    2017, 2018, 2019 Massachusetts Institute of Technology

This file is part of MIT/GNU Scheme.

MIT/GNU Scheme is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.

MIT/GNU Scheme is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with MIT/GNU Scheme; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301,
USA.

|#

;;;; XML: packaging

(global-definitions "../runtime/runtime")
(global-definitions "../sos/sos")
(global-definitions "../star-parser/parser")

(define-package (runtime xml)
  (parent (runtime)))

(define-package (runtime xml chars)
  (files "xml-chars")
  (parent (runtime xml))
  (export ()
	  char-set:xml-char
	  char-set:xml-whitespace
	  xml-char?)
  (export (runtime xml)
	  char-set:char-data
	  char-set:name-initial
	  char-set:name-subsequent
	  char-set:ncname-initial
	  char-set:ncname-subsequent))

(define-package (runtime xml names)
  (files "xml-names")
  (parent (runtime xml))
  (export ()
	  make-xml-name
	  make-xml-name-symbol
	  make-xml-nmtoken
	  make-xml-qname
	  match:xml-name
	  match:xml-nmtoken
	  match:xml-qname
	  null-xml-name-prefix
	  null-xml-name-prefix?
	  null-xml-namespace-uri
	  null-xml-namespace-uri?
	  string-is-xml-name?
	  string-is-xml-nmtoken?
	  string-is-xml-qname?
	  xml-name->symbol
	  xml-name-local
	  xml-name-local=?
	  xml-name-prefix
	  xml-name-prefix=?
	  xml-name-string
	  xml-name-symbol?
	  xml-name-uri
	  xml-name-uri=?
	  xml-name=?
	  xml-name?
	  xml-namespace-conformant-name?
	  xml-nmtoken?
	  xml-qname-local
	  xml-qname-prefix
	  xml-qname?
	  xml-uri
	  xml-uri-string
	  xmlns-uri
	  xmlns-uri-string)
  (export (runtime xml)
	  %make-xml-name))

(define-package (runtime xml structure)
  (files "xml-struct")
  (parent (runtime xml))
  (export ()
	  (flatten-xml-element-contents flatten-xml-element-content)
	  (set-xml-element-contents! set-xml-element-content!)
	  (xml-element-contents xml-element-content)
	  <xml-!attlist>
	  <xml-!element>
	  <xml-!entity>
	  <xml-!notation>
	  <xml-attribute>
	  <xml-comment>
	  <xml-declaration>
	  <xml-document>
	  <xml-dtd>
	  <xml-element>
	  <xml-entity-ref>
	  <xml-external-id>
	  <xml-parameter-!entity>
	  <xml-parameter-entity-ref>
	  <xml-processing-instructions>
	  <xml-unparsed-!entity>
	  find-xml-attr
	  flatten-xml-element-content
	  make-xml-!attlist
	  make-xml-!element
	  make-xml-!entity
	  make-xml-!notation
	  make-xml-attribute
	  make-xml-comment
	  make-xml-declaration
	  make-xml-document
	  make-xml-dtd
	  make-xml-element
	  make-xml-entity-ref
	  make-xml-external-id
	  make-xml-parameter-!entity
	  make-xml-parameter-entity-ref
	  make-xml-processing-instructions
	  make-xml-unparsed-!entity
	  set-xml-!attlist-definitions!
	  set-xml-!attlist-name!
	  set-xml-!element-content-type!
	  set-xml-!element-name!
	  set-xml-!entity-name!
	  set-xml-!entity-value!
	  set-xml-!notation-id!
	  set-xml-!notation-name!
	  set-xml-attribute-name!
	  set-xml-attribute-value!
	  set-xml-comment-text!
	  set-xml-declaration-encoding!
	  set-xml-declaration-standalone!
	  set-xml-declaration-version!
	  set-xml-document-declaration!
	  set-xml-document-dtd!
	  set-xml-document-misc-1!
	  set-xml-document-misc-2!
	  set-xml-document-misc-3!
	  set-xml-document-root!
	  set-xml-dtd-external!
	  set-xml-dtd-internal!
	  set-xml-dtd-root!
	  set-xml-element-attributes!
	  set-xml-element-content!
	  set-xml-element-name!
	  set-xml-entity-ref-name!
	  set-xml-external-id-id!
	  set-xml-external-id-uri!
	  set-xml-parameter-!entity-name!
	  set-xml-parameter-!entity-value!
	  set-xml-parameter-entity-ref-name!
	  set-xml-processing-instructions-name!
	  set-xml-processing-instructions-text!
	  set-xml-unparsed-!entity-id!
	  set-xml-unparsed-!entity-name!
	  set-xml-unparsed-!entity-notation!
	  standard-xml-element-constructor
	  standard-xml-element-predicate
	  xml-!attlist-definitions
	  xml-!attlist-name
	  xml-!attlist?
	  xml-!element-content-type
	  xml-!element-name
	  xml-!element?
	  xml-!entity-name
	  xml-!entity-value
	  xml-!entity?
	  xml-!notation-id
	  xml-!notation-name
	  xml-!notation?
	  xml-attribute-list?
	  xml-attribute-name
	  xml-attribute-namespace-decl?
	  xml-attribute-value
	  xml-attribute?
	  xml-attrs
	  xml-char-data?
	  xml-comment
	  xml-comment-text
	  xml-comment?
	  xml-content-item?
	  xml-content?
	  xml-declaration-encoding
	  xml-declaration-standalone
	  xml-declaration-version
	  xml-declaration?
	  xml-document-declaration
	  xml-document-dtd
	  xml-document-misc-1
	  xml-document-misc-2
	  xml-document-misc-3
	  xml-document-root
	  xml-document?
	  xml-dtd-external
	  xml-dtd-internal
	  xml-dtd-root
	  xml-dtd?
	  xml-element-attributes
	  xml-element-child
	  xml-element-children
	  xml-element-content
	  xml-element-name
	  xml-element-namespace-decls
	  xml-element?
	  xml-entity-ref-name
	  xml-entity-ref?
	  xml-external-id-id
	  xml-external-id-uri
	  xml-external-id?
	  xml-misc-content-item?
	  xml-misc-content?
	  xml-parameter-!entity-name
	  xml-parameter-!entity-value
	  xml-parameter-!entity?
	  xml-parameter-entity-ref-name
	  xml-parameter-entity-ref?
	  xml-processing-instructions-name
	  xml-processing-instructions-text
	  xml-processing-instructions?
	  xml-stylesheet
	  xml-unparsed-!entity-id
	  xml-unparsed-!entity-name
	  xml-unparsed-!entity-notation
	  xml-unparsed-!entity?
	  xml-whitespace-string?)
  (export (runtime xml)
	  %make-xml-!attlist
	  %make-xml-!element
	  %make-xml-!entity
	  %make-xml-!notation
	  %make-xml-attribute
	  %make-xml-comment
	  %make-xml-declaration
	  %make-xml-document
	  %make-xml-dtd
	  %make-xml-element
	  %make-xml-entity-ref
	  %make-xml-external-id
	  %make-xml-parameter-!entity
	  %make-xml-parameter-entity-ref
	  %make-xml-processing-instructions
	  %make-xml-unparsed-!entity
	  string-of-xml-chars?))

(define-package (runtime xml parser)
  (files "xml-parser")
  (parent (runtime xml))
  (export ()
	  bytevector->xml
	  read-xml
	  read-xml-file
	  string->xml
	  xml-processing-instructions-handlers)
  (export (runtime xml)
	  coding-requires-bom?
	  normalize-coding))

(define-package (runtime xml output)
  (files "xml-output")
  (parent (runtime xml))
  (export ()
	  write-xml
	  write-xml-file
	  xml->bytevector
	  xml->string))

(define-package (runtime xml html)
  (files "xhtml" "xhtml-entities")
  (parent (runtime xml))
  (export ()
	  (html-document html-1.0-document)
	  (html-dtd html-1.0-dtd)
	  (html-external-id html-1.0-external-id)
	  html-1.0-document
	  html-1.0-dtd
	  html-1.0-external-id
	  html-1.1-document
	  html-1.1-dtd
	  html-1.1-external-id
	  html-dtd?
	  html-element-context
	  html-element-name-context
	  html-element-name?
	  html-element-names
	  html-element?
	  html-external-id?
	  html-public-id?
	  html-uri
	  html:a
	  html:a?
	  html:abbr
	  html:abbr?
	  html:acronym
	  html:acronym?
	  html:address
	  html:address?
	  html:area
	  html:area?
	  html:b
	  html:b?
	  html:base
	  html:base?
	  html:bdo
	  html:bdo?
	  html:big
	  html:big?
	  html:blockquote
	  html:blockquote?
	  html:body
	  html:body?
	  html:br
	  html:br?
	  html:button
	  html:button?
	  html:caption
	  html:caption?
	  html:cite
	  html:cite?
	  html:code
	  html:code?
	  html:col
	  html:col?
	  html:colgroup
	  html:colgroup?
	  html:dd
	  html:dd?
	  html:del
	  html:del?
	  html:dfn
	  html:dfn?
	  html:div
	  html:div?
	  html:dl
	  html:dl?
	  html:dt
	  html:dt?
	  html:em
	  html:em?
	  html:fieldset
	  html:fieldset?
	  html:form
	  html:form?
	  html:h1
	  html:h1?
	  html:h2
	  html:h2?
	  html:h3
	  html:h3?
	  html:h4
	  html:h4?
	  html:h5
	  html:h5?
	  html:h6
	  html:h6?
	  html:head
	  html:head?
	  html:hr
	  html:hr?
	  html:href
	  html:html
	  html:html?
	  html:http-equiv
	  html:i
	  html:i?
	  html:id-def
	  html:id-ref
	  html:img
	  html:img?
	  html:input
	  html:input?
	  html:ins
	  html:ins?
	  html:kbd
	  html:kbd?
	  html:label
	  html:label?
	  html:legend
	  html:legend?
	  html:li
	  html:li?
	  html:link
	  html:link?
	  html:map
	  html:map?
	  html:meta
	  html:meta?
	  html:noscript
	  html:noscript?
	  html:object
	  html:object?
	  html:ol
	  html:ol?
	  html:optgroup
	  html:optgroup?
	  html:option
	  html:option?
	  html:p
	  html:p?
	  html:param
	  html:param?
	  html:pre
	  html:pre?
	  html:q
	  html:q?
	  html:rb
	  html:rb?
	  html:rbc
	  html:rbc?
	  html:rel-link
	  html:rp
	  html:rp?
	  html:rt
	  html:rt?
	  html:rtc
	  html:rtc?
	  html:ruby
	  html:ruby?
	  html:samp
	  html:samp?
	  html:script
	  html:script?
	  html:select
	  html:select?
	  html:small
	  html:small?
	  html:span
	  html:span?
	  html:strong
	  html:strong?
	  html:style
	  html:style-attr
	  html:style-link
	  html:style?
	  html:sub
	  html:sub?
	  html:sup
	  html:sup?
	  html:table
	  html:table?
	  html:tbody
	  html:tbody?
	  html:td
	  html:td?
	  html:textarea
	  html:textarea?
	  html:tfoot
	  html:tfoot?
	  html:th
	  html:th?
	  html:thead
	  html:thead?
	  html:title
	  html:title?
	  html:tr
	  html:tr?
	  html:tt
	  html:tt?
	  html:ul
	  html:ul?
	  html:var
	  html:var?)
  (export (runtime xml parser)
	  html-entities)
  (export (runtime xml output)
	  html-char->name-map))

(define-package (runtime xml xml-rpc)
  (files "xml-rpc")
  (parent (runtime xml))
  (export ()
	  *xml-rpc:decode-value-handler*
	  *xml-rpc:encode-value-handler*
	  condition-type:bad-xml-rpc-message
	  condition-type:xml-rpc-fault
	  xml-rpc
	  xml-rpc:condition->fault
	  xml-rpc:fault
	  xml-rpc:parse-request
	  xml-rpc:parse-response
	  xml-rpc:request
	  xml-rpc:response
	  xml-rpc:simple-fault))

(define-package (runtime rdf)
  (files)
  (parent (runtime)))

(define-package (runtime rdf structures)
  (files "rdf-struct")
  (parent (runtime rdf))
  (export ()
	  *default-rdf-prefix-registry*
	  <rdf-bnode>
	  <rdf-graph>
	  <rdf-literal>
	  <rdf-prefix-registry>
	  <rdf-triple>
	  canonicalize-rdf-object
	  canonicalize-rdf-predicate
	  canonicalize-rdf-subject
	  canonicalize-rdf-uri
	  copy-rdf-prefix-registry
	  event:new-rdf-graph
	  event:new-rdf-triple
	  for-each-rdf-triple
	  make-rdf-bnode
	  make-rdf-graph
	  make-rdf-literal
	  make-rdf-qname
	  make-rdf-triple
	  merge-rdf-prefix-registry!
	  new-rdf-prefix-registry
	  port/rdf-prefix-registry
	  port/set-rdf-prefix-registry
	  rdf-bnode-name
	  rdf-bnode?
	  rdf-graph-triples
	  rdf-graph?
	  rdf-literal-language
	  rdf-literal-text
	  rdf-literal-type
	  rdf-literal?
	  rdf-object?
	  rdf-predicate?
	  rdf-prefix-expansion
	  rdf-prefix-registry->alist
	  rdf-prefix-registry?
	  rdf-prefix?
	  rdf-qname->uri
	  rdf-qname-local
	  rdf-qname-prefix
	  rdf-qname?
	  rdf-subject?
	  rdf-triple-object
	  rdf-triple-predicate
	  rdf-triple-subject
	  rdf-triple?
	  register-rdf-prefix
	  split-rdf-qname
	  uri->rdf-prefix
	  uri->rdf-qname
	  with-rdf-input-port)
  (export (runtime rdf)
	  match-language))

(define-package (runtime rdf nt)
  (files "rdf-nt")
  (parent (runtime rdf))
  (export ()
	  read-rdf/nt
	  read-rdf/nt-file
	  rdf/nt-file->source
	  write-rdf/nt
	  write-rdf/nt-bnode
	  write-rdf/nt-file
	  write-rdf/nt-literal
	  write-rdf/nt-uri)
  (export (runtime rdf turtle)
	  write-literal-char
	  write-rdf/nt-literal-text))

(define-package (runtime rdf turtle)
  (files "turtle")
  (parent (runtime rdf))
  (export ()
	  read-rdf/turtle
	  read-rdf/turtle-file
	  write-rdf/turtle
	  write-rdf/turtle-file
	  write-rdf/turtle-literal
	  write-rdf/turtle-prefix
	  write-rdf/turtle-subgraph
	  write-rdf/turtle-triple
	  write-rdf/turtle-triples
	  write-rdf/turtle-uri)
  (export (runtime rdf)
	  match:name
	  match:prefix-name))