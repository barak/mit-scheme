#| -*-Scheme-*-

$Id: runtime.pkg,v 14.563 2005/09/08 19:12:49 cph Exp $

Copyright 1988,1989,1990,1991,1992,1993 Massachusetts Institute of Technology
Copyright 1994,1995,1996,1997,1998,1999 Massachusetts Institute of Technology
Copyright 2000,2001,2002,2003,2004,2005 Massachusetts Institute of Technology

This file is part of MIT/GNU Scheme.

MIT/GNU Scheme is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.

MIT/GNU Scheme is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with MIT/GNU Scheme; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
USA.

|#

;;;; Runtime System Packaging

(define-package ()
  (files "make"))

(define-package (package)
  ;; The information appearing here must be exactly duplicated in the
  ;; cold load sequence in "make.scm".
  (files "packag")
  (parent ())
  (export ()
	  *allow-package-redefinition?*
	  construct-packages-from-file
	  environment->package
	  find-package
	  load-package-set
	  load-packages-from-file
	  name->package
	  package-set-pathname
	  package/add-child!
	  package/child
	  package/children
	  package/environment
	  package/name
	  package/parent
	  package/reference
	  package?
	  system-global-package)
  (export (runtime environment)
	  package-name-tag)
  (initialization (initialize-package!)))

(define-package (runtime)
  (files "version")
  (parent ())
  (initialization (initialize-package!)))

(define-package (runtime bit-string)
  (files "bitstr")
  (parent (runtime))
  (export ()
	  bit-string->signed-integer
	  bit-string->unsigned-integer
	  bit-string-allocate
	  bit-string-and
	  bit-string-and!
	  bit-string-andc
	  bit-string-andc!
	  bit-string-append
	  bit-string-append-reversed
	  bit-string-clear!
	  bit-string-copy
	  bit-string-fill!
	  bit-string-length
	  bit-string-move!
	  bit-string-movec!
	  bit-string-not
	  bit-string-or
	  bit-string-or!
	  bit-string-ref
	  bit-string-set!
	  bit-string-xor
	  bit-string-xor!
	  bit-string-zero?
	  bit-string=?
	  bit-string?
	  bit-substring
	  bit-substring-extend
	  bit-substring-find-next-set-bit
	  bit-substring-move-right!
	  make-bit-string
	  read-bits!
	  signed-integer->bit-string
	  unsigned-integer->bit-string
	  write-bits!))

(define-package (runtime blowfish)
  (files "blowfish")
  (parent (runtime))
  (export ()
	  blowfish-available?
	  blowfish-cbc
	  blowfish-cfb64
	  blowfish-ecb
	  blowfish-encrypt-port
	  blowfish-file?
	  blowfish-ofb64
	  blowfish-set-key
	  compute-blowfish-init-vector
	  read-blowfish-file-header
	  write-blowfish-file-header))

(define-package (runtime boolean)
  (files "boole")
  (parent (runtime))
  (export ()
	  boolean/and
	  boolean/or
	  boolean=?
	  boolean?
	  false
	  false?
	  for-all?
	  not
	  there-exists?
	  true))

(define-package (runtime boot-definitions)
  (files "boot")
  (parent (runtime))
  (export ()
	  default-object
	  default-object?
	  error:not-unparser-method
	  future?
	  gc-space-status
	  guarantee-unparser-method
	  interrupt-bit/after-gc
	  interrupt-bit/gc
	  interrupt-bit/global-1
	  interrupt-bit/global-3
	  interrupt-bit/global-gc
	  interrupt-bit/kbd
	  interrupt-bit/stack
	  interrupt-bit/suspend
	  interrupt-bit/timer
	  interrupt-mask/all
	  interrupt-mask/gc-ok
	  interrupt-mask/none
	  interrupt-mask/timer-ok
	  object-constant?
	  object-pure?
	  standard-unparser-method
	  unparser-method?
	  unparser/standard-method
	  with-absolutely-no-interrupts
	  with-limited-interrupts
	  without-interrupts))

(define-package (runtime equality)
  (files "equals")
  (parent (runtime))
  (export ()
	  equal?
	  eqv?))

(define-package (runtime fixnum-arithmetic)
  (files "fixart")
  (parent (runtime))
  (export ()
	  (exact-integer? int:integer?)
	  ->flonum
	  fix:*
	  fix:+
	  fix:-
	  fix:-1+
	  fix:1+
	  fix:<
	  fix:<=
	  fix:=
	  fix:>
	  fix:>=
	  fix:and
	  fix:andc
	  fix:divide
	  fix:fixnum?
	  fix:gcd
	  fix:lsh
	  fix:max
	  fix:min
	  fix:negative?
	  fix:not
	  fix:or
	  fix:positive?
	  fix:quotient
	  fix:remainder
	  fix:xor
	  fix:zero?
	  fixnum?
	  flo:*
	  flo:+
	  flo:-
	  flo:/
	  flo:<
	  flo:<=
	  flo:=
	  flo:>
	  flo:>=
	  flo:abs
	  flo:acos
	  flo:asin
	  flo:atan
	  flo:atan2
	  flo:ceiling
	  flo:ceiling->exact
	  flo:cos
	  flo:exp
	  flo:expt
	  flo:finite?
	  flo:flonum?
	  flo:floor
	  flo:floor->exact
	  flo:log
	  flo:max
	  flo:min
	  flo:negate
	  flo:negative?
	  flo:positive?
	  flo:round
	  flo:round->exact
	  flo:sin
	  flo:sqrt
	  flo:tan
	  flo:truncate
	  flo:truncate->exact
	  flo:vector-cons
	  flo:vector-length
	  flo:vector-ref
	  flo:vector-set!
	  flo:zero?
	  guarantee-index-fixnum
	  guarantee-limited-index-fixnum
	  index-fixnum?
	  int:*
	  int:+
	  int:-
	  int:-1+
	  int:->flonum
	  int:1+
	  int:<
	  int:<=
	  int:=
	  int:>
	  int:>=
	  int:divide
	  int:integer?
	  int:negate
	  int:negative?
	  int:positive?
	  int:quotient
	  int:remainder
	  int:zero?))

(define-package (runtime miscellaneous-global)
  (files "global")
  (parent (runtime))
  (export ()
	  %exit
	  %quit
	  (*the-non-printing-object* unspecific)
	  <hook-list>
	  append-hook-to-list
	  apply
	  bind-cell-contents!
	  call-with-values
	  cd
	  cell-contents
	  cell?
	  default/exit
	  default/quit
	  environment-link-name
	  eq?
	  error-procedure
	  error:not-hook-list
	  eval
	  exit
	  false-procedure
	  fasdump
	  get-fixed-objects-vector
	  get-interrupt-enables
	  guarantee-hook-list
	  hook-in-list?
	  hook-list?
	  hook/exit
	  hook/quit
	  hook/scode-eval
	  host-big-endian?
	  hunk3-cons
	  identity-procedure
	  impurify
	  lexical-assignment
	  lexical-reference
	  lexical-unassigned?
	  lexical-unbound?
	  lexical-unreferenceable?
	  limit-interrupts!
	  link-variables
	  local-assignment
	  make-cell
	  make-hook-list
	  make-non-pointer-object
	  non-pointer-type-code?
	  null-procedure
	  obarray->list
	  object-component-binder
	  object-datum
	  object-gc-type
	  object-new-type
	  object-non-pointer?
	  object-pointer?
	  object-type
	  object-type?
	  pa
	  pointer-type-code?
	  primitive-procedure-arity
	  primitive-procedure-documentation
	  pwd
	  quit
	  remove-hook-from-list
	  run-hooks-in-list
	  scode-eval
	  set-cell-contents!
	  set-interrupt-enables!
	  show-time
	  system-hunk3-cons
	  system-hunk3-cxr0
	  system-hunk3-cxr1
	  system-hunk3-cxr2
	  system-hunk3-set-cxr0!
	  system-hunk3-set-cxr1!
	  system-hunk3-set-cxr2!
	  system-list->vector
	  system-pair-car
	  system-pair-cdr
	  system-pair-cons
	  system-pair-set-car!
	  system-pair-set-cdr!
	  system-pair?
	  system-subvector->list
	  system-vector-length
	  system-vector-ref
	  system-vector-set!
	  system-vector?
	  true-procedure
	  type-code->gc-type
	  unbind-variable
	  undefined-value?
	  unspecific
	  user-initial-environment
	  user-initial-prompt
	  values
	  wait-interval
	  with-history-disabled
	  with-interrupt-mask
	  with-values
	  write-to-string)
  (initialization (initialize-package!)))

(define-package (runtime alternative-lambda)
  (files "lambdx")
  (parent (runtime))
  (export ()
	  lambda-components*
	  lambda-components**
	  lambda-pattern/name
	  lambda-pattern/optional
	  lambda-pattern/required
	  lambda-pattern/rest
	  lambda-pattern?
	  make-lambda*
	  make-lambda**
	  make-lambda-pattern))

(define-package (runtime merge-sort)
  (files "msort")
  (parent (runtime))
  (export ()
	  merge-sort
	  merge-sort!
	  sort
	  sort!))

(define-package (runtime quick-sort)
  (files "qsort")
  (parent (runtime))
  (export ()
	  quick-sort
	  quick-sort!))

(define-package (runtime simple-queue)
  (files "queue")
  (parent (runtime))
  (export ()
	  make-queue
	  queue-empty?
	  queued?/unsafe
	  enqueue!/unsafe
	  dequeue!/unsafe
	  queue-map!/unsafe
	  queue->list/unsafe
	  queued?
	  enqueue!
	  dequeue!
	  queue-map!
	  queue->list))

(define-package (runtime simple-file-ops)
  (files "sfile")
  (parent (runtime))
  (export ()
	  <mime-type>
	  allocate-temporary-file
	  associate-pathname-type-with-mime-type
	  call-with-temporary-file-pathname
	  call-with-temporary-filename
	  current-file-time
	  deallocate-temporary-file
	  delete-directory
	  delete-file
	  delete-file-no-errors
	  directory-file-names
	  disassociate-pathname-type-from-mime-type
	  error:not-mime-token
	  error:not-mime-token-string
	  error:not-mime-type
	  error:not-mime-type-string
	  file-access
	  file-directory?
	  file-eq?
	  file-executable?
	  file-exists-direct?
	  file-exists-indirect?
	  file-exists?
	  file-modification-time<=?
	  file-modification-time<?
	  file-processed?
	  file-readable?
	  file-regular?
	  file-soft-link?
	  file-symbolic-link?
	  file-touch
	  file-type-direct
	  file-type-indirect
	  file-writable?
	  file-writeable?
	  guarantee-init-file-directory
	  guarantee-init-file-specifier
	  guarantee-mime-token
	  guarantee-mime-token-string
	  guarantee-mime-type
	  guarantee-mime-type-string
	  hard-link-file
	  init-file-specifier?
	  make-directory
	  make-mime-type
	  mime-token-string?
	  mime-token?
	  mime-type->string
	  mime-type-string?
	  mime-type/subtype
	  mime-type/top-level
	  mime-type?
	  open-input-init-file
	  open-output-init-file
	  pathname-mime-type
	  pathname-type->mime-type
	  rename-file
	  soft-link-file
	  string->mime-type)
  (initialization (initialize-package!)))

(define-package (runtime symbol)
  (files "symbol")
  (parent (runtime))
  (export ()
	  guarantee-interned-symbol
	  guarantee-symbol
	  guarantee-uninterned-symbol
	  intern
	  intern-soft
	  interned-symbol?
	  string->symbol
	  string->uninterned-symbol
	  string-head->symbol
	  string-tail->symbol
	  substring->symbol
	  symbol
	  symbol->string
	  symbol->utf8-string
	  symbol->wide-string
	  symbol-append
	  symbol-hash
	  symbol-hash-mod
	  symbol-name
	  symbol<?
	  symbol?
	  uninterned-symbol?
	  utf8-string->symbol
	  utf8-string->uninterned-symbol))

(define-package (runtime microcode-data)
  (files "udata")
  (parent (runtime))
  (export ()
	  compiled-code-address->block
	  compiled-code-address->offset
	  compiled-code-address?
	  compiled-code-block/bytes-per-object
	  compiled-code-block/code-end
	  compiled-code-block/code-length
	  compiled-code-block/code-start
	  compiled-code-block/constants-end
	  compiled-code-block/constants-start
	  compiled-code-block/debugging-info
	  compiled-code-block/debugging-info?
	  compiled-code-block/environment
	  compiled-code-block/index->offset
	  compiled-code-block/manifest-closure?
	  compiled-code-block/marked-start
	  compiled-code-block/offset->index
	  compiled-code-block/read-file
	  compiled-code-block?
	  compiled-continuation/next-continuation-offset
	  compiled-continuation/reflect-to-interface?
	  compiled-continuation/return-to-interpreter?
	  compiled-entry-type
	  compiled-expression?
	  compiled-return-address?
	  discriminate-compiled-entry
	  environment-extension-aux-list
	  environment-extension-parent
	  environment-extension-procedure
	  environment-extension?
	  force
	  interpreter-return-address?
	  make-return-address
	  microcode-error
	  microcode-return
	  microcode-termination
	  microcode-type
	  promise-environment
	  promise-expression
	  promise-forced?
	  promise-non-expression?
	  promise-value
	  promise?
	  return-address/code
	  return-address/name
	  return-address?
	  set-compiled-code-block/debugging-info!
	  set-environment-extension-parent!
	  stack-address->index
	  stack-address-offset
	  stack-address?))

(define-package (runtime vector)
  (files "vector")
  (parent (runtime))
  (export ()
	  for-each-vector-element
	  guarantee-subvector
	  guarantee-vector
	  guarantee-vector-of-type
	  guarantee-vector-of-unique-symbols
	  list->vector
	  make-initialized-vector
	  make-vector
	  subvector
	  subvector->list
	  subvector-fill!
	  subvector-filled?
	  subvector-find-next-element
	  subvector-find-next-element-not
	  subvector-find-previous-element
	  subvector-find-previous-element-not
	  subvector-move-left!
	  subvector-move-right!
	  subvector-uniform?
	  vector
	  vector->list
	  vector-append
	  vector-binary-search
	  vector-copy
	  vector-eighth
	  vector-fifth
	  vector-fill!
	  vector-filled?
	  vector-find-next-element
	  vector-find-previous-element
	  vector-first
	  vector-for-each
	  vector-fourth
	  vector-grow
	  vector-head
	  vector-length
	  vector-map
	  vector-move!
	  vector-of-type?
	  vector-of-unique-symbols?
	  vector-ref
	  vector-second
	  vector-set!
	  vector-seventh
	  vector-sixth
	  vector-tail
	  vector-third
	  vector-uniform?
	  vector?))

(define-package (runtime os-primitives)
  (parent (runtime))
  (export ()
	  copy-file
	  current-home-directory
	  current-user-name
	  decode-file-time
	  decoded-time->file-time
	  default-line-ending
	  encode-file-time
	  file-access-time
	  file-access-time-direct
	  file-access-time-indirect
	  file-attributes
	  file-attributes-direct
	  file-attributes-indirect
	  file-attributes/access-time
	  file-attributes/change-time
	  file-attributes/length
	  file-attributes/mode-string
	  file-attributes/modification-time
	  file-attributes/n-links
	  file-attributes/type
	  file-length
	  file-line-ending
	  file-modes
	  file-modification-time
	  file-modification-time-direct
	  file-modification-time-indirect
	  file-time->global-decoded-time
	  file-time->local-decoded-time
	  file-time->universal-time
	  get-environment-variable
	  init-file-specifier->pathname
	  os/exec-path
	  os/executable-pathname-types
	  os/find-program
	  os/form-shell-command
	  os/make-subprocess
	  os/parse-path-string
	  os/shell-file-name
	  os/suffix-mime-type
	  set-file-modes!
	  set-file-times!
	  temporary-directory-pathname
	  temporary-file-pathname
	  universal-time->file-time
	  user-home-directory)
  (initialization (initialize-system-primitives!)))

(os-type-case
 ((unix)
  (extend-package (runtime os-primitives)
    (files "unxprm")
    (export ()
	    delete-environment-variable!
	    file-attributes/gid
	    file-attributes/inode-number
	    file-attributes/uid
	    set-environment-variable!
	    unix/current-gid
	    unix/current-pid
	    unix/current-uid
	    unix/gid->string
	    unix/system
	    unix/uid->string)))
 ((nt)
  (extend-package (runtime os-primitives)
    (files "ntprm")
    (export ()
	    console-channel-descriptor
	    delete-environment-variable!
	    dos/fs-drive-type
	    dos/fs-long-filenames?
	    file-attributes/gid
	    file-attributes/inode-number
	    file-attributes/modes
	    file-attributes/uid
	    nt-file-mode/archive
	    nt-file-mode/compressed
	    nt-file-mode/directory
	    nt-file-mode/hidden
	    nt-file-mode/normal
	    nt-file-mode/read-only
	    nt-file-mode/system
	    nt-file-mode/temporary
	    nt-fs-flag/case-preserved-names
	    nt-fs-flag/case-sensitive-search
	    nt-fs-flag/file-compression
	    nt-fs-flag/persistent-acls
	    nt-fs-flag/unicode-on-disk
	    nt-fs-flag/volume-is-compressed
	    nt-volume-info
	    nt-volume-info/file-system-flags
	    nt-volume-info/file-system-name
	    nt-volume-info/max-component-length
	    nt-volume-info/name
	    nt-volume-info/serial-number
	    nt/hide-subprocess-windows?
	    nt/scheme-executable-pathname
	    nt/subprocess-argument-escape-char
	    nt/subprocess-argument-quote-char
	    nt/system-root-directory
	    nt/windows-type
	    set-environment-variable!
	    set-environment-variable-default!)))
 ((os/2)
  (extend-package (runtime os-primitives)
    (files "os2prm")
    (export ()
	    dos/fs-drive-type
	    dos/fs-long-filenames?
	    file-attributes/allocated-length
	    file-attributes/modes
	    os2-file-mode/archived
	    os2-file-mode/directory
	    os2-file-mode/hidden
	    os2-file-mode/read-only
	    os2-file-mode/system
	    os2/current-pid
	    os2/system-root-directory))))

(define-package (runtime string)
  (files "string")
  (parent (runtime))
  (export ()
	  (guarantee-vector-8b guarantee-string)
	  (set-vector-8b-length! set-string-length!)
	  (set-vector-8b-maximum-length! set-string-maximum-length!)
	  (vector-8b-length string-length)
	  (vector-8b-maximum-length string-maximum-length)
	  (vector-8b? string?)
	  allocate-external-string
	  burst-string
	  char->string
	  decorated-string-append
	  external-string-length
	  external-string?
	  guarantee-string
	  guarantee-string-index
	  guarantee-substring
	  guarantee-substring-end-index
	  guarantee-substring-start-index
	  hexadecimal->vector-8b
	  list->string
	  make-string
	  make-vector-8b
	  reverse-string
	  reverse-string!
	  reverse-substring
	  reverse-substring!
	  set-string-length!
	  set-string-maximum-length!
	  string
	  string->list
	  string-allocate
	  string-append
	  string-capitalize
	  string-capitalize!
	  string-capitalized?
	  string-ci<=?
	  string-ci<?
	  string-ci=?
	  string-ci>=?
	  string-ci>?
	  string-compare
	  string-compare-ci
	  string-copy
	  string-downcase
	  string-downcase!
	  string-fill!
	  string-find-next-char
	  string-find-next-char-ci
	  string-find-next-char-in-set
	  string-find-previous-char
	  string-find-previous-char-ci
	  string-find-previous-char-in-set
	  string-hash
	  string-hash-mod
	  string-head
	  string-length
	  string-lower-case?
	  string-match-backward
	  string-match-backward-ci
	  string-match-forward
	  string-match-forward-ci
	  string-maximum-length
	  string-move!
	  string-null?
	  string-pad-left
	  string-pad-right
	  string-prefix-ci?
	  string-prefix?
	  string-ref
	  string-replace
	  string-replace!
	  string-search-all
	  string-search-backward
	  string-search-forward
	  string-set!
	  string-suffix-ci?
	  string-suffix?
	  string-tail
	  string-trim
	  string-trim-left
	  string-trim-right
	  string-upcase
	  string-upcase!
	  string-upper-case?
	  string<=?
	  string<?
	  string=?
	  string>=?
	  string>?
	  string?
	  substring
	  substring->list
	  substring-capitalize!
	  substring-capitalized?
	  substring-ci<?
	  substring-ci=?
	  substring-downcase!
	  substring-fill!
	  substring-find-next-char
	  substring-find-next-char-ci
	  substring-find-next-char-in-set
	  substring-find-previous-char
	  substring-find-previous-char-ci
	  substring-find-previous-char-in-set
	  substring-lower-case?
	  substring-match-backward
	  substring-match-backward-ci
	  substring-match-forward
	  substring-match-forward-ci
	  substring-move!
	  substring-move-left!
	  substring-move-right!
	  substring-prefix-ci?
	  substring-prefix?
	  substring-replace
	  substring-replace!
	  substring-search-all
	  substring-search-backward
	  substring-search-forward
	  substring-suffix-ci?
	  substring-suffix?
	  substring-upcase!
	  substring-upper-case?
	  substring<?
	  substring=?
	  substring?
	  vector-8b->hexadecimal
	  vector-8b-fill!
	  vector-8b-find-next-char
	  vector-8b-find-next-char-ci
	  vector-8b-find-previous-char
	  vector-8b-find-previous-char-ci
	  vector-8b-ref
	  vector-8b-set!
	  xstring-length
	  xstring-move!
	  xstring?
	  xsubstring-move!)
  (export (runtime primitive-io)
	  external-string-descriptor)
  (export (runtime generic-i/o-port)
	  %substring-move!)
  (initialization (initialize-package!)))

(define-package (runtime 1d-property)
  (files "prop1d")
  (parent (runtime))
  (export ()
	  1d-table/for-each
	  1d-table/alist
	  1d-table/get
	  1d-table/lookup
	  1d-table/put!
	  1d-table/remove!
	  1d-table?
	  make-1d-table)
  (initialization (initialize-package!)))

(define-package (runtime 2d-property)
  (files "prop2d")
  (parent (runtime))
  (export ()
	  2d-get
	  2d-get-alist-x
	  2d-get-alist-y
	  2d-put!
	  2d-remove!)
  (initialization (initialize-package!)))

(define-package (runtime advice)
  (files "advice")
  (parent (runtime))
  (export ()
	  *args*
	  *proc*
	  *result*
	  advice
	  advise-entry
	  advise-exit
	  break
	  break-both
	  break-entry
	  break-exit
	  entry-advice
	  exit-advice
	  trace
	  trace-both
	  trace-entry
	  trace-exit
	  unadvise
	  unadvise-entry
	  unadvise-exit
	  unbreak
	  unbreak-entry
	  unbreak-exit
	  untrace
	  untrace-entry
	  untrace-exit)
  (initialization (initialize-package!)))

(define-package (runtime apply)
  (files "apply")
  (parent (runtime))
  (initialization (initialize-package!)))

(define-package (runtime character)
  (files "char")
  (parent (runtime))
  (export ()
	  ascii->char
	  char->ascii
	  char->digit
	  char->integer
	  char->name
	  char-ascii?
	  char-bits
	  char-bits-limit
	  char-ci<=?
	  char-ci<?
	  char-ci=?
	  char-ci>=?
	  char-ci>?
	  char-code
	  char-code-limit
	  char-downcase
	  char-integer-limit
	  char-upcase
	  char<=?
	  char<?
	  char=?
	  char>=?
	  char>?
	  char?
	  chars->ascii
	  code->char
	  digit->char
	  error:not-char
	  error:not-radix
	  guarantee-char
	  guarantee-radix
	  integer->char
	  make-char
	  name->char
	  radix?)
  (export (runtime string)
	  %char<?
	  downcase-table
	  upcase-table)
  (initialization (initialize-package!)))

(define-package (runtime character-set)
  (files "chrset")
  (parent (runtime))
  (export ()
	  ascii-range->char-set
	  char-alphabetic?
	  char-alphanumeric?
	  char-graphic?
	  char-lower-case?
	  char-numeric?
	  char-set
	  char-set-difference
	  char-set-intersection
	  char-set-invert
	  char-set-member?
	  char-set-members
	  char-set-union
	  char-set:alphabetic
	  char-set:alphanumeric
	  char-set:graphic
	  char-set:lower-case
	  char-set:newline
	  char-set:not-alphabetic
	  char-set:not-alphanumeric
	  char-set:not-graphic
	  char-set:not-lower-case
	  char-set:not-numeric
	  char-set:not-standard
	  char-set:not-upper-case
	  char-set:not-whitespace
	  char-set:numeric
	  char-set:standard
	  char-set:upper-case
	  char-set:whitespace
	  char-set=?
	  char-set?
	  char-standard?
	  char-upper-case?
	  char-whitespace?
	  chars->char-set
	  guarantee-char-set
	  predicate->char-set
	  string->char-set)
  (export (runtime string)
	  %char-set-member?
	  char-set-table)
  (export (runtime regular-expression-compiler)
	  make-char-set)
  (initialization (initialize-package!)))

(define-package (runtime compiler-info)
  (files "infstr" "infutl")
  (parent (runtime))
  (export ()
	  *save-uncompressed-files?*
	  *uncompressed-file-lifetime*
	  compiled-code-block/filename-and-index
	  compiled-entry/filename-and-index
	  compiled-entry/block
	  compiled-entry/dbg-object
	  compiled-entry/offset
	  compiled-expression/scode
	  compiled-procedure/name
	  compiled-procedure/lambda
	  discard-debugging-info!
	  load-debugging-info-on-demand?
	  uncompress-ports)
  (export (runtime load)
	  dbg-info-vector/purification-root
	  dbg-info-vector?
	  fasload/update-debugging-info!)
  (export (runtime program-copier)
	  dbg-info-vector?)
  (export (runtime debugger-command-loop)
	  special-form-procedure-name?)
  (export (runtime environment)
	  dbg-block/find-name
	  dbg-block/ic-parent-index
	  dbg-block/layout
	  dbg-block/layout-first-offset
	  dbg-block/layout-vector
	  dbg-block/normal-closure-index
	  dbg-block/original-parent
	  dbg-block/parent
	  dbg-block/procedure
	  dbg-block/stack-link
	  dbg-block/static-link-index
	  dbg-block/type
	  dbg-continuation?
	  dbg-continuation/block
	  dbg-continuation/offset
	  dbg-expression?
	  dbg-procedure?
	  dbg-procedure/block
	  dbg-procedure/name
	  dbg-procedure/required
	  dbg-procedure/optional
	  dbg-procedure/rest
	  dbg-procedure/source-code
	  dbg-variable/name
	  dbg-variable/type
	  dbg-variable/value
	  dbg-variable?)
  (export (runtime debugging-info)
	  dbg-continuation?
	  dbg-continuation/source-code
	  dbg-procedure?
	  dbg-procedure/block
	  dbg-procedure/source-code
	  dbg-expression?)
  (export (runtime compress)
	  uncompress-internal)
  (export (runtime options)
	  with-directory-rewriting-rule)
  (export (runtime continuation-parser)
	  )
  (initialization (initialize-package!)))

(define-package (runtime console-i/o-port)
  (files "ttyio")
  (parent (runtime))
  (export ()
	  console-i/o-port
	  console-i/o-port?
	  console-input-port
	  console-output-port
	  set-console-i/o-port!)
  (export (runtime emacs-interface)
	  the-console-port)
  (initialization (initialize-package!)))

(define-package (runtime continuation)
  (files "contin")
  (parent (runtime))
  (export ()
	  call-with-current-continuation
	  continuation/block-thread-events?
	  continuation/control-point
	  continuation/dynamic-state
	  continuation?
	  error:not-continuation
	  guarantee-continuation
	  make-continuation
	  within-continuation)
  (export (runtime thread)
	  %within-continuation))

(define-package (runtime continuation-parser)
  (files "conpar")
  (parent (runtime))
  (export ()
	  continuation->stack-frame
	  continuation/first-subproblem
	  hardware-trap-frame?
	  hardware-trap-frame/describe
	  hardware-trap-frame/print-registers
	  hardware-trap-frame/print-stack
	  hardware-trap-frame/code
	  microcode-return/code->type
	  microcode-return/name->type
	  stack-frame->continuation
	  stack-frame-type/code
	  stack-frame-type/compiled-return-address
	  stack-frame-type/properties
	  stack-frame-type/subproblem?
	  stack-frame-type?
	  stack-frame/block-thread-events?
	  stack-frame/compiled-code?
	  stack-frame/dynamic-state
	  stack-frame/elements
	  stack-frame/interrupt-mask
	  stack-frame/length
	  stack-frame/next
	  stack-frame/next-subproblem
	  stack-frame/offset
	  stack-frame/previous-type
	  stack-frame/properties
	  stack-frame/reductions
	  stack-frame/ref
	  stack-frame/repl-eval-boundary?
	  stack-frame/resolve-stack-address
	  stack-frame/return-address
	  stack-frame/return-code
	  stack-frame/skip-non-subproblems
	  stack-frame/subproblem?
	  stack-frame/type
	  stack-frame?)
  (export (runtime debugging-info)
	  stack-frame-type/interrupt-compiled-procedure
	  stack-frame-type/interrupt-compiled-expression)
  (initialization (initialize-package!)))

(define-package (runtime control-point)
  (files "cpoint")
  (parent (runtime))
  (export ()
	  control-point/element-stream
	  control-point/history
	  control-point/interrupt-mask
	  control-point/n-elements
	  control-point/next-control-point
	  control-point/previous-history-control-point
	  control-point/previous-history-offset
	  control-point?
	  make-control-point))

(define-package (runtime date/time)
  (files "datime")
  (parent (runtime))
  (export ()
	  ctime-string->decoded-time
	  ctime-string->file-time
	  ctime-string->universal-time
	  day-of-week/long-string
	  day-of-week/short-string
	  decode-universal-time
	  decoded-time->ctime-string
	  decoded-time->iso8601-string
	  decoded-time->string
	  decoded-time->universal-time
	  decoded-time/date-string
	  decoded-time/day
	  decoded-time/day-of-week
	  decoded-time/daylight-savings-time?
	  decoded-time/hour
	  decoded-time/minute
	  decoded-time/month
	  decoded-time/second
	  decoded-time/time-string
	  decoded-time/year
	  decoded-time/zone
	  decoded-time?
	  encode-universal-time
	  epoch
	  file-time->global-ctime-string
	  file-time->global-iso8601-string
	  file-time->global-time-string
	  file-time->local-ctime-string
	  file-time->local-iso8601-string
	  file-time->local-time-string
	  file-time->string
	  get-decoded-time
	  get-universal-time
	  global-decoded-time
	  iso8601-string->decoded-time
	  iso8601-string->file-time
	  iso8601-string->universal-time
	  local-decoded-time
	  make-decoded-time
	  month/long-string
	  month/max-days
	  month/short-string
	  string->day-of-week
	  string->decoded-time
	  string->file-time
	  string->month
	  string->time-zone
	  string->universal-time
	  time-zone->string
	  time-zone?
	  universal-time->global-ctime-string
	  universal-time->global-decoded-time
	  universal-time->global-iso8601-string
	  universal-time->global-time-string
	  universal-time->local-ctime-string
	  universal-time->local-decoded-time
	  universal-time->local-iso8601-string
	  universal-time->local-time-string
	  universal-time->string))

(define-package (runtime debugger)
  (files "debug")
  (parent (runtime debugger-command-loop))
  (export ()
	  debug
	  debugger:auto-toggle?
	  debugger:count-subproblems-limit
	  debugger:list-breadth-limit
	  debugger:list-depth-limit
	  debugger:print-return-values?
	  debugger:string-length-limit
	  debugger:student-walk?
	  debugger:use-history?)
  (initialization (initialize-package!)))

(define-package (runtime debugger-command-loop)
  (files "dbgcmd")
  (parent (runtime))
  (initialization (initialize-package!)))

(define-package (runtime debugger-utilities)
  (files "dbgutl")
  (parent (runtime debugger-command-loop))
  (export (runtime debugger-command-loop)
	  debug/read-eval-print-1
	  debugger-failure
	  debugger-message
	  debugger-presentation
	  output-to-string
	  print-user-friendly-name
	  show-environment-bindings
	  show-environment-name
	  show-environment-procedure
	  show-frame
	  show-frames
	  write-dbg-name)
  (initialization (initialize-package!)))

(define-package (runtime debugging-info)
  (files "framex")
  (parent (runtime))
  (export ()
	  debugging-info/compiled-code?
	  debugging-info/evaluated-object-value
	  debugging-info/evaluated-object?
	  debugging-info/undefined-environment?
	  debugging-info/undefined-expression?
	  debugging-info/unknown-expression?
	  debugging-info/noise
	  debugging-info/noise?
	  stack-frame/debugging-info)
  (initialization (initialize-package!)))

(define-package (runtime directory)
  (parent (runtime))
  (export (runtime pathname)
	  *expand-directory-prefixes?*)
  (export ()
	  directory-read))

(os-type-case
 ((unix)
  (extend-package (runtime directory)
    (files "unxdir")))
 ((nt)
  (extend-package (runtime directory)
    (files "ntdir")))
 ((os/2)
  (extend-package (runtime directory)
    (files "os2dir"))))

(define-package (runtime emacs-interface)
  (files "emacs")
  (parent (runtime))
  (initialization (initialize-package!)))

(define-package (runtime procedure)
  (files "uproc")
  (parent (runtime))
  (export ()
	  apply-hook-extra
	  apply-hook-procedure
	  apply-hook?
	  arity-dispatched-procedure?
	  compiled-closure->entry
	  compiled-closure/ref
	  compiled-closure/set!
	  compiled-closure?
	  compiled-procedure?
	  compound-procedure?
	  entity-extra
	  entity-procedure
	  entity?
	  error:not-compiled-procedure
	  error:not-compound-procedure
	  error:not-primitive-procedure
	  error:not-procedure
	  error:not-procedure-arity
	  guarantee-compiled-procedure
	  guarantee-compound-procedure
	  guarantee-primitive-procedure
	  guarantee-procedure
	  guarantee-procedure-arity
	  guarantee-procedure-of-arity
	  implemented-primitive-procedure?
	  make-apply-hook
	  make-arity-dispatched-procedure
	  make-entity
	  make-primitive-procedure
	  make-procedure-arity
	  primitive-procedure-name
	  primitive-procedure?
	  procedure-arity
	  procedure-arity-max
	  procedure-arity-min
	  procedure-arity-valid?
	  procedure-arity?
	  procedure-components
	  procedure-environment
	  procedure-lambda
	  procedure-of-arity?
	  procedure?
	  set-apply-hook-extra!
	  set-apply-hook-procedure!
	  set-entity-extra!
	  set-entity-procedure!
	  thunk?)
  (export (runtime continuation-parser)
	  compiled-procedure-frame-size))

(define-package (runtime environment)
  (files "uenvir")
  (parent (runtime))
  (export ()
	  compiled-procedure/environment
	  environment-arguments
	  environment-assign!
	  environment-assignable?
	  environment-assigned?
	  environment-bindings
	  environment-bound-names
	  environment-bound?
	  environment-definable?
	  environment-define
	  environment-define-macro
	  environment-has-parent?
	  environment-lambda
	  environment-lookup
	  environment-lookup-macro
	  environment-macro-names
	  environment-parent
	  environment-procedure-name
	  environment-reference-type
	  environment-safe-lookup
	  environment?
	  (extend-ic-environment extend-top-level-environment)
	  extend-top-level-environment
	  guarantee-environment
	  ic-environment?
	  interpreter-environment?
	  (make-null-interpreter-environment make-root-top-level-environment)
	  make-root-top-level-environment
	  make-top-level-environment
	  system-global-environment?
	  (top-level-environment? interpreter-environment?))
  (export (runtime advice)
	  ic-environment/arguments
	  ic-environment/procedure)
  (export (runtime debugging-info)
	  stack-frame/environment)
  (initialization (initialize-package!)))

(define-package (runtime environment-inspector)
  (files "where")
  (parent (runtime debugger-command-loop))
  (export ()
	  where)
  (initialization (initialize-package!)))

(define-package (runtime error-handler)
  (files "error")
  (parent (runtime))
  (export ()
	  abort
	  access-condition
	  bind-condition-handler
	  bind-default-condition-handler
	  bind-restart
	  bound-restarts
	  break-on-signals
	  condition-accessor
	  condition-constructor
	  condition-of-type?
	  condition-predicate
	  condition-signaller
	  condition-type/error?
	  condition-type/field-names
	  condition-type/generalizations
	  condition-type/get
	  condition-type/properties
	  condition-type/put!
	  condition-type:arithmetic-error
	  condition-type:bad-range-argument
	  condition-type:cell-error
	  condition-type:control-error
	  condition-type:datum-out-of-range
	  condition-type:derived-file-error
	  condition-type:derived-port-error
	  condition-type:derived-thread-error
	  condition-type:divide-by-zero
	  condition-type:error
	  condition-type:file-error
	  condition-type:file-operation-error
	  condition-type:floating-point-overflow
	  condition-type:floating-point-underflow
	  condition-type:illegal-datum
	  condition-type:illegal-pathname-component
	  condition-type:macro-binding
	  condition-type:no-such-restart
	  condition-type:not-8-bit-char
	  condition-type:port-error
	  condition-type:serious-condition
	  condition-type:simple-condition
	  condition-type:simple-error
	  condition-type:simple-warning
	  condition-type:thread-error
	  condition-type:unassigned-variable
	  condition-type:unbound-variable
	  condition-type:variable-error
	  condition-type:warning
	  condition-type:wrong-number-of-arguments
	  condition-type:wrong-type-argument
	  condition-type:wrong-type-datum
	  condition-type?
	  condition/continuation
	  condition/derived-thread?
	  condition/error?
	  condition/get
	  condition/other-thread
	  condition/properties
	  condition/put!
	  condition/report-string
	  condition/restarts
	  condition/type
	  condition?
	  continue
	  default/invoke-condition-handler
	  error
	  error-irritant/noise
	  error:bad-range-argument
	  error:datum-out-of-range
	  error:derived-file
	  error:derived-port
	  error:derived-thread
	  error:divide-by-zero
	  error:file-operation
	  error:illegal-pathname-component
	  error:no-such-restart
	  error:not-8-bit-char
	  error:wrong-number-of-arguments
	  error:wrong-type-argument
	  error:wrong-type-datum
	  find-restart
	  first-bound-restart
	  format-error-message
	  hook/invoke-condition-handler
	  ignore-errors
	  invoke-restart
	  invoke-restart-interactively
	  make-condition
	  make-condition-type
	  muffle-warning
	  restart/effector
	  restart/get
	  restart/interactor
	  restart/name
	  restart/properties
	  restart/put!
	  restart?
	  retry
	  signal-condition
	  standard-error-handler
	  standard-error-hook
	  standard-warning-handler
	  standard-warning-hook
	  store-value
	  use-value
	  warn
	  with-restart
	  with-simple-restart
	  write-condition-report
	  write-restart-report)
  (export (runtime microcode-errors)
	  write-operator)
  (export (runtime rep)
	  *bound-restarts*
	  dynamic-handler-frames)
  (export (runtime debugger)
	  continue-from-derived-thread-error)
  (export (runtime stream)
	  ordinal-number-string
	  write-operator)
  (export (runtime environment)
	  error:macro-binding
	  error:unassigned-variable
	  error:unbound-variable)
  (initialization (initialize-package!)))

(define-package (runtime event-distributor)
  (files "events")
  (parent (runtime))
  (export ()
	  add-event-receiver!
	  event-distributor/invoke!
	  event-distributor/receivers
	  event-distributor?
	  make-event-distributor
	  remove-event-receiver!)
  (initialization (initialize-package!)))

(define-package (runtime extended-scode-eval)
  (files "xeval")
  (parent (runtime))
  (export ()
	  extended-scode-eval
	  hook/extended-scode-eval)
  (initialization (initialize-package!)))

(define-package (runtime file-i/o-port)
  (files "fileio")
  (parent (runtime))
  (export ()
	  call-with-append-file
	  call-with-binary-append-file
	  call-with-binary-input-file
	  call-with-binary-output-file
	  call-with-input-file
	  call-with-output-file
	  open-binary-i/o-file
	  open-binary-input-file
	  open-binary-output-file
	  open-i/o-file
	  open-input-file
	  open-output-file
	  with-input-from-binary-file
	  with-input-from-file
	  with-output-to-binary-file
	  with-output-to-file)
  (initialization (initialize-package!)))

(define-package (runtime transcript)
  (files "tscript")
  (parent (runtime))
  (export ()
	  transcript-off
	  transcript-on)
  (initialization (initialize-package!)))

(define-package (runtime format)
  (file-case options
    ((load) "format")
    (else))
  (parent (runtime))
  (export ()
	  format)
  (initialization (initialize-package!)))

(define-package (runtime garbage-collector)
  (files "gc")
  (parent (runtime))
  (export ()
	  constant-space/in-use
	  flush-purification-queue!
	  gc-flip
	  purify
	  set-gc-safety-margin!)
  (export (runtime gc-statistics)
	  hook/gc-finish
	  hook/gc-start)
  (export (runtime error-handler)
	  hook/hardware-trap)
  (initialization (initialize-package!)))

(define-package (runtime gc-daemons)
  (files "gcdemn")
  (parent (runtime))
  (export ()
	  add-gc-daemon!
	  add-gc-daemon!/no-restore
	  add-secondary-gc-daemon!
	  gc-clean
	  trigger-secondary-gc-daemons!)
  (export (runtime hash)
	  add-primitive-gc-daemon!)
  (export (runtime hash-table)
	  add-primitive-gc-daemon!)
  (export (runtime generic-procedure eqht)
	  add-primitive-gc-daemon!)
  (export (runtime interrupt-handler)
	  trigger-gc-daemons!)
  (initialization (initialize-package!)))

(define-package (runtime gc-finalizer)
  (files "gcfinal")
  (parent (runtime))
  (export ()
	  add-to-gc-finalizer!
	  gc-finalizer-elements
	  gc-finalizer?
	  make-gc-finalized-object
	  make-gc-finalizer
	  remove-all-from-gc-finalizer!
	  remove-from-gc-finalizer!
	  search-gc-finalizer)
  (initialization (initialize-package!)))

(define-package (runtime gc-notification)
  (files "gcnote")
  (parent (runtime))
  (export ()
	  gc-statistic->string
	  print-gc-statistics
	  set-gc-notification!
	  toggle-gc-notification!
	  with-gc-notification!))

(define-package (runtime gc-statistics)
  (files "gcstat")
  (parent (runtime))
  (export ()
	  gc-history-mode
	  gc-statistic/heap-left
	  gc-statistic/last-gc-end
	  gc-statistic/last-gc-start
	  gc-statistic/last-gc-end-clock
	  gc-statistic/last-gc-start-clock
	  gc-statistic/meter
	  gc-statistic/this-gc-end
	  gc-statistic/this-gc-start
	  gc-statistic/this-gc-end-clock
	  gc-statistic/this-gc-start-clock
	  gc-statistics
	  gc-timestamp
	  gctime)
  (export (runtime gc-notification)
	  default/record-statistic!
	  hook/record-statistic!)
  (initialization (initialize-package!)))

(define-package (runtime generic-i/o-port)
  (files "genio")
  (parent (runtime))
  (export ()
	  make-generic-i/o-port)
  (export (runtime console-i/o-port)
	  generic-i/o-type
	  generic-io/char-ready?
	  generic-io/flush-output
	  generic-io/read-char
	  input-buffer-contents
	  make-gstate
	  port-input-buffer
	  set-input-buffer-contents!)
  (export (runtime file-i/o-port)
	  generic-i/o-type
	  generic-input-type
	  generic-output-type
	  make-gstate)
  (initialization (initialize-package!)))

(define-package (runtime gensym)
  (files "gensym")
  (parent (runtime))
  (export ()
	  generate-uninterned-symbol)
  (initialization (initialize-package!)))

(define-package (runtime global-database)
  (files "gdatab")
  (parent (runtime))
  (export ()
	  add-unparser-special-object!
	  add-unparser-special-pair!
	  event:after-restart
	  event:after-restore
	  event:before-exit
	  named-structure/get-tag-description
	  named-structure/set-tag-description!
	  unparse-with-brackets
	  unparser/set-tagged-pair-method!
	  unparser/set-tagged-vector-method!
	  unparser/tagged-pair-method
	  unparser/tagged-vector-method)
  (initialization (initialize-package!)))

(define-package (runtime hash)
  (files "hash")
  (parent (runtime))
  (export ()
	  hash
	  hash-table/make
	  object-hash
	  object-hashed?
	  object-unhash
	  unhash
	  valid-hash-number?)
  (initialization (initialize-package!)))

(define-package (runtime hash-table)
  (files "hashtb")
  (parent (runtime))
  (export ()
	  eq-hash
	  eq-hash-mod
	  equal-hash
	  equal-hash-mod
	  eqv-hash
	  eqv-hash-mod
	  hash-table->alist
	  hash-table/clean!
	  hash-table/clear!
	  hash-table/count
	  hash-table/datum-list
	  hash-table/for-each
	  hash-table/get
	  hash-table/intern!
	  hash-table/key-hash
	  hash-table/key-list
	  hash-table/key=?
	  hash-table/lookup
	  hash-table/put!
	  hash-table/rehash-size
	  hash-table/rehash-threshold
	  hash-table/remove!
	  hash-table/size
	  hash-table?
	  make-eq-hash-table
	  make-equal-hash-table
	  make-eqv-hash-table
	  make-object-hash-table
	  make-string-hash-table
	  make-strong-eq-hash-table
	  make-strong-eqv-hash-table
	  make-symbol-hash-table
	  set-hash-table/rehash-size!
	  set-hash-table/rehash-threshold!
	  strong-hash-table/constructor
	  weak-hash-table/constructor)
  (initialization (initialize-package!)))

(define-package (runtime history)
  (files "histry")
  (parent (runtime))
  (export ()
	  with-new-history)
  (export (runtime continuation-parser)
	  history-reductions
	  history-superproblem
	  history-transform
	  history-untransform)
  (initialization (initialize-package!)))

(define-package (runtime krypt)
  (file-case options
    ((load) "krypt")
    (else))
  (parent (runtime))
  (export ()
	  encrypt
	  decrypt))

(define-package (runtime compress)
  (file-case options
    ((load) "cpress")
    (else))
  (parent (runtime))
  (export ()
	  compress
	  uncompress
	  compress-ports))

(define-package (runtime port)
  (files "port")
  (parent (runtime))
  (export ()
	  close-input-port
	  close-output-port
	  close-port
	  current-input-port
	  current-output-port
	  guarantee-8-bit-char
	  guarantee-i/o-port
	  guarantee-input-port
	  guarantee-output-port
	  guarantee-port
	  guarantee-port-type
	  i/o-port-type?
	  i/o-port?
	  input-port-type?
	  input-port?
	  interaction-i/o-port
	  make-port
	  make-port-type
	  notification-output-port
	  output-port-type?
	  output-port?
	  port-type/char-ready?
	  port-type/discard-char
	  port-type/discretionary-flush-output
	  port-type/flush-output
	  port-type/fresh-line
	  port-type/operation
	  port-type/operation-names
	  port-type/operations
	  port-type/peek-char
	  port-type/read-char
	  port-type/read-external-substring
	  port-type/read-substring
	  port-type/read-wide-substring
	  port-type/unread-char
	  port-type/write-char
	  port-type/write-external-substring
	  port-type/write-substring
	  port-type/write-wide-substring
	  port-type?
	  port/coding
	  port/copy
	  port/input-blocking-mode
	  port/input-channel
	  port/input-terminal-mode
	  port/known-coding?
	  port/known-codings
	  port/known-line-ending?
	  port/known-line-endings
	  port/line-ending
	  port/operation
	  port/operation-names
	  port/output-blocking-mode
	  port/output-channel
	  port/output-terminal-mode
	  port/set-coding
	  port/set-input-blocking-mode
	  port/set-input-terminal-mode
	  port/set-line-ending
	  port/set-output-blocking-mode
	  port/set-output-terminal-mode
	  port/state
	  port/supports-coding?
	  port/thread-mutex
	  port/type
	  port/with-input-blocking-mode
	  port/with-input-terminal-mode
	  port/with-output-blocking-mode
	  port/with-output-terminal-mode
	  port=?
	  port?
	  set-current-input-port!
	  set-current-output-port!
	  set-interaction-i/o-port!
	  set-notification-output-port!
	  set-port/state!
	  set-trace-output-port!
	  trace-output-port
	  with-input-from-port
	  with-interaction-i/o-port
	  with-notification-output-port
	  with-output-to-port
	  with-trace-output-port)
  (export (runtime input-port)
	  port/operation/char-ready?
	  port/operation/discard-char
	  port/operation/peek-char
	  port/operation/read-char
	  port/operation/read-external-substring
	  port/operation/read-substring
	  port/operation/read-wide-substring
	  port/operation/unread-char)
  (export (runtime output-port)
	  port/operation/discretionary-flush-output
	  port/operation/flush-output
	  port/operation/fresh-line
	  port/operation/write-char
	  port/operation/write-external-substring
	  port/operation/write-substring
	  port/operation/write-wide-substring)
  (export (runtime transcript)
	  port/transcript
	  set-port/transcript!)
  (export (runtime rep)
	  *current-input-port*
	  *current-output-port*
	  *interaction-i/o-port*
	  *notification-output-port*
	  *trace-output-port*)
  (export (runtime emacs-interface)
	  set-port/thread-mutex!
	  set-port/type!
	  standard-port-accessors))

(define-package (runtime input-port)
  (files "input")
  (parent (runtime))
  (export ()
	  char-ready?
	  discard-char
	  eof-object?
	  input-port/char-ready?
	  input-port/discard-char
	  input-port/discard-chars
	  input-port/peek-char
	  input-port/read-char
	  input-port/read-line
	  input-port/read-string
	  input-port/read-external-string!
	  input-port/read-external-substring!
	  input-port/read-string!
	  input-port/read-substring!
	  input-port/read-wide-string!
	  input-port/read-wide-substring!
	  input-port/unread-char
	  make-eof-object
	  peek-char
	  read
	  read-char
	  read-char-no-hang
	  read-line
	  read-string
	  read-string!
	  read-substring!
	  unread-char))

(define-package (runtime output-port)
  (files "output")
  (parent (runtime))
  (export ()
	  beep
	  clear
	  display
	  flush-output
	  fresh-line
	  newline
	  output-port/column
	  output-port/discretionary-flush
	  output-port/flush-output
	  output-port/fresh-line
	  output-port/write-char
	  output-port/write-object
	  output-port/write-external-string
	  output-port/write-external-substring
	  output-port/write-string
	  output-port/write-substring
	  output-port/write-wide-string
	  output-port/write-wide-substring
	  output-port/x-size
	  output-port/y-size
	  write
	  write-char
	  write-line
	  write-string
	  write-strings-in-columns
	  write-substring))

(define-package (runtime interrupt-handler)
  (files "intrpt")
  (parent (runtime))
  (export (runtime emacs-interface)
	  hook/^G-interrupt
	  hook/clean-input/flush-typeahead)
  (export (runtime load)
	  generate-suspend-file?)
  (initialization (initialize-package!)))

(define-package (runtime lambda-abstraction)
  (files "lambda")
  (parent (runtime))
  (export ()
	  block-declaration?
	  block-declaration-text
	  lambda?
	  lambda-body
	  lambda-bound
	  lambda-components
	  lambda-name
	  make-block-declaration
	  make-lambda
	  set-lambda-body!)
  (export (runtime advice)
	  lambda-unwrap-body!
	  lambda-wrap-body!
	  lambda-wrapper-components)
  (export (runtime environment)
	  internal-lambda?
	  lambda-names-vector
	  make-slambda)
  (export (runtime compiler-info)
	  lambda-tag:internal-lambda
	  lambda-tag:internal-lexpr)
  (initialization (initialize-package!)))

(define-package (runtime list)
  (files "list")
  (parent (runtime))
  (export ()
	  (list-search-negative find-non-matching-item)
	  (list-search-positive find-matching-item)
	  (list-transform-negative delete-matching-items)
	  (list-transform-positive keep-matching-items)
	  add-member-procedure
	  alist->keyword-list
	  alist-copy
	  alist?
	  append
	  append!
	  append-map
	  append-map!
	  append-map*
	  append-map*!
	  assoc
	  association-procedure
	  assq
	  assv
	  caaaar
	  caaadr
	  caaar
	  caadar
	  caaddr
	  caadr
	  caar
	  cadaar
	  cadadr
	  cadar
	  caddar
	  cadddr
	  caddr
	  cadr
	  car
	  cdaaar
	  cdaadr
	  cdaar
	  cdadar
	  cdaddr
	  cdadr
	  cdar
	  cddaar
	  cddadr
	  cddar
	  cdddar
	  cddddr
	  cdddr
	  cddr
	  cdr
	  circular-list
	  cons
	  cons*
	  count-matching-items
	  count-non-matching-items
	  del-assoc
	  del-assoc!
	  del-assq
	  del-assq!
	  del-assv
	  del-assv!
	  delete
	  delete!
	  delete-association-procedure
	  delete-matching-items
	  delete-matching-items!
	  delete-member-procedure
	  delq
	  delq!
	  delv
	  delv!
	  eighth
	  error:not-alist
	  error:not-keyword-list
	  error:not-list
	  error:not-pair
	  error:not-restricted-keyword-list
	  error:not-unique-keyword-list
	  error:not-weak-list
	  except-last-pair
	  except-last-pair!
	  fifth
	  find-matching-item
	  find-non-matching-item
	  first
	  fold-left
	  fold-right
	  for-each
	  fourth
	  general-car-cdr
	  get-keyword-value
	  guarantee-alist
	  guarantee-keyword-list
	  guarantee-list
	  guarantee-list->length
	  guarantee-list-of-type
	  guarantee-list-of-type->length
	  guarantee-pair
	  guarantee-restricted-keyword-list
	  guarantee-unique-keyword-list
	  guarantee-weak-list
	  keep-matching-items
	  keyword-list->alist
	  keyword-list?
	  last-pair
	  length
	  list
	  list->weak-list
	  list-copy
	  list-deletor
	  list-deletor!
	  list-head
	  list-of-type?
	  list-of-type?->length
	  list-ref
	  list-tail
	  list?
	  list?->length
	  make-circular-list
	  make-initialized-list
	  make-list
	  map
	  map*
	  mapcan
	  mapcan*
	  member
	  member-procedure
	  memq
	  memv
	  ninth
	  null?
	  pair?
	  reduce
	  reduce-right
	  restricted-keyword-list?
	  reverse
	  reverse!
	  reverse*
	  reverse*!
	  second
	  set-car!
	  set-cdr!
	  seventh
	  sixth
	  sublist
	  tenth
	  third
	  tree-copy
	  unique-keyword-list?
	  weak-car
	  weak-cdr
	  weak-cons
	  weak-delq!
	  weak-list->list
	  weak-list?
	  weak-memq
	  weak-pair/car?
	  weak-pair?
	  weak-set-car!
	  weak-set-cdr!))

(define-package (runtime load)
  (files "load")
  (parent (runtime))
  (export ()
	  argument-command-line-parser
	  condition-type:not-loading
	  current-load-pathname
	  fasload
	  fasload-latest
	  fasload/default-types
	  load
	  load-latest
	  load-library-object-file
	  load-noisily
	  load-noisily?
	  load/default-find-pathname-with-type
	  load/default-types
	  load/loading?
	  load/purification-root
	  load/push-hook!
	  load/suppress-loading-message?
	  read-file
	  set-command-line-parser!
	  simple-command-line-parser)
  (initialization (initialize-package!)))

(define-package (runtime microcode-errors)
  (files "uerror")
  (parent (runtime error-handler))
  (export ()
	  condition-type:anomalous-microcode-error
	  condition-type:compiled-code-error
	  condition-type:fasdump-environment
	  condition-type:fasl-file-bad-data
	  condition-type:fasl-file-compiled-mismatch
	  condition-type:fasl-file-too-big
	  condition-type:fasload-band
	  condition-type:fasload-error
	  condition-type:hardware-trap
	  condition-type:impurify-object-too-large
	  condition-type:inapplicable-object
	  condition-type:out-of-file-handles
	  condition-type:primitive-io-error
	  condition-type:primitive-procedure-error
	  condition-type:system-call-error
	  condition-type:unimplemented-primitive
	  condition-type:unimplemented-primitive-for-os
	  condition-type:unlinkable-variable
	  condition-type:user-microcode-reset
	  condition-type:wrong-arity-primitives)
  (initialization (initialize-package!)))

(define-package (runtime microcode-tables)
  (files "utabs")
  (parent (runtime))
  (export ()
	  char:newline
	  fixed-object/code->name
	  fixed-object/code-limit
	  fixed-object/name->code
	  fixed-objects-item
	  fixed-objects-vector-slot
	  get-microcode-version-numbers
	  get-microcode-version-string
	  microcode-error/code->name
	  microcode-error/code-limit
	  microcode-error/name->code
	  microcode-id/floating-epsilon
	  microcode-id/floating-mantissa-bits
	  microcode-id/operating-system
	  microcode-id/operating-system-name
	  microcode-id/operating-system-variant
	  microcode-id/stack-type
	  microcode-id/tty-x-size
	  microcode-id/tty-y-size
	  microcode-identification-item
	  microcode-identification-vector-slot
	  microcode-object/unassigned
	  microcode-return/code->name
	  microcode-return/code-limit
	  microcode-return/name->code
	  microcode-system-call-error/code->name
	  microcode-system-call-error/name->code
	  microcode-system-call/code->name
	  microcode-system-call/name->code
	  microcode-termination/code->name
	  microcode-termination/code-limit
	  microcode-termination/name->code
	  microcode-type/code->name
	  microcode-type/code->names
	  microcode-type/code-limit
	  microcode-type/name->code)
  (export (runtime save/restore)
	  re-read-microcode-tables!)
  (initialization (initialize-package!)))

(define-package (runtime number)
  (files "arith" "dragon4")
  (parent (runtime))
  (export ()
	  (-1+ complex:-1+)
	  (1+ complex:1+)
	  (abs complex:abs)
	  (acos complex:acos)
	  (angle complex:angle)
	  (asin complex:asin)
	  (ceiling complex:ceiling)
	  (ceiling->exact complex:ceiling->exact)
	  (complex? complex:complex?)
	  (conjugate complex:conjugate)
	  (cos complex:cos)
	  (denominator complex:denominator)
	  (even? complex:even?)
	  (exact->inexact complex:exact->inexact)
	  (exact-rational? rat:rational?)
	  (exact? complex:exact?)
	  (exp complex:exp)
	  (expt complex:expt)
	  (floor complex:floor)
	  (floor->exact complex:floor->exact)
	  (imag-part complex:imag-part)
	  (inexact->exact complex:inexact->exact)
	  (integer-ceiling complex:integer-ceiling)
	  (integer-divide complex:divide)
	  (integer-floor complex:integer-floor)
	  (integer-round complex:integer-round)
	  (integer-truncate complex:quotient)
	  (integer? complex:integer?)
	  (log complex:log)
	  (magnitude complex:magnitude)
	  (make-polar complex:make-polar)
	  (make-rectangular complex:make-rectangular)
	  (negative? complex:negative?)
	  (number? complex:complex?)
	  (numerator complex:numerator)
	  (positive? complex:positive?)
	  (rational? complex:rational?)
	  (rationalize complex:rationalize)
	  (rationalize->exact complex:rationalize->exact)
	  (real-part complex:real-part)
	  (real? complex:real?)
	  (round complex:round)
	  (round->exact complex:round->exact)
	  (simplest-exact-rational complex:simplest-exact-rational)
	  (simplest-rational complex:simplest-rational)
	  (sin complex:sin)
	  (sqrt complex:sqrt)
	  (tan complex:tan)
	  (truncate complex:truncate)
	  (truncate->exact complex:truncate->exact)
	  (zero? complex:zero?)
	  *
	  +
	  -
	  /
	  <
	  <=
	  =
	  >
	  >=
	  atan
	  error:not-complex
	  error:not-exact
	  error:not-exact-integer
	  error:not-exact-nonnegative-integer
	  error:not-exact-positive-integer
	  error:not-exact-rational
	  error:not-inexact
	  error:not-integer
	  error:not-number
	  error:not-rational
	  error:not-real
	  exact-nonnegative-integer?
	  exact-positive-integer?
	  flo:significand-digits-base-10
	  flo:significand-digits-base-2
	  flonum-unparser-cutoff
	  flonum-unparser:engineering-output
	  flonum-unparser:normal-output
	  flonum-unparser:scientific-output
	  gcd
	  guarantee-complex
	  guarantee-exact
	  guarantee-exact-integer
	  guarantee-exact-nonnegative-integer
	  guarantee-exact-positive-integer
	  guarantee-exact-rational
	  guarantee-inexact
	  guarantee-integer
	  guarantee-number
	  guarantee-rational
	  guarantee-real
	  inexact?
	  integer-divide-quotient
	  integer-divide-remainder
	  largest-fixnum
	  lcm
	  max
	  min
	  modulo
	  number->string
	  odd?
	  quotient
	  remainder
	  smallest-fixnum
	  square)
  (initialization
   (begin
     (initialize-package!)
     (initialize-dragon4!))))

(define-package (runtime number interface)
  (file-case options
    ((load) "numint")
    (else))
  (parent (runtime number))
  (export ()
	  complex-package
	  integer-package
	  make-accumulation-operator
	  make-arithmetic-package
	  make-inverse-accumulation-operator
	  rational-package
	  real-package))

(define-package (runtime number-parser)
  (files "numpar")
  (parent (runtime))
  (export ()
	  flonum-parser-fast?
	  string->number
	  substring->number))

(define-package (runtime options)
  (files "option")
  (parent (runtime))
  (export ()
	  *initial-options-file*
	  declare-shared-library
	  define-load-option
	  dummy-option-loader
	  further-load-options
	  load-option
	  local-load-options
	  standard-load-options
	  standard-option-loader))

(define-package (runtime parser)
  (files "parse")
  (parent (runtime))
  (export ()
	  *parser-associate-positions?*
	  *parser-canonicalize-symbols?*
	  *parser-radix*
	  *parser-table*
	  parse-object
	  parse-objects
	  system-global-parser-table)
  (export (runtime)
	  (*parser-associate-positions?* runtime-parser-associate-positions?)
	  (*parser-canonicalize-symbols?* runtime-parser-canonicalize-symbols?)
	  (*parser-radix* runtime-parser-radix)
	  (*parser-table* runtime-parser-table))
  (export (runtime character)
	  char-set/atom-delimiters)
  (export (runtime syntactic-closures)
	  lambda-optional-tag
	  lambda-rest-tag)
  (export (runtime unparser)
	  char-set/atom-delimiters
	  char-set/number-leaders
	  char-set/symbol-quotes
	  lambda-aux-tag
	  lambda-key-tag
	  lambda-optional-tag
	  lambda-rest-tag)
  (export (runtime unsyntaxer)
	  lambda-aux-tag
	  lambda-optional-tag
	  lambda-rest-tag)
  (initialization (initialize-package!)))

(define-package (runtime parser-table)
  (files "partab")
  (parent (runtime))
  (export ()
	  error:not-parser-table
	  guarantee-parser-table
	  make-parser-table
	  parser-table/copy
	  parser-table/entry
	  parser-table/set-entry!
	  parser-table?)
  (export (runtime parser)
	  parser-table/initial
	  parser-table/special))

(define-package (runtime pathname)
  (files "pathnm")
  (parent (runtime))
  (export ()
	  *default-pathname-defaults*
	  ->namestring
	  ->pathname
	  ->truename
	  directory-namestring
	  directory-pathname
	  directory-pathname-as-file
	  directory-pathname?
	  enough-namestring
	  enough-pathname
	  error:not-pathname
	  file-namestring
	  file-pathname
	  guarantee-pathname
	  host-namestring
	  host/type-name
	  host=?
	  host?
	  init-file-pathname
	  local-host
	  make-pathname
	  merge-pathnames
	  parse-namestring
	  pathname-absolute?
	  pathname-as-directory
	  pathname-default
	  pathname-default-device
	  pathname-default-directory
	  pathname-default-name
	  pathname-default-type
	  pathname-default-version
	  pathname-device
	  pathname-directory
	  pathname-host
	  pathname-name
	  pathname-new-device
	  pathname-new-directory
	  pathname-new-name
	  pathname-new-type
	  pathname-new-version
	  pathname-relative?
	  pathname-simplify
	  pathname-type
	  pathname-version
	  pathname-wild?
	  pathname=?
	  pathname?
	  system-library-directory-pathname
	  system-library-pathname
	  user-homedir-pathname)
  (initialization (initialize-package!)))

(define-package (runtime pathname unix)
  (files "unxpth")
  (parent (runtime pathname))
  (initialization (initialize-package!)))

(define-package (runtime pathname dos)
  (files "dospth")
  (parent (runtime pathname))
  (initialization (initialize-package!)))

(define-package (runtime population)
  (files "poplat")
  (parent (runtime))
  (export ()
	  add-to-population!
	  exists-an-inhabitant?
	  for-all-inhabitants?
	  make-population
	  map-over-population
	  map-over-population!
	  population?
	  remove-from-population!)
  (initialization (initialize-package!)))

(define-package (runtime pretty-printer)
  (files "pp")
  (parent (runtime))
  (export ()
	  *pp-arity-dispatched-procedure-style*
	  *pp-auto-highlighter*
	  *pp-avoid-circularity?*
	  *pp-default-as-code?*
	  *pp-forced-x-size*
	  *pp-lists-as-tables?*
	  *pp-named-lambda->define?*
	  *pp-no-highlights?*
	  *pp-primitives-by-name*
	  *pp-save-vertical-space?*
	  *pp-uninterned-symbols-by-name*
	  make-pretty-printer-highlight
	  pp
	  pp-description
	  pretty-print)
  (initialization (initialize-package!)))

(define-package (runtime primitive-io)
  (files "io") 
  (parent (runtime))
  (export ()
	  all-open-channels
	  channel-blocking
	  channel-blocking?
	  channel-close
	  channel-closed?
	  channel-descriptor-for-select
	  channel-file-length
	  channel-file-position
	  channel-file-set-position
	  channel-file-truncate
	  channel-has-input?
	  channel-nonblocking
	  channel-open?
	  channel-port
	  channel-read
	  channel-read-block
	  channel-table
	  channel-type
	  channel-type=directory?
	  channel-type=file?
	  channel-type=terminal?
	  channel-type=unknown?
	  channel-write
	  channel-write-block
	  channel?
	  close-all-open-channels
	  close-all-open-files
	  directory-channel-close
	  directory-channel-open
	  directory-channel-read
	  directory-channel-read-matching
	  directory-channel?
	  file-open-append-channel
	  file-open-input-channel
	  file-open-io-channel
	  file-open-output-channel
	  make-pipe
	  open-pty-master
	  pty-master-continue
	  pty-master-hangup
	  pty-master-interrupt
	  pty-master-kill
	  pty-master-quit
	  pty-master-send-signal
	  pty-master-stop
	  set-channel-port!
	  set-terminal-input-baud-rate!
	  set-terminal-output-baud-rate!
	  terminal-cooked-input
	  terminal-cooked-input?
	  terminal-cooked-output
	  terminal-cooked-output?
	  terminal-drain-output
	  terminal-flush-input
	  terminal-flush-output
	  terminal-get-state
	  terminal-input-baud-rate
	  terminal-output-baud-rate
	  terminal-raw-input
	  terminal-raw-output
	  terminal-set-state
	  test-for-io-on-channel
	  test-for-io-on-descriptor
	  tty-input-channel
	  tty-output-channel
	  with-channel-blocking)
  (export (runtime emacs-interface)
	  channel-descriptor)
  (export (runtime load)
	  channel-descriptor)
  (export (runtime socket)
	  channel-descriptor
	  open-channel)
  (export (runtime subprocess)
	  channel-descriptor)
  (export (runtime microcode-errors)
	  port-error-test)
  (export (runtime x-graphics)
	  have-select?)
  (export (runtime thread)
	  add-to-select-registry!
	  have-select?
	  make-select-registry
	  remove-from-select-registry!
	  test-select-registry)
  (export (runtime directory)
	  directory-channel/descriptor)
  (initialization (initialize-package!)))

(define-package (runtime program-copier)
  (files "prgcop")
  (parent (runtime))
  (export ()
	  copy-program)
  (initialization (initialize-package!)))

(define-package (runtime random-number)
  (files "random")
  (parent (runtime))
  (export ()
	  (random-source-state-ref export-random-state)
	  (random-source? random-state?)
	  *random-state*
	  default-random-source
	  export-random-state
	  flo:random-unit
	  import-random-state
	  make-random-source
	  make-random-state
	  random
	  random-byte-vector
	  random-integer
	  random-real
	  random-source-make-integers
	  random-source-make-reals
	  random-source-pseudo-randomize!
	  random-source-randomize!
	  random-source-state-set!
	  random-state?)
  (initialization (initialize-package!)))

(define-package (runtime record)
  (files "record")
  (parent (runtime))
  (export ()
	  %copy-record
	  %make-record
	  %record
	  %record-length
	  %record-ref
	  %record-set!
	  %record-tag
	  %record?
	  copy-record
	  define-structure/default-value
	  define-structure/keyword-constructor
	  define-structure/list-accessor
	  define-structure/list-modifier
	  define-structure/vector-accessor
	  define-structure/vector-modifier
	  error:not-list-of-unique-symbols
	  error:not-record
	  error:not-record-type
	  guarantee-list-of-unique-symbols
	  guarantee-record
	  guarantee-record-type
	  list-of-unique-symbols?
	  make-define-structure-type
	  make-record-type
	  named-structure/description
	  named-structure?
	  record-accessor
	  record-constructor
	  record-copy
	  record-description
	  record-keyword-constructor
	  record-modifier
	  record-predicate
	  record-type-default-inits
	  record-type-default-value
	  record-type-descriptor
	  record-type-dispatch-tag
	  record-type-extension
	  record-type-field-names
	  record-type-name
	  record-type?
	  record-updater
	  record?
	  set-record-type-default-inits!
	  set-record-type-extension!
	  set-record-type-unparser-method!
	  unparse-record)
  (export (runtime record-slot-access)
	  record-type-field-index)
  (export (runtime unparser)
	  structure-tag/unparser-method)
  (initialization (initialize-package!)))

(define-package (runtime reference-trap)
  (files "urtrap")
  (parent (runtime))
  (export ()
	  cached-reference-trap-value
	  cached-reference-trap?
	  macro-reference-trap-transformer
	  macro-reference-trap?
	  make-macro-reference-trap
	  make-unassigned-reference-trap
	  make-unbound-reference-trap
	  make-unmapped-macro-reference-trap
	  make-unmapped-unassigned-reference-trap
	  make-unmapped-unbound-reference-trap
	  map-reference-trap
	  map-reference-trap-value
	  reference-trap-kind
	  reference-trap-kind-name
	  reference-trap?
	  unassigned-reference-trap?
	  unbound-reference-trap?
	  unmap-reference-trap
	  unmapped-macro-reference-trap?
	  unmapped-unassigned-reference-trap?
	  unmapped-unbound-reference-trap?)
  (export (runtime syntactic-closures)
	  make-macro-reference-trap-expression)
  (export (runtime unsyntaxer)
	  macro-reference-trap-expression-transformer
	  macro-reference-trap-expression?)
  (export (runtime miscellaneous-global)
	  trap-max-immediate))

(define-package (runtime rep)
  (files "rep")
  (parent (runtime))
  (export ()
	  ->environment
	  abort->nearest
	  abort->previous
	  abort->top-level
	  bkpt
	  breakpoint
	  breakpoint-procedure
	  breakpoint/environment
	  cmdl-interrupt/abort-nearest
	  cmdl-interrupt/abort-previous
	  cmdl-interrupt/abort-top-level
	  cmdl-interrupt/breakpoint
	  cmdl-message/active
	  cmdl-message/append
	  cmdl-message/null
	  cmdl-message/strings
	  cmdl/base
	  cmdl/batch-mode?
	  cmdl/driver
	  cmdl/level
	  cmdl/operation
	  cmdl/operation-names
	  cmdl/parent
	  cmdl/port
	  cmdl/properties
	  cmdl/start
	  cmdl/state
	  cmdl?
	  condition-type:breakpoint
	  condition/breakpoint?
	  error:not-cmdl
	  error:not-repl
	  ge
	  guarantee-cmdl
	  guarantee-repl
	  hook/repl-eval
	  hook/repl-read
	  hook/repl-write
	  in
	  initial-top-level-repl
	  make-cmdl
	  make-repl
	  make-repl-history
	  make-repl-message
	  nearest-cmdl
	  nearest-cmdl/batch-mode?
	  nearest-cmdl/level
	  nearest-cmdl/port
	  nearest-repl
	  nearest-repl/condition
	  nearest-repl/environment
	  out
	  pe
	  proceed
	  push-cmdl
	  push-repl
	  re
	  read-eval-print
	  repl-eval
	  repl-eval/write
	  repl-history/read
	  repl-history/record!
	  repl-history/size
	  repl-printer-history-size
	  repl-read
	  repl-reader-history-size
	  repl-scode-eval
	  repl-write
	  repl/base
	  repl/condition
	  repl/environment
	  repl/parent
	  repl/printer-history
	  repl/prompt
	  repl/reader-history
	  repl/start
	  repl:allow-restart-notifications?
	  repl:write-result-hash-numbers?
	  repl?
	  restart
	  run-in-nearest-repl
	  set-cmdl/state!
	  set-repl/environment!
	  set-repl/printer-history!
	  set-repl/prompt!
	  set-repl/reader-history!
	  signal-breakpoint
	  standard-breakpoint-handler
	  standard-breakpoint-hook
	  ve
	  with-repl-eval-boundary)
  (export (runtime load))
  (export (runtime emacs-interface)
	  hook/error-decision
	  set-cmdl/port!)
  (export (runtime debugger)
	  write-restarts)
  (export (runtime working-directory)
	  cmdl/set-default-directory)
  (initialization (initialize-package!)))

(define-package (runtime save/restore)
  (files "savres")
  (parent (runtime))
  (export ()
	  disk-restore
	  disk-save
	  dump-world
	  identify-world)
  (export (runtime gc-daemons)
	  *within-restore-window?*)
  (export (runtime user-interface)
	  *within-restore-window?*)
  (initialization (initialize-package!)))

(define-package (runtime scode)
  (files "scode")
  (parent (runtime))
  (export ()
	  absolute-reference-name
	  absolute-reference-to?
	  absolute-reference?
	  access-components
	  access-environment
	  access-name
	  access?
	  assignment-components
	  assignment-components-with-variable
	  assignment-name
	  assignment-value
	  assignment-variable
	  assignment?
	  comment-components
	  comment-expression
	  comment-text
	  comment?
	  declaration-components
	  declaration-expression
	  declaration-text
	  declaration?
	  definition-components
	  definition-name
	  definition-value
	  definition?
	  delay-components
	  delay-expression
	  delay?
	  make-absolute-reference
	  make-access
	  make-assignment
	  make-assignment-from-variable
	  make-comment
	  make-declaration
	  make-definition
	  make-delay
	  make-quotation
	  make-the-environment
	  make-variable
	  quotation-expression
	  quotation?
	  scode-constant?
	  set-comment-expression!
	  set-comment-text!
	  set-declaration-expression!
	  set-declaration-text!
	  the-environment?
	  variable-components
	  variable-name
	  variable?)
  (initialization (initialize-package!)))

(define-package (runtime scode-combinator)
  (files "scomb")
  (parent (runtime))
  (export ()
	  combination-components
	  combination-operands
	  combination-operator
	  combination-size
	  combination-subexpressions
	  combination?
	  conditional-alternative
	  conditional-components
	  conditional-consequent
	  conditional-predicate
	  conditional-subexpressions
	  conditional?
	  disjunction-alternative
	  disjunction-components
	  disjunction-predicate
	  disjunction-subexpressions
	  disjunction?
	  make-combination
	  make-conditional
	  make-disjunction
	  make-sequence
	  make-unassigned?
	  sequence-actions
	  sequence-components
	  sequence-immediate-actions
	  sequence?
	  unassigned?-components
	  unassigned?-name
	  unassigned??
	  undefined-conditional-branch)
  (export (runtime debugging-info)
	  %make-combination)
  (initialization (initialize-package!)))

(define-package (runtime scode-data)
  (files "sdata")
  (parent (runtime))
  (export (runtime lambda-abstraction)
	  &pair-car
	  &pair-cdr
	  &pair-set-car!
	  &pair-set-cdr!
	  &triple-first
	  &triple-second
	  &triple-set-first!
	  &triple-set-second!
	  &triple-set-third!
	  &triple-third
	  &typed-pair-cons
	  &typed-triple-cons)
  (export (runtime scode)
	  &pair-car
	  &pair-cdr
	  &pair-set-car!
	  &pair-set-cdr!
	  &singleton-element
	  &typed-pair-cons
	  &typed-singleton-cons)
  (export (runtime scode-combinator)
	  &pair-car
	  &pair-cdr
	  &pair-set-car!
	  &pair-set-cdr!
	  &subvector->list
	  &triple-first
	  &triple-second
	  &triple-set-first!
	  &triple-set-second!
	  &triple-set-third!
	  &triple-third
	  &typed-pair-cons
	  &typed-triple-cons
	  &typed-vector-cons
	  &vector-length
	  &vector-ref)
  (export (runtime scode-scan)
	  &pair-car
	  &pair-cdr
	  &pair-set-car!
	  &pair-set-cdr!
	  &triple-first
	  &triple-second
	  &triple-set-first!
	  &triple-set-second!
	  &triple-set-third!
	  &triple-third
	  &typed-pair-cons
	  &typed-triple-cons)
  (export (runtime debugging-info)
	  &pair-car
	  &pair-cdr
	  &triple-first
	  &triple-second
	  &triple-third
	  &vector-ref))

(define-package (runtime scode-scan)
  (files "scan")
  (parent (runtime))
  (export ()
	  make-open-block
	  open-block-components
	  open-block?
	  scan-defines
	  unscan-defines))

(define-package (runtime scode-walker)
  (files "codwlk")
  (parent (runtime))
  (export ()
	  make-scode-walker
	  scode-walk
	  scode-walker?)
  (initialization (initialize-package!)))

(define-package (runtime socket)
  (files "socket")
  (parent (runtime))
  (export ()
	  allocate-host-address
	  bind-tcp-server-socket
	  canonical-host-name
	  close-tcp-server-socket
	  create-tcp-server-socket
	  get-host-by-address
	  get-host-by-name
	  get-host-name
	  host-address-any
	  host-address-loopback
	  listen-tcp-server-socket
	  open-tcp-server-socket
	  open-tcp-stream-socket
	  open-tcp-stream-socket-channel
	  open-unix-stream-socket
	  open-unix-stream-socket-channel
	  os/hostname
	  tcp-server-connection-accept))

(define-package (runtime subprocess)
  (file-case options
    ((load) "process")
    (else))
  (parent (runtime))
  (export ()
	  make-subprocess
	  process-environment-bind
	  run-subprocess-in-foreground
	  scheme-subprocess-environment
	  start-batch-subprocess
	  start-pipe-subprocess
	  start-pty-subprocess
	  start-subprocess-in-background
	  subprocess-arguments
	  subprocess-continue-background
	  subprocess-continue-foreground
	  subprocess-delete
	  subprocess-exit-reason
	  subprocess-filename
	  subprocess-get
	  subprocess-global-status-tick
	  subprocess-hangup
	  subprocess-i/o-port
	  subprocess-id
	  subprocess-input-channel
	  subprocess-input-port
	  subprocess-interrupt
	  subprocess-job-control-available?
	  subprocess-job-control-status
	  subprocess-kill
	  subprocess-list
	  subprocess-output-channel
	  subprocess-output-port
	  subprocess-properties
	  subprocess-pty-master
	  subprocess-put!
	  subprocess-quit
	  subprocess-remove!
	  subprocess-signal
	  subprocess-status
	  subprocess-status-tick
	  subprocess-stop
	  subprocess-wait
	  subprocess?)
  (export (runtime primitive-io)
	  handle-subprocess-status-change)
  (export (runtime socket)
	  handle-subprocess-status-change)
  (initialization (initialize-package!)))

(define-package (runtime synchronous-subprocess)
  (file-case options
    ((load) "syncproc")
    (else))
  (parent (runtime))
  (export ()
	  condition-type:subprocess-abnormal-termination
	  condition-type:subprocess-signalled
	  condition-type:subprocess-stopped
	  run-shell-command
	  run-synchronous-subprocess))

(define-package (runtime graphics)
  (files "graphics")
  (parent (runtime))
  (export ()
	  enumerate-graphics-types
	  graphics-bind-drawing-mode
	  graphics-bind-line-style
	  graphics-clear
	  graphics-close
	  graphics-coordinate-limits
	  graphics-device-coordinate-limits
	  graphics-device/descriptor
	  graphics-device/properties
	  graphics-device?
	  graphics-disable-buffering
	  graphics-drag-cursor
	  graphics-draw-line
	  graphics-draw-point
	  graphics-draw-text
	  graphics-enable-buffering
	  graphics-erase-point
	  graphics-flush
	  graphics-move-cursor
	  graphics-operation
	  graphics-reset-clip-rectangle
	  graphics-set-clip-rectangle
	  graphics-set-coordinate-limits
	  graphics-set-drawing-mode
	  graphics-set-line-style
	  graphics-type
	  graphics-type-available?
	  graphics-type-name
	  graphics-type-properties
	  image-type
	  image/create
	  image/descriptor
	  image/destroy
	  image/draw
	  image/draw-subimage
	  image/fill-from-byte-vector
	  image/height
	  image/width
	  image?
	  make-graphics-device
	  make-graphics-device-type)
  (export (runtime x-graphics)
	  make-image-type)
  (export (runtime os2-graphics)
	  graphics-device/buffer?
	  make-image-type))

(define-package (runtime x-graphics)
  (file-case os-type
    ((unix) "x11graph")
    (else))
  (parent (runtime))
  (export ()
	  create-x-colormap
	  create-x-image
	  x-character-bounds/ascent
	  x-character-bounds/descent
	  x-character-bounds/lbearing
	  x-character-bounds/rbearing
	  x-character-bounds/width
	  x-close-all-displays
	  x-colormap/allocate-color
	  x-colormap/free
	  x-colormap/query-color
	  x-colormap/store-color
	  x-colormap/store-colors
	  x-colormap?
	  x-display/name
	  x-display/properties
	  x-font-structure/all-chars-exist?
	  x-font-structure/character-bounds
	  x-font-structure/default-char
	  x-font-structure/direction
	  x-font-structure/max-ascent
	  x-font-structure/max-bounds
	  x-font-structure/max-descent
	  x-font-structure/min-bounds
	  x-font-structure/name
	  x-font-structure/start-index
	  x-geometry-string
	  x-graphics-default-display-name
	  x-graphics-default-geometry
	  x-graphics-device-type
	  x-graphics/available?
	  x-graphics/clear
	  x-graphics/close-display
	  x-graphics/close-window
	  x-graphics/color?
	  x-graphics/coordinate-limits
	  x-graphics/copy-area
	  x-graphics/device-coordinate-limits
	  x-graphics/disable-keyboard-focus
	  x-graphics/discard-events
	  x-graphics/display
	  x-graphics/drag-cursor
	  x-graphics/draw-arc
	  x-graphics/draw-circle
	  x-graphics/draw-line
	  x-graphics/draw-lines
	  x-graphics/draw-point
	  x-graphics/draw-points
	  x-graphics/draw-text
	  x-graphics/enable-keyboard-focus
	  x-graphics/fill-circle
	  x-graphics/flush
	  x-graphics/font-structure
	  x-graphics/get-colormap
	  x-graphics/get-default
	  x-graphics/iconify-window
	  x-graphics/image-depth
	  x-graphics/lower-window
	  x-graphics/map-window
	  x-graphics/move-cursor
	  x-graphics/move-window
	  x-graphics/open-display
	  x-graphics/open-display?
	  x-graphics/open-window?
	  x-graphics/query-pointer
	  x-graphics/raise-window
	  x-graphics/read-button
	  x-graphics/read-user-event
	  x-graphics/reset-clip-rectangle
	  x-graphics/resize-window
	  x-graphics/select-user-events
	  x-graphics/set-background-color
	  x-graphics/set-border-color
	  x-graphics/set-border-width
	  x-graphics/set-clip-rectangle
	  x-graphics/set-colormap
	  x-graphics/set-coordinate-limits
	  x-graphics/set-drawing-mode
	  x-graphics/set-font
	  x-graphics/set-foreground-color
	  x-graphics/set-icon-name
	  x-graphics/set-input-hint
	  x-graphics/set-internal-border-width
	  x-graphics/set-line-style
	  x-graphics/set-mouse-color
	  x-graphics/set-mouse-shape
	  x-graphics/set-window-name
	  x-graphics/starbase-filename
	  x-graphics/visual-info
	  x-graphics/window-id
	  x-graphics/withdraw-window
	  x-graphics:auto-raise?
	  x-image/destroy
	  x-image/draw
	  x-image/draw-subimage
	  x-image/fill-from-byte-vector
	  x-image/get-pixel
	  x-image/height
	  x-image/set-pixel
	  x-image/width
	  x-image?
	  x-visual-class:direct-color
	  x-visual-class:gray-scale
	  x-visual-class:pseudo-color
	  x-visual-class:static-color
	  x-visual-class:static-gray
	  x-visual-class:true-color
	  x-visual-info/bits-per-rgb
	  x-visual-info/blue-mask
	  x-visual-info/class
	  x-visual-info/colormap-size
	  x-visual-info/depth
	  x-visual-info/green-mask
	  x-visual-info/red-mask
	  x-visual-info/screen
	  x-visual-info/visual
	  x-visual-info/visual-id)
  (initialization (initialize-package!)))

(define-package (runtime starbase-graphics)
  (file-case os-type
    ((unix) "starbase")
    (else))
  (parent (runtime))
  (export ()
	  starbase-graphics-device-type)
  (initialization (initialize-package!)))

(define-package (runtime os2-graphics)
  (file-case os-type
    ((os/2) "os2graph" "os2ctype")
    (else))
  (parent (runtime))
  (export ()
	  os2-console/color?
	  os2-console/get-font-metrics
	  os2-console/get-frame-position
	  os2-console/get-frame-size
	  os2-console/get-pel-size
	  os2-console/get-size
	  os2-console/set-colors!
	  os2-console/set-font!
	  os2-console/set-frame-position!
	  os2-console/set-pel-size!
	  os2-console/set-size!
	  os2-graphics-device-type
	  os2-image/set-colormap
	  os2/define-color
	  os2/find-color)
  (initialization (initialize-package!)))

(define-package (runtime os2-window-primitives)
  (file-case os-type
    ((os/2) "os2winp")
    (else))
  (parent (runtime))
  (export (runtime os2-graphics)
	  bbo_and
	  bbo_ignore
	  bbo_no_color_info
	  bbo_or
	  bbo_pal_colors
	  button-event-type:click
	  button-event-type:double-click
	  button-event-type:down
	  button-event-type:up
	  button-event/flags
	  button-event/number
	  button-event/type
	  button-event/x
	  button-event/y
	  caps_additional_graphics
	  caps_background_mix_support
	  caps_bitmap_formats
	  caps_bm_and
	  caps_bm_desttransparent
	  caps_bm_general_boolean
	  caps_bm_leavealone
	  caps_bm_or
	  caps_bm_overpaint
	  caps_bm_srctransparent
	  caps_bm_xor
	  caps_byte_align_not_required
	  caps_byte_align_recommended
	  caps_byte_align_required
	  caps_char_height
	  caps_char_width
	  caps_clip_fills
	  caps_color_bitcount
	  caps_color_cursor_support
	  caps_color_index
	  caps_color_planes
	  caps_color_table_support
	  caps_colors
	  caps_coltabl_realize
	  caps_coltabl_rgb_8
	  caps_coltabl_rgb_8_plus
	  caps_coltabl_true_mix
	  caps_cosmetic_wideline_support
	  caps_dev_windowing_support
	  caps_device_font_sim
	  caps_device_fonts
	  caps_device_polyset_points
	  caps_device_windowing
	  caps_direct_fill
	  caps_driver_version
	  caps_enhanced_fontmetrics
	  caps_family
	  caps_fm_and
	  caps_fm_general_boolean
	  caps_fm_leavealone
	  caps_fm_or
	  caps_fm_overpaint
	  caps_fm_xor
	  caps_font_image_default
	  caps_font_outline_default
	  caps_foreground_mix_support
	  caps_graphics_char_height
	  caps_graphics_char_width
	  caps_graphics_kerning_support
	  caps_graphics_subset
	  caps_graphics_vector_subset
	  caps_graphics_version
	  caps_height			;pels
	  caps_height_in_chars
	  caps_horizontal_font_res
	  caps_horizontal_resolution
	  caps_io_caps
	  caps_io_dummy
	  caps_io_supports_io
	  caps_io_supports_ip
	  caps_io_supports_op
	  caps_linewidth_thick
	  caps_marker_height
	  caps_marker_width
	  caps_mouse_buttons
	  caps_palette_manager
	  caps_phys_colors
	  caps_raster_banding
	  caps_raster_bitblt
	  caps_raster_bitblt_scaling
	  caps_raster_caps
	  caps_raster_flood_fill
	  caps_raster_fonts
	  caps_raster_set_pel
	  caps_rebuild_fills
	  caps_scaled_default_markers
	  caps_small_char_height
	  caps_small_char_width
	  caps_tech_postscript
	  caps_tech_raster_camera
	  caps_tech_raster_display
	  caps_tech_raster_printer
	  caps_tech_unknown
	  caps_tech_vector_plotter
	  caps_technology
	  caps_transform_support
	  caps_vdd_ddb_transfer
	  caps_vertical_font_res
	  caps_vertical_resolution
	  caps_vio_loadable_fonts
	  caps_width			;pels
	  caps_width_in_chars
	  caps_window_byte_alignment
	  command-event/code
	  cursor_flash
	  cursor_frame
	  cursor_halftone
	  cursor_solid
	  event-type
	  event-type:button
	  event-type:close
	  event-type:command
	  event-type:focus
	  event-type:help
	  event-type:key
	  event-type:paint
	  event-type:resize
	  event-type:visibility
	  event-wid
	  fcf_acceltable
	  fcf_autoicon
	  fcf_border
	  fcf_dlgborder
	  fcf_hidebutton
	  fcf_hidemax
	  fcf_horzscroll
	  fcf_icon
	  fcf_maxbutton
	  fcf_menu
	  fcf_minbutton
	  fcf_minmax
	  fcf_mousealign
	  fcf_nobytealign
	  fcf_nomovewithowner
	  fcf_screenalign
	  fcf_shellposition
	  fcf_sizeborder
	  fcf_standard
	  fcf_sysmenu
	  fcf_sysmodal
	  fcf_tasklist
	  fcf_titlebar
	  fcf_vertscroll
	  fid_client
	  fid_horzscroll
	  fid_menu
	  fid_minmax
	  fid_sysmenu
	  fid_titlebar
	  fid_vertscroll
	  fm_and
	  fm_default
	  fm_invert
	  fm_leavealone
	  fm_masksrcnot
	  fm_mergenotsrc
	  fm_mergesrcnot
	  fm_notcopysrc
	  fm_notmasksrc
	  fm_notmergesrc
	  fm_notxorsrc
	  fm_one
	  fm_or
	  fm_overpaint
	  fm_subtract
	  fm_xor
	  fm_zero
	  focus-event/gained?
	  font-metrics/descender
	  font-metrics/height
	  font-metrics/width
	  help-event/code
	  hwnd_desktop
	  idi_graphics
	  kc_alt
	  kc_char
	  kc_composite
	  kc_ctrl
	  kc_deadkey
	  kc_invalidchar
	  kc_invalidcomp
	  kc_keyup
	  kc_lonekey
	  kc_none
	  kc_prevdown
	  kc_scancode
	  kc_shift
	  kc_toggle
	  kc_virtualkey
	  key-event/code
	  key-event/flags
	  key-event/repeat
	  linetype_alternate
	  linetype_dashdot
	  linetype_dashdoubledot
	  linetype_default
	  linetype_dot
	  linetype_doubledot
	  linetype_invisible
	  linetype_longdash
	  linetype_shortdash
	  linetype_solid
	  mia_checked
	  mia_disabled
	  mia_framed
	  mia_hilited
	  mia_nodismiss
	  mis_bitmap
	  mis_break
	  mis_breakseparator
	  mis_buttonseparator
	  mis_group
	  mis_help
	  mis_multmenu
	  mis_ownerdraw
	  mis_separator
	  mis_single
	  mis_static
	  mis_submenu
	  mis_syscommand
	  mis_text
	  mit_end
	  mit_error
	  mit_first
	  mit_last
	  mit_memerror
	  mit_none
	  ms_actionbar
	  ms_conditionalcascade
	  ms_titlebutton
	  ms_verticalflip
	  nullhandle
	  number-of-event-types
	  os2menu-create
	  os2menu-destroy
	  os2menu-get-item-attributes
	  os2menu-insert-item
	  os2menu-n-items
	  os2menu-nth-item
	  os2menu-remove-item
	  os2menu-set-item-attributes
	  os2pm-synchronize
	  os2ps-bitblt
	  os2ps-clear
	  os2ps-create-bitmap
	  os2ps-create-memory-ps
	  os2ps-destroy-bitmap
	  os2ps-destroy-memory-ps
	  os2ps-draw-point
	  os2ps-get-bitmap
	  os2ps-get-bitmap-bits
	  os2ps-get-bitmap-parameters
	  os2ps-get-font-metrics
	  os2ps-line
	  os2ps-move-graphics-cursor
	  os2ps-poly-line
	  os2ps-poly-line-disjoint
	  os2ps-query-capabilities
	  os2ps-query-capability
	  os2ps-reset-clip-rectangle
	  os2ps-set-bitmap
	  os2ps-set-bitmap-bits
	  os2ps-set-clip-rectangle
	  os2ps-set-colors
	  os2ps-set-font
	  os2ps-set-line-type
	  os2ps-set-mix
	  os2ps-text-width
	  os2ps-write
	  os2win-activate
	  os2win-beep
	  os2win-close
	  os2win-close-event-qid
	  os2win-console-wid
	  os2win-desktop-height
	  os2win-desktop-width
	  os2win-destroy-pointer
	  os2win-event-ready?
	  os2win-focus?
	  os2win-frame-handle
	  os2win-get-event
	  os2win-get-frame-size
	  os2win-get-pos
	  os2win-get-size
	  os2win-invalidate
	  os2win-load-pointer
	  os2win-move-cursor
	  os2win-open
	  os2win-open-event-qid
	  os2win-ps
	  os2win-scroll
	  os2win-set-grid
	  os2win-set-icon
	  os2win-set-pos
	  os2win-set-size
	  os2win-set-state
	  os2win-set-title
	  os2win-shape-cursor
	  os2win-show
	  os2win-show-cursor
	  os2win-update-frame
	  paint-event/xh
	  paint-event/xl
	  paint-event/yh
	  paint-event/yl
	  resize-event/height
	  resize-event/width
	  rop_dstinvert
	  rop_mergecopy
	  rop_mergepaint
	  rop_notsrccopy
	  rop_notsrcerase
	  rop_one
	  rop_patcopy
	  rop_patinvert
	  rop_patpaint
	  rop_srcand
	  rop_srccopy
	  rop_srcerase
	  rop_srcinvert
	  rop_srcpaint
	  rop_zero
	  set-event-wid!
	  virtual-key-supremum
	  visibility-event/shown?
	  vk_alt
	  vk_altgraf
	  vk_backspace
	  vk_backtab
	  vk_break
	  vk_button1
	  vk_button2
	  vk_button3
	  vk_capslock
	  vk_clear
	  vk_ctrl
	  vk_delete
	  vk_down
	  vk_end
	  vk_enddrag
	  vk_enter
	  vk_ereof
	  vk_esc
	  vk_f1
	  vk_f10
	  vk_f11
	  vk_f12
	  vk_f13
	  vk_f14
	  vk_f15
	  vk_f16
	  vk_f17
	  vk_f18
	  vk_f19
	  vk_f2
	  vk_f20
	  vk_f21
	  vk_f22
	  vk_f23
	  vk_f24
	  vk_f3
	  vk_f4
	  vk_f5
	  vk_f6
	  vk_f7
	  vk_f8
	  vk_f9
	  vk_home
	  vk_insert
	  vk_left
	  vk_newline
	  vk_numlock
	  vk_pa1
	  vk_pagedown
	  vk_pageup
	  vk_pause
	  vk_printscrn
	  vk_right
	  vk_scrllock
	  vk_shift
	  vk_space
	  vk_sysrq
	  vk_tab
	  vk_up
	  window-state:activate
	  window-state:bottom
	  window-state:deactivate
	  window-state:hide
	  window-state:maximize
	  window-state:minimize
	  window-state:restore
	  window-state:show
	  window-state:top
	  ws_animate
	  ws_clipchildren
	  ws_clipsiblings
	  ws_disabled
	  ws_maximized
	  ws_minimized
	  ws_parentclip
	  ws_savebits
	  ws_syncpaint
	  ws_visible
	  ))

(define-package (runtime state-space)
  (files "wind")
  (parent (runtime))
  (export ()
	  dynamic-wind
	  shallow-fluid-bind)
  (export (runtime continuation)
	  get-dynamic-state
	  set-dynamic-state!)
  (export (runtime continuation-parser)
	  %translate-to-state-point
	  merge-dynamic-state)
  (export (runtime thread)
	  current-state-point
	  make-state-space
	  state-space:local
	  translate-to-state-point)
  (initialization (initialize-package!)))

(define-package (runtime stream)
  (files "stream")
  (parent (runtime))
  (export ()
	  condition-type:illegal-stream-element
	  empty-stream?
	  error:not-stream-pair
	  guarantee-stream-pair
	  head
	  list->stream
	  make-prime-numbers-stream
	  prime-numbers-stream
	  stream
	  stream->list
	  stream-accumulate
	  stream-append
	  stream-append-map
	  stream-car
	  stream-cdr
	  stream-filter
	  stream-first
	  stream-for-each
	  stream-head
	  stream-last-pair
	  stream-length
	  stream-map
	  stream-null?
	  stream-pair?
	  stream-ref
	  stream-rest
	  stream-tail
	  stream-write
	  tail
	  the-empty-stream)
  (initialization (initialize-package!)))

(define-package (runtime string-input)
  (files "strnin")
  (parent (runtime))
  (export ()
	  open-input-string
	  (string->input-port open-input-string)
	  with-input-from-string)
  (initialization (initialize-package!)))

(define-package (runtime string-output)
  (files "strout")
  (parent (runtime))
  (export ()
	  call-with-output-string
	  (get-output-from-accumulator get-output-string!)
	  get-output-string
	  get-output-string!
	  (make-accumulator-output-port open-output-string)
	  open-output-string
	  (with-string-output-port call-with-output-string)
	  with-output-to-string)
  (initialization (initialize-package!)))

(define-package (runtime syntactic-closures)
  (files "syntactic-closures"
	 "syntax-output"
	 "syntax-transforms"
	 "mit-syntax"
	 "syntax-rules"
	 "syntax-check")
  (parent (runtime))
  (export ()
	  <syntactic-closure>
	  call-with-syntax-error-procedure
	  capture-syntactic-environment
	  close-syntax
	  er-macro-transformer->expander
	  guarantee-syntactic-environment
	  identifier->symbol
	  identifier=?
	  identifier?
	  ill-formed-syntax
	  lambda-tag:fluid-let
	  lambda-tag:let
	  lambda-tag:unnamed
	  make-syntactic-closure
	  make-synthetic-identifier
	  mit-lambda-list?
	  non-hygienic-macro-transformer->expander
	  parse-mit-lambda-list
	  r4rs-lambda-list?
	  reverse-syntactic-environments
	  rsc-macro-transformer->expander
	  sc-macro-transformer->expander
	  strip-syntactic-closures
	  supported-srfi-features
	  syntactic-closure/environment
	  syntactic-closure/form
	  syntactic-closure/free-names
	  syntactic-closure?
	  syntactic-environment->environment
	  syntactic-environment/lookup
	  syntactic-environment/top-level?
	  syntactic-environment?
	  syntactic-keyword->item
	  syntax
	  syntax*
	  syntax-match?
	  synthetic-identifier?
	  )
  (export (runtime defstruct)
	  define-expander
	  parse-mit-lambda-list))

(define-package (runtime defstruct)
  (files "defstr")
  (parent (runtime))
  (export ()
	  ;;define-structure
	  ))

(define-package (runtime system-macros)
  (files "sysmac")
  (parent (runtime))
  (export (runtime)
	  define-guarantee
	  define-primitives
	  ucode-primitive
	  ucode-return-address
	  ucode-type))

(define-package (runtime system)
  (files "system")
  (parent (runtime))
  (export ()
	  add-subsystem-identification!
	  get-subsystem-identification-string
	  get-subsystem-names
	  get-subsystem-version
	  get-subsystem-version-string
	  remove-subsystem-identification!))

(define-package (runtime system-clock)
  (files "sysclk")
  (parent (runtime))
  (export ()
	  internal-time/seconds->ticks
	  internal-time/ticks->seconds
	  measure-interval
	  process-time-clock
	  real-time-clock
	  runtime
	  system-clock
	  with-timings)
  (export (runtime gc-statistics)
	  increment-non-runtime!)
  (initialization (initialize-package!)))

(define-package (runtime truncated-string-output)
  (files "strott")
  (parent (runtime))
  (export ()
	  with-output-to-truncated-string)
  (initialization (initialize-package!)))

(define-package (runtime unparser)
  (files "unpars")
  (parent (runtime))
  (export ()
	  *unparse-abbreviate-quotations?*
	  *unparse-compound-procedure-names?*
	  *unparse-primitives-by-name?*
	  *unparse-uninterned-symbols-by-name?*
	  *unparse-with-datum?*
	  *unparse-with-maximum-readability?*
	  *unparser-list-breadth-limit*
	  *unparser-list-depth-limit*
	  *unparser-radix*
	  *unparser-string-length-limit*
	  *unparser-table*
	  error:not-unparser-state
	  error:not-unparser-table
	  guarantee-unparser-state
	  guarantee-unparser-table
	  make-unparser-table
	  system-global-unparser-table
	  unparse-char
	  unparse-object
	  unparse-string
	  unparser-state/port
	  unparser-state?
	  unparser-table/copy
	  unparser-table/entry
	  unparser-table/set-entry!
	  unparser-table?
	  user-object-type
	  with-current-unparser-state)
  (export (runtime record)
	  rtd:unparser-state)
  (export (runtime output-port)
	  unparse-object/top-level)
  (export (runtime pretty-printer)
	  make-unparser-state
	  unparse-list/prefix-pair?
	  unparse-list/unparser
	  unparse-vector/unparser)
  (initialization (initialize-package!)))

(define-package (runtime unsyntaxer)
  (files "unsyn")
  (parent (runtime))
  (export ()
	  unsyntax
	  unsyntax-lambda-list
	  unsyntax-with-substitutions)
  (initialization (initialize-package!)))

(define-package (runtime working-directory)
  (files "wrkdir")
  (parent (runtime))
  (export ()
	  set-working-directory-pathname!
	  with-working-directory-pathname
	  working-directory-pathname)
  (export (runtime rep)
	  *working-directory-pathname*)
  (initialization (initialize-package!)))

(define-package (runtime user-interface)
  (files "usrint")
  (parent (runtime))
  (export ()
	  prompt-for-command-char
	  prompt-for-command-expression
	  prompt-for-confirmation
	  prompt-for-evaluated-expression
	  prompt-for-expression)
  (export (runtime rep)
	  port/set-default-environment
	  port/write-result)
  (export (runtime rep)
	  port/set-default-directory)
  (export (runtime debugger-command-loop)
	  port/debugger-failure
	  port/debugger-message
	  port/debugger-presentation)
  (export (runtime gc-statistics)
	  port/gc-finish
	  port/gc-start)
  (export (runtime emacs-interface)
	  port/read-finish
	  port/read-start))

(define-package (runtime thread)
  (files "thread")
  (parent (runtime))
  (export ()
	  block-thread-events
	  condition-type:no-current-thread
	  condition-type:thread-dead
	  condition-type:thread-deadlock
	  condition-type:thread-detached
	  condition-type:thread-control-error
	  console-thread
	  create-thread
	  create-thread-continuation
	  current-thread
	  deregister-all-events
	  deregister-io-descriptor-events
	  deregister-io-thread-event
	  deregister-timer-event
	  detach-thread
	  exit-current-thread
	  join-thread
	  lock-thread-mutex
	  make-thread-mutex
	  other-running-threads?
	  permanently-register-io-thread-event
	  register-io-thread-event
	  register-timer-event
	  restart-thread
	  set-thread-timer-interval!
	  signal-thread-event
	  sleep-current-thread
	  start-thread-timer
	  stop-current-thread
	  stop-thread-timer
	  suspend-current-thread
	  thread-continuation
	  thread-dead?
	  thread-execution-state
	  thread-mutex-owner
	  thread-mutex?
	  thread-timer-interval
	  thread?
	  threads-list
	  try-lock-thread-mutex
	  unblock-thread-events
	  unlock-thread-mutex
	  with-create-thread-continuation
	  with-thread-events-blocked
	  with-thread-mutex-locked
	  with-thread-timer-stopped
	  yield-current-thread)
  (export (runtime interrupt-handler)
	  thread-timer-interrupt-handler)
  (export (runtime primitive-io)
	  block-on-io-descriptor)
  (export (runtime continuation)
	  get-thread-event-block
	  set-thread-event-block!)
  (initialization (initialize-package!)))

(define-package (runtime rb-tree)
  (file-case options
    ((load) "rbtree")
    (else))
  (parent (runtime))
  (export ()
	  alist->rb-tree
	  make-rb-tree
	  rb-tree->alist
	  rb-tree/copy
	  rb-tree/datum-list
	  rb-tree/delete!
	  rb-tree/delete-max!
	  rb-tree/delete-max-datum!
	  rb-tree/delete-max-pair!
	  rb-tree/delete-min!
	  rb-tree/delete-min-datum!
	  rb-tree/delete-min-pair!
	  rb-tree/empty?
	  rb-tree/equal?
	  rb-tree/height
	  rb-tree/insert!
	  rb-tree/key-list
	  rb-tree/lookup
	  rb-tree/max
	  rb-tree/max-datum
	  rb-tree/max-pair
	  rb-tree/min
	  rb-tree/min-datum
	  rb-tree/min-pair
	  rb-tree/size
	  rb-tree?))

(define-package (runtime wt-tree)
  (file-case options
    ((load) "wttree")
    (else))
  (parent (runtime))
  (export ()
	  number-wt-type
	  string-wt-type
	  wt-tree/empty?
          alist->wt-tree
          make-wt-tree
          make-wt-tree-type
          singleton-wt-tree
          wt-tree/add
          wt-tree/add!
          wt-tree/delete
          wt-tree/delete!
          wt-tree/delete-min
          wt-tree/delete-min!
          wt-tree/difference
          wt-tree/fold
          wt-tree/for-each
          wt-tree/index
          wt-tree/index-datum
          wt-tree/index-pair
          wt-tree/intersection
          wt-tree/lookup
          wt-tree/member?
          wt-tree/min
          wt-tree/min-datum
          wt-tree/min-pair
          wt-tree/rank
          wt-tree/set-equal?
          wt-tree/size
          wt-tree/split<
          wt-tree/split>
          wt-tree/subset?
          wt-tree/union
          wt-tree/union-merge
          wt-tree?))

(define-package (runtime apropos)
  (files "apropos")
  (parent (runtime))
  (export ()
	  apropos
	  apropos-list))

(define-package (runtime stepper)
  (file-case options
    ((load) "ystep")
    (else))
  (parent (runtime))
  (export ()
	  step
	  step-form
	  step-n
	  step-over
	  step-proceed
	  step-quit
	  step-run
	  step-until
	  step-until-visibly))

(define-package (runtime ordered-vector)
  (file-case options
    ((load) "ordvec")
    (else))
  (parent (runtime))
  (export ()
	  match-ordered-subvector
	  match-ordered-vector
	  ordered-subvector-matches
	  ordered-subvector-minimum-match
	  ordered-vector-matches
	  ordered-vector-minimum-match
	  search-ordered-subvector
	  search-ordered-vector))

(define-package (runtime gdbm)
  (file-case options
    ((load) "gdbm")
    (else))
  (parent (runtime))
  (export ()
	  gdbm-available?
	  gdbm-close
	  gdbm-delete
	  gdbm-exists?
	  gdbm-fetch
	  gdbm-firstkey
	  gdbm-nextkey
	  gdbm-open
	  gdbm-reorganize
	  gdbm-setopt
	  gdbm-store
	  gdbm-sync
	  gdbm-version
	  gdbm_cachesize
	  gdbm_fast
	  gdbm_fastmode
	  gdbm_insert
	  gdbm_newdb
	  gdbm_reader
	  gdbm_replace
	  gdbm_wrcreat
	  gdbm_writer))

(define-package (runtime generic-procedure)
  (files "gentag" "gencache" "generic")
  (parent (runtime))
  (export ()
	  ;; tag.scm:
	  dispatch-tag-contents
	  dispatch-tag?
	  guarantee-dispatch-tag
	  make-dispatch-tag

	  ;; generic.scm:
	  built-in-dispatch-tag
	  built-in-dispatch-tags
	  condition-type:no-applicable-methods
	  dispatch-tag
	  error:no-applicable-methods
	  generic-procedure-applicable?
	  generic-procedure-arity
	  generic-procedure-arity-max
	  generic-procedure-arity-min
	  generic-procedure-name
	  generic-procedure?
	  guarantee-generic-procedure
	  make-generic-procedure
	  purge-generic-procedure-cache
	  standard-generic-procedure-tag)
  (export (runtime generic-procedure multiplexer)
	  generic-procedure-generator
	  set-generic-procedure-generator!))

(define-package (runtime generic-procedure multiplexer)
  (files "genmult")
  (parent (runtime))
  (export ()
	  add-generic-procedure-generator
	  condition-type:extra-applicable-methods
	  error:extra-applicable-methods
	  generic-procedure-default-generator
	  generic-procedure-generator-list
	  remove-generic-procedure-generator
	  remove-generic-procedure-generators
	  set-generic-procedure-default-generator!))

(define-package (runtime tagged-vector)
  (files "tvector")
  (parent (runtime))
  (export ()
	  guarantee-tagged-vector
	  make-tagged-vector
	  record-slot-uninitialized
	  set-tagged-vector-element!
	  set-tagged-vector-tag!
	  tagged-vector
	  tagged-vector-element
	  tagged-vector-element-initialized?
	  tagged-vector-length
	  tagged-vector-tag
	  tagged-vector?))

(define-package (runtime record-slot-access)
  (files "recslot")
  (parent (runtime))
  (export ()
	  condition-type:no-such-slot
	  condition-type:slot-error
	  condition-type:uninitialized-slot
	  %record-accessor
	  %record-accessor-generator
	  %record-initpred
	  %record-initpred-generator
	  %record-modifier
	  %record-modifier-generator
	  %record-slot-index
	  %record-slot-name
	  %record-slot-names)
  (export (runtime record)
	  error:no-such-slot))

(define-package (runtime generic-procedure eqht)
  (files "geneqht")
  (parent (runtime))
  (export (runtime generic-procedure)
	  eqht/for-each
	  eqht/get
	  eqht/put!
	  make-eqht))

(define-package (runtime crypto)
  (files "crypto")
  (parent (runtime))
  (export ()
	  make-mhash-keygen-type
	  mcrypt-algorithm-name
	  mcrypt-algorithm-names
	  mcrypt-available?
	  mcrypt-block-algorithm-mode?
	  mcrypt-block-algorithm?
	  mcrypt-block-mode?
	  mcrypt-context?
	  mcrypt-encrypt
	  mcrypt-encrypt-port
	  mcrypt-end
	  mcrypt-init
	  mcrypt-init-vector-size
	  mcrypt-key-size
	  mcrypt-mode-name
	  mcrypt-mode-names
	  mcrypt-open-module
	  mcrypt-self-test
	  mcrypt-supported-key-sizes
	  md5-available?
	  md5-file
	  md5-string
	  md5-substring
	  md5-sum->hexadecimal
	  md5-sum->number
	  mhash-available?
	  mhash-context?
	  mhash-end
	  mhash-file
	  mhash-get-block-size
	  mhash-hmac-end
	  mhash-hmac-init
	  mhash-init
	  mhash-keygen
	  mhash-keygen-max-key-size
	  mhash-keygen-salt-size
	  mhash-keygen-type-names
	  mhash-keygen-type?
	  mhash-keygen-uses-count?
	  mhash-keygen-uses-hash-algorithm
	  mhash-keygen-uses-salt?
	  mhash-string
	  mhash-substring
	  mhash-sum->hexadecimal
	  mhash-sum->number
	  mhash-type-names
	  mhash-update)
  (initialization (initialize-package!)))

(define-package (runtime regular-expression)
  (file-case options
    ((load) "regexp")
    (else))
  (parent (runtime))
  (export ()
	  char-set->regexp
	  guarantee-re-register
	  guarantee-re-registers
	  preserving-re-registers
	  re-match-end-index
	  re-match-extract
	  re-match-start-index
	  re-registers
	  re-registers?
	  re-string-match
	  re-string-search-backward
	  re-string-search-forward
	  re-substring-match
	  re-substring-search-backward
	  re-substring-search-forward
	  regexp-group
	  set-re-registers!)
  (initialization (initialize-package!)))

(define-package (runtime regular-expression-compiler)
  (file-case options
    ((load) "rgxcmp")
    (else))
  (parent (runtime))
  (export ()
	  compiled-regexp?
	  compiled-regexp/byte-stream
	  compiled-regexp/translation-table
	  condition-type:re-compile-pattern
	  re-compile-char
	  re-compile-char-set
	  re-compile-pattern
	  re-compile-string
	  re-disassemble-pattern
	  re-quote-string
	  re-translation-table))

(define-package (runtime rexp)
  (file-case options
    ((load) "rexp")
    (else))
  (parent (runtime))
  (export ()
	  rexp*
	  rexp+
	  rexp-*n
	  rexp->regexp
	  rexp-alternatives
	  rexp-any-char
	  rexp-case-fold
	  rexp-compile
	  rexp-group
	  rexp-line-end
	  rexp-line-start
	  rexp-n*
	  rexp-n*m	  
	  rexp-n*n
	  rexp-not-syntax-char
	  rexp-not-word-char
	  rexp-not-word-edge
	  rexp-optional
	  rexp-sequence
	  rexp-string-end
	  rexp-string-start
	  rexp-syntax-char
	  rexp-word-char
	  rexp-word-edge
	  rexp-word-end
	  rexp-word-start
	  rexp?))

(define-package (runtime char-syntax)
  (file-case options
    ((load) "chrsyn")
    (else))
  (parent (runtime))
  (export ()
	  char->syntax-code
	  char-syntax->string
	  char-syntax-table?
	  get-char-syntax
	  make-char-syntax-table
	  set-char-syntax!
	  standard-char-syntax-table
	  string->char-syntax
	  substring-find-next-char-not-of-syntax
	  substring-find-next-char-of-syntax)
  (export (runtime regular-expression)
	  char-syntax-table/entries)
  (initialization (initialize-package!)))

(define-package (runtime mime-codec)
  (file-case options
    ((load) "mime-codec")
    (else))
  (parent (runtime))
  (export ()
	  call-with-decode-base64-output-port
	  call-with-decode-binhex40-output-port
	  call-with-decode-quoted-printable-output-port
	  call-with-decode-uue-output-port
	  decode-base64:finalize
	  decode-base64:initialize
	  decode-base64:update
	  decode-binhex40:finalize
	  decode-binhex40:initialize
	  decode-binhex40:update
	  decode-quoted-printable:finalize
	  decode-quoted-printable:initialize
	  decode-quoted-printable:update
	  decode-uue:finalize
	  decode-uue:initialize
	  decode-uue:update
	  encode-base64:finalize
	  encode-base64:initialize
	  encode-base64:update
	  encode-quoted-printable:finalize
	  encode-quoted-printable:initialize
	  encode-quoted-printable:update
	  make-decode-base64-port
	  make-decode-binhex40-port
	  make-decode-quoted-printable-port
	  make-decode-uue-port))

(define-package (runtime parser-buffer)
  (files "parser-buffer")
  (parent (runtime))
  (export ()
	  call-with-parser-buffer-tail
	  discard-parser-buffer-head!
	  get-parser-buffer-pointer
	  get-parser-buffer-tail
	  input-port->parser-buffer
	  match-parser-buffer-char
	  match-parser-buffer-char-ci
	  match-parser-buffer-char-ci-no-advance
	  match-parser-buffer-char-in-alphabet
	  match-parser-buffer-char-in-alphabet-no-advance
	  match-parser-buffer-char-in-set
	  match-parser-buffer-char-in-set-no-advance
	  match-parser-buffer-char-no-advance
	  match-parser-buffer-char-not-in-alphabet
	  match-parser-buffer-char-not-in-alphabet-no-advance
	  match-parser-buffer-char-not-in-set
	  match-parser-buffer-char-not-in-set-no-advance
	  match-parser-buffer-not-char
	  match-parser-buffer-not-char-ci
	  match-parser-buffer-not-char-ci-no-advance
	  match-parser-buffer-not-char-no-advance
	  match-parser-buffer-string
	  match-parser-buffer-string-ci
	  match-parser-buffer-string-ci-no-advance
	  match-parser-buffer-string-no-advance
	  match-parser-buffer-substring
	  match-parser-buffer-substring-ci
	  match-parser-buffer-substring-ci-no-advance
	  match-parser-buffer-substring-no-advance
	  (match-utf8-char-in-alphabet match-parser-buffer-char-in-alphabet)
	  parser-buffer-line
	  parser-buffer-pointer-index
	  parser-buffer-pointer-line
	  parser-buffer-pointer?
	  parser-buffer-port
	  parser-buffer-position-string
	  parser-buffer-ref
	  parser-buffer?
	  peek-parser-buffer-char
	  read-parser-buffer-char
	  set-parser-buffer-pointer!
	  string->parser-buffer))

(define-package (runtime unicode)
  (files "unicode")
  (parent (runtime))
  (export ()
	  8-bit-alphabet?
	  <alphabet>
	  <wide-string>
	  alphabet
	  alphabet+
	  alphabet-
	  alphabet->char-set
	  alphabet->code-points
	  alphabet->string
	  alphabet?
	  call-with-utf16-be-output-string
	  call-with-utf16-le-output-string
	  call-with-utf16-output-string
	  call-with-utf32-be-output-string
	  call-with-utf32-le-output-string
	  call-with-utf32-output-string
	  call-with-utf8-output-string
	  call-with-wide-output-string
	  char-in-alphabet?
	  char-set->alphabet
	  code-points->alphabet
	  error:not-8-bit-alphabet
	  error:not-alphabet
	  error:not-unicode-code-point
	  error:not-utf16-be-string
	  error:not-utf16-le-string
	  error:not-utf16-string
	  error:not-utf32-be-string
	  error:not-utf32-le-string
	  error:not-utf32-string
	  error:not-utf8-string
	  error:not-well-formed-code-point-list
	  error:not-wide-char
	  error:not-wide-string
	  guarantee-8-bit-alphabet
	  guarantee-alphabet
	  guarantee-unicode-code-point
	  guarantee-utf16-be-string
	  guarantee-utf16-le-string
	  guarantee-utf16-string
	  guarantee-utf32-be-string
	  guarantee-utf32-le-string
	  guarantee-utf32-string
	  guarantee-utf8-string
	  guarantee-well-formed-code-point-list
	  guarantee-wide-char
	  guarantee-wide-string
	  guarantee-wide-string-index
	  guarantee-wide-substring
	  make-wide-string
	  open-utf16-be-input-string
	  open-utf16-be-output-string
	  open-utf16-input-string
	  open-utf16-le-input-string
	  open-utf16-le-output-string
	  open-utf16-output-string
	  open-utf32-be-input-string
	  open-utf32-be-output-string
	  open-utf32-input-string
	  open-utf32-le-input-string
	  open-utf32-le-output-string
	  open-utf32-output-string
	  open-utf8-input-string
	  open-utf8-output-string
	  open-wide-input-string
	  open-wide-output-string
	  read-utf16-be-char
	  read-utf16-char
	  read-utf16-le-char
	  read-utf32-be-char
	  read-utf32-char
	  read-utf32-le-char
	  read-utf8-char
	  string->alphabet
	  string->utf8-string
	  string->wide-string
	  unicode-code-point?
	  utf16-be-string->wide-string
	  utf16-be-string-length
	  utf16-be-string-valid?
	  utf16-be-string?
	  utf16-le-string->wide-string
	  utf16-le-string-length
	  utf16-le-string-valid?
	  utf16-le-string?
	  utf16-string->wide-string
	  utf16-string-length
	  utf16-string-valid?
	  utf16-string?
	  utf32-be-string->wide-string
	  utf32-be-string-length
	  utf32-be-string-valid?
	  utf32-be-string?
	  utf32-le-string->wide-string
	  utf32-le-string-length
	  utf32-le-string-valid?
	  utf32-le-string?
	  utf32-string->wide-string
	  utf32-string-length
	  utf32-string-valid?
	  utf32-string?
	  utf8-string->wide-string
	  utf8-string-length
	  utf8-string-valid?
	  utf8-string?
	  well-formed-code-point-list?
	  wide-char?
	  wide-string
	  wide-string->string
	  wide-string->utf16-be-string
	  wide-string->utf16-le-string
	  wide-string->utf16-string
	  wide-string->utf32-be-string
	  wide-string->utf32-le-string
	  wide-string->utf32-string
	  wide-string->utf8-string
	  wide-string-index?
	  wide-string-length
	  wide-string-ref
	  wide-string-set!
	  wide-string?
	  wide-substring
	  write-utf16-be-char
	  write-utf16-char
	  write-utf16-le-char
	  write-utf32-be-char
	  write-utf32-char
	  write-utf32-le-char
	  write-utf8-char)
  (export (runtime parser-buffer)
	  %wide-string-length
	  %wide-string-ref
	  %wide-substring
	  wide-string-contents)
  (export (runtime generic-i/o-port)
	  wide-string-contents)
  (export (runtime input-port)
	  wide-string-contents))

(define-package (runtime uri)
  (files "url")
  (parent (runtime))
  (export ()
	  (url:decode-string decode-component)
	  (url:match:escape matcher:pct-encoded)
	  (url:parse:hostport parser:hostport)
	  ->absolute-uri
	  ->relative-uri
	  ->uri
	  absolute-uri?
	  char-set:uri-alpha
	  char-set:uri-digit
	  char-set:uri-fragment
	  char-set:uri-hex
	  char-set:uri-ipvfuture
	  char-set:uri-opaque-auth
	  char-set:uri-query
	  char-set:uri-reg-name
	  char-set:uri-scheme
	  char-set:uri-segment
	  char-set:uri-segment-nc
	  char-set:uri-userinfo
	  error:not-absolute-uri
	  error:not-partial-uri
	  error:not-relative-uri
	  error:not-uri
	  error:not-uri-authority
	  error:not-uri-host
	  error:not-uri-path
	  error:not-uri-port
	  error:not-uri-scheme
	  error:not-uri-userinfo
	  guarantee-absolute-uri
	  guarantee-partial-uri
	  guarantee-relative-uri
	  guarantee-uri
	  guarantee-uri-authority
	  guarantee-uri-host
	  guarantee-uri-path
	  guarantee-uri-port
	  guarantee-uri-scheme
	  guarantee-uri-userinfo
	  make-uri
	  make-uri-authority
	  merge-uris
	  parse-absolute-uri
	  parse-partial-absolute-uri
	  parse-partial-uri
	  parse-relative-uri
	  parse-uri
	  partial-uri->string
	  partial-uri-authority
	  partial-uri-extra
	  partial-uri-fragment
	  partial-uri-path
	  partial-uri-query
	  partial-uri-scheme
	  partial-uri-state-name
	  partial-uri?
	  relative-uri?
	  string->absolute-uri
	  string->partial-absolute-uri
	  string->partial-uri
	  string->relative-uri
	  string->uri
	  test-merge-uris
	  uri->alist
	  uri->string
	  uri->symbol
	  uri-absolute?
	  uri-authority
	  uri-authority-host
	  uri-authority-port
	  uri-authority-userinfo
	  uri-authority=?
	  uri-authority?
	  uri-fragment
	  uri-host?
	  uri-path
	  uri-path-absolute?
	  uri-path-relative?
	  uri-path?
	  uri-port?
	  uri-query
	  uri-relative?
	  uri-rexp:absolute-uri
	  uri-rexp:authority
	  uri-rexp:dec-octet
	  uri-rexp:fragment
	  uri-rexp:h16
	  uri-rexp:hier-part
	  uri-rexp:host
	  uri-rexp:ip-literal
	  uri-rexp:ipv4-address
	  uri-rexp:ipv6-address
	  uri-rexp:ipvfuture
	  uri-rexp:ls32
	  uri-rexp:opaque-auth
	  uri-rexp:path
	  uri-rexp:path-abempty
	  uri-rexp:path-absolute
	  uri-rexp:path-empty
	  uri-rexp:path-noscheme
	  uri-rexp:path-rootless
	  uri-rexp:pct-encoded
	  uri-rexp:port
	  uri-rexp:query
	  uri-rexp:reg-name
	  uri-rexp:relative-part
	  uri-rexp:relative-ref
	  uri-rexp:scheme
	  uri-rexp:segment
	  uri-rexp:segment-nz
	  uri-rexp:segment-nz-nc
	  uri-rexp:uri
	  uri-rexp:uri-reference
	  uri-rexp:userinfo
	  uri-scheme
	  uri-scheme?
	  uri=?
	  uri?
	  url:char-set:unreserved
	  url:encode-string
	  write-partial-uri
	  write-uri))

(define-package (runtime postgresql)
  (file-case options
    ((load) "pgsql")
    (else))
  (parent (runtime))
  (export ()
	  call-with-pgsql-conn
	  close-pgsql-conn
	  condition-type:pgsql-connection-error
	  condition-type:pgsql-error
	  condition-type:pgsql-query-error
	  decode-pgsql-bytea
	  encode-pgsql-bytea
	  escape-pgsql-string
	  exec-pgsql-query
	  guarantee-pgsql-available
	  make-empty-pgsql-result
	  open-pgsql-conn
	  pgsql-available?
	  pgsql-bad-response
	  pgsql-clear
	  pgsql-cmd-status
	  pgsql-cmd-tuples
	  pgsql-command-ok
	  pgsql-conn-db
	  pgsql-conn-error-message
	  pgsql-conn-host
	  pgsql-conn-open?
	  pgsql-conn-options
	  pgsql-conn-pass
	  pgsql-conn-port
	  pgsql-conn-reset
	  pgsql-conn-reset-start
	  pgsql-conn-status
	  pgsql-conn-tty
	  pgsql-conn-user
	  pgsql-connection-auth-ok
	  pgsql-connection-awaiting-response
	  pgsql-connection-bad
	  pgsql-connection-made
	  pgsql-connection-ok
	  pgsql-connection-setenv
	  pgsql-connection-started
	  pgsql-copy-in
	  pgsql-copy-out
	  pgsql-empty-query
	  pgsql-fatal-error
	  pgsql-field-name
	  pgsql-get-is-null?
	  pgsql-get-line
	  pgsql-get-value
	  pgsql-n-fields
	  pgsql-n-tuples
	  pgsql-nonfatal-error
	  pgsql-polling-active
	  pgsql-polling-failed
	  pgsql-polling-ok
	  pgsql-polling-reading
	  pgsql-polling-writing
	  pgsql-put-line
	  pgsql-result-error-message
	  pgsql-result-status
	  pgsql-tuples-ok
	  poll-pgsql-conn
	  poll-pgsql-reset))


(os-type-case
 ((nt)
  (define-package (runtime win32-registry)
    (files "win32-registry")
    (parent (runtime))
    (export ()
	    win32-registry/add-subkey
	    win32-registry/delete-subkey
	    win32-registry/delete-value
	    win32-registry/get-value
	    win32-registry/key-full-name
	    win32-registry/key-name
	    win32-registry/key-parent
	    win32-registry/key?
	    win32-registry/open-key
	    win32-registry/set-value
	    win32-registry/subkey
	    win32-registry/subkeys
	    win32-registry/value-names
	    win32/expand-environment-strings)
    (initialization (initialize-package!)))))