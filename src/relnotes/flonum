New flonum-related definitions:

. flo:radix - Floating-point radix as an integer.  This is essentially
  always 2 but useful for assertions if you want to future-proof code
  that assumes it with a noisy failure in case we ever violate the
  assumption.
- flo:radix. - Floating-point radix as a flonum.
. flo:error-bound - Greatest possible relative error in rounding to nearest.
. flo:log-error-bound = (log flo:error-bound)
. flo:ulp-of-one - Distance from 1 to next greater floating-point number.
  Equal to twice flo:error-bound.
. flo:log-ulp-of-one = (log flo:ulp-of-one)
. (flo:ulp x) - Distance from x to the next floating-point number
  larger in magnitude with the same sign.
. flo:normal-exponent-max - Exponent of greatest integer power of
  flo:radix that is a finite floating-point number, as an exact
  integer.  Note that there are floating-point numbers greater than
  (expt flo:radix. flo:normal-exponent-max) -- the greatest one is just
  below flo:radix times that.  But there are none that are a greater
  _integer_ power of flo:radix.
. flo:normal-exponent-min - Exponent of least positive integer power of
  flo:radix that is a normal floating-point number, as an exact
  integer.  (expt flo:radix. flo:normal-exponent-min) is also named
  flo:smallest-positive-normal.
. flo:subnormal-exponent-min - Exponent of least positive integer power
  of flo:radix that is a nonzero, subnormal floating-point number, as
  an exact integer.  (expt flo:radix. flo:subnormal-exponent-min) is
  the least positive floating-point number, also named
  flo:smallest-positive-subnormal.
. flo:smallest-positive-subnormal - Smallest positive subnormal.
. flo:smallest-positive-normal - Smallest positive normal.
. flo:largest-positive-normal - Largest positive normal.
. flo:least-subnormal-exponent-base-2 - Least flonum input x for which
  (expt 2. x) gives a nonzero result.
. flo:least-subnormal-exponent-base-e - Least flonum input x for which
  (exp x) gives a nonzero result.
. flo:least-subnormal-exponent-base-10 - Least flonum input x for which
  (expt 10. x) gives a nonzero result.
. flo:least-normal-exponent-base-2 - Least flonum input x for which
  (expt 2. x) gives a normal result.
. flo:least-normal-exponent-base-e - Least flonum input x for which
  (exp x) gives a normal result.
. flo:least-normal-exponent-base-10 - Least flonum input x for which
  (expt 10. x) gives a normal result.
. flo:greatest-normal-exponent-base-2 - Greatest flonum input x for
  which (expt 2. x) gives a finite result.
. flo:greatest-normal-exponent-base-e - Greatest flonum input x for
  which (exp x) gives a finite result.
. flo:greatest-normal-exponent-base-10 - Greatest flonum input x for
  which (expt 10. x) gives a finite result.
. (flo:ldexp x e) = x * 2^e
. (flo:scalbn x e) = x * b^e, where b is flo:radix
. (flo:classify x) returns one of the symbols
  - zero
  - subnormal
  - normal
  - infinite
  - nan
. (flo:subnormal? x) is true if x is subnormal; false if zero, normal,
  infinite, or NaN
- (flo:safe-zero? x) is true if x is zero; false if subnormal, normal,
  infinite, or NaN.  flo:zero? may raise an exception; flo:safe-zero?
  never does.
- (flo:safe-negative? x) returns true if x has negative sign, false if
  x has positive sign.  Note that (flo:negative? 0.) and (flo:negative?
  -0.) both return false, while (flo:safe-negative? -0.) returns true.
  Also, flo:negative? may raise a invalid-operation exception if an
  input is NaN, while flo:safe-negative?  does not.
- (flo:safe< x y), (flo:safe<= x y), (flo:safe> x y), (flo:safe>= x y),
  (flo:safe= x y), (flo:safe<> x y), (flo:unordered? x y) perform
  unordered floating-point comparisons and never raise exceptions.
- (flo:compare x y) and (flo:safe-compare x y) return a four-way
  comparison of two floating-point numbers: negative if x < y, zero if
  x = y, positive if x > y, and #f if one or both arguments is NaN.
  flo:compare may raise an invalid-operation exception;
  flo:safe-compare never does.
- (flo:<> x y) returns true if x is less or greater than y, false if
  equal or unordered.  May raise an invalid-operation exception.
- (flo:min-mag x y) and (flo:max-mag x y) return the number of lesser
  or greater magnitude, as in minNumMag and maxNumMag of IEEE 754-2008.
- (flo:make-nan negative? quiet? payload) returns a NaN with the
  specified payload, which must not exceed (- (expt 2
  flo:significand-digits-base-2 2) 1).
- (flo:nan-quiet? nan) returns true for quiet NaNs, false for
  signalling NaNs.
- (flo:nan-payload nan) returns the payload of NaN, an integer between
  0 (inclusive) and 2^51 (exclusive).
