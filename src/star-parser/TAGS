
matcher.scm,2044
(define (preprocess-matcher-expression 40,1471
(define (preprocess-matcher-expressions 68,2440
(define (define-matcher-preprocessor 77,2681
(define-syntax define-*matcher-macro84,2909
(define (define-*matcher-expander 100,3480
(define (matcher-preprocessor 109,3799
(define matcher-preprocessors113,3933
(define-*matcher-expander '+116,3996
(define-*matcher-expander '?120,4090
(define-*matcher-expander 'COMPLETE124,4174
(define-*matcher-expander 'TOP-LEVEL128,4274
(define-*matcher-expander 'N*132,4378
(define-*matcher-expander 'N*M137,4487
(define-*matcher-expander 'ERROR142,4609
(define-matcher-preprocessor '(149,4841
(define-matcher-preprocessor '*157,5133
(define-matcher-preprocessor '(164,5372
(define-matcher-preprocessor '(174,5731
(define-matcher-preprocessor '(180,5943
(define-matcher-preprocessor 'CHAR-SET189,6307
(define-matcher-preprocessor '(202,6738
(define-matcher-preprocessor 'WITH-POINTER208,6946
(define-matcher-preprocessor 'SEXP217,7288
(define-syntax *matcher225,7485
(define (generate-matcher-code 232,7695
(define (compile-matcher-expression 244,8130
(define (wrap-external-matcher 267,8944
(define-syntax define-matcher272,9060
(define (define-matcher-compiler 287,9647
(define matcher-compilers291,9784
(define-syntax define-atomic-matcher294,9843
(define-atomic-matcher (char 305,10274
(define-atomic-matcher (char-ci 308,10383
(define-atomic-matcher (not-char 311,10498
(define-atomic-matcher (not-char-ci 314,10615
(define-atomic-matcher (char-set 317,10738
(define-atomic-matcher (string 321,10874
(define-atomic-matcher (string-ci 324,10991
(define-atomic-matcher (end-of-input)327,11114
(define-matcher (discard-matched)331,11217
(define-matcher (with-pointer 337,11360
(define-matcher (seq 343,11591
(define-matcher (alt 358,12087
(define-matcher (* 375,12627
(define-matcher (n*n 389,13028
(define (open-code-n*n 394,13202
(define (close-code-n*n 406,13540
(define-matcher (*n 422,14068
(define (open-code-*n 427,14239
(define (close-code-*n 443,14695

parser.scm,1645
(define (preprocess-parser-expression 40,1471
(define (preprocess-parser-expressions 65,2351
(define (define-parser-preprocessor 74,2614
(define-syntax define-*parser-macro81,2839
(define (define-*parser-expander 97,3408
(define (parser-preprocessor 106,3720
(define parser-preprocessors110,3851
(define-*parser-expander '+113,3913
(define-*parser-expander '?117,4006
(define-*parser-expander 'COMPLETE121,4089
(define-*parser-expander 'TOP-LEVEL125,4196
(define-*parser-expander 'ERROR129,4299
(define-*parser-expander 'ENCAPSULATE*136,4530
(define-*parser-expander 'TRANSFORM*141,4689
(define-parser-preprocessor '(150,4902
(define-parser-preprocessor '*158,5190
(define-parser-preprocessor '(165,5425
(define-parser-preprocessor '(172,5675
(define-parser-preprocessor 'WITH-POINTER180,5984
(define-parser-preprocessor 'SEXP188,6328
(define-parser-preprocessor 'DISCARD-MATCHED194,6508
(define-parser-preprocessor 'VALUES200,6700
(define-syntax *parser207,6869
(define (generate-parser-code 214,7077
(define (compile-parser-expression 226,7507
(define (wrap-external-parser 249,8334
(define-syntax define-parser256,8497
(define (define-parser-compiler 271,9082
(define parser-compilers275,9217
(define-parser (match 278,9275
(define-parser (noise 291,9628
(define-parser (values 299,9859
(define-parser (transform 307,10041
(define-parser (map 312,10249
(define-parser (encapsulate 317,10452
(define (post-processed-parser 322,10661
(define-parser (with-pointer 330,10925
(define-parser (discard-matched)336,11152
(define-parser (seq 342,11305
(define-parser (alt 364,11982
(define-parser (* 389,12678

shared.scm,5126
(define *buffer-name*)31,1087
(define *environment*)32,1110
(define *closing-environment*)33,1133
(define debug:disable-optimizers? 34,1164
(define debug:trace-optimization? 35,1202
(define (generate-external-procedure 37,1241
(define (run-optimizers 71,2441
(define (strip-protection-wrappers 90,2969
(define (check-0-args 111,3526
(define (check-1-arg 114,3592
(define (check-2-args 118,3708
(define (check-n-args 121,3805
(define (error:ill-formed-expression 127,4036
(define (handle-complex-expression 130,4133
(define (close 146,4605
(define-record-type <parser-macros>151,4705
(define (make-parser-macros 158,4923
(define *global-parser-macros*164,5162
(define (define-matcher-macro 169,5296
(define (lookup-matcher-macro 172,5416
(define (define-parser-macro 178,5637
(define (lookup-parser-macro 181,5755
(define (with-current-parser-macros 187,5974
(define (current-parser-macros)192,6143
(define (set-current-parser-macros! 195,6195
(define (global-parser-macros)200,6350
(define *parser-macros*203,6408
(define (maybe-make-let 208,6494
(define (with-value-binding 214,6637
(define (call-with-pointer 220,6787
(define (fetch-pointer)228,6979
(define (backtracking-kf 231,7051
(define (make-kf-lambda 238,7221
(define (make-matcher-ks-lambda 241,7318
(define (make-parser-ks-lambda 246,7460
(define (protect 251,7623
(define (make-kf-identifier)254,7741
(define (make-ks-identifier)257,7800
(define (make-ptr-identifier)260,7859
(define (make-value-identifier)263,7918
(define (make-loop-identifier)266,7979
(define (generate-identifier 269,8039
(define (internal-identifier? 285,8456
(define internal-identifier-prefix 290,8661
(define internal-identifier-suffix 291,8702
(define *id-counters*)293,8744
(define (bind-delayed-lambdas 306,9326
(define (make-delayed-lambda 312,9555
(define (delay-call 322,9850
(define (delay-reference 325,9919
(define (lambda-expression? 328,9963
(define (optimize-by-substitution 332,10071
(define (substitute-let-expression 371,11350
(define (maybe-resubstitute 389,11901
(define (compute-substitutions 396,12103
(define (apply-substitutions 432,13198
(define (discard-unused-loop-bindings 476,14503
(define (discard-parameters-from-operands 493,15109
(define (discard-parameters-from-operand 510,15757
(define (apply-discards-to-calls 524,16290
(define (apply-discards-to-operands 559,17402
(define (apply-discards-to-list 579,17933
(define (operand-copyable? 589,18230
(define (operand-substitutable? 606,18783
(define (operand-discardable? 615,19191
(define (expression-may-have-side-effects? 621,19427
(define (count-references 628,19607
(define (optimize-pointer-usage 666,20710
(define (optimize-pointer-usage* 669,20817
(define (define-pointer-optimization 700,21701
(define pointer-optimizations 710,21965
(define (define-default-pointer-optimization 712,22001
(define default-pointer-optimizations 722,22297
(define (make-empty-pointers)724,22342
(define (current-pointer? 727,22390
(define (new-pointer 730,22488
(define (no-pointer 733,22617
(define (drop-pointer-refs 736,22722
(define (canonicalize-pointer-ref 740,22871
(define (%new-pointer 747,23076
(define (replace-item 759,23506
(define (%no-pointer 767,23744
(define (%drop-pointer-refs 772,23845
(define (%current-pointers 780,24022
(define (%id-pointers 787,24190
(define-pointer-optimization793,24324
(define-pointer-optimization '(809,24874
(define-pointer-optimization '(835,26267
(define-pointer-optimization '(840,26382
(define-pointer-optimization '(846,26639
(define-pointer-optimization '(851,26841
(define-pointer-optimization '(859,27129
(define-default-pointer-optimization '(867,27413
(define-default-pointer-optimization '(872,27604
(define-default-pointer-optimization887,28170
(define (peephole-optimize 898,28530
(define (define-peephole-optimizer 927,29480
(define peephole-optimizer-patterns 937,29802
(define (predicate-not-or 939,29844
(define-peephole-optimizer '(943,29958
(define-peephole-optimizer '(947,30074
(define-peephole-optimizer '(951,30198
(define-peephole-optimizer '(957,30400
(define-peephole-optimizer '(963,30610
(define-peephole-optimizer '(969,30836
(define-peephole-optimizer '(973,30982
(define-peephole-optimizer '(980,31195
(define-peephole-optimizer '(991,31537
(define-peephole-optimizer '(1002,31879
(define-peephole-optimizer '(1019,32468
(define-peephole-optimizer '(1036,33062
(define-peephole-optimizer '(1047,33399
(define-peephole-optimizer '(1062,33847
(define-peephole-optimizer '(1075,34234
(define-peephole-optimizer '(1079,34400
(define-peephole-optimizer '(1083,34565
(define-peephole-optimizer '(1095,34990
(define-peephole-optimizer '(1099,35116
(define-peephole-optimizer '(1103,35260
(define-peephole-optimizer '(1107,35388
(define-peephole-optimizer '(1111,35515
(define (optimize-group-expression 1115,35653
(define (optimize-group-expression-1 1121,35857
(define (flatten-subexpressions 1129,36105
(define (flatten-expressions 1132,36209
(define (trace-optimization 1141,36523
(define (trace-optimizer-tl 1154,36872

parser.pkg,221
MIT/GNU Scheme is free software;10,323
the Free Software Foundation;12,463
the Free Software Foundation; either version 2 of the License,12,463
the Free Software Foundation; either version 2 of the License, or 12,463

load.scm,0

ed-ffi.scm,0

compile.scm,0
