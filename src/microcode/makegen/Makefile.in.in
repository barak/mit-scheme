# -*- Makefile -*-
#
# $Id: Makefile.in.in,v 1.43 2007/01/12 06:30:04 cph Exp $
#
# Copyright (C) 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
#     1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
#     2005, 2006, 2007 Massachusetts Institute of Technology
#
# This file is part of MIT/GNU Scheme.
#
# MIT/GNU Scheme is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# MIT/GNU Scheme is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with MIT/GNU Scheme; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301, USA.

# **** BEGIN BOILERPLATE ****

SHELL = @SHELL@

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datarootdir = @datarootdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =
top_builddir = .

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@

ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs

# **** END BOILERPLATE ****

# **** Tool configuration ****

AUXDIR = $(libdir)/mit-scheme

CC = @CC@
M4 = $(srcdir)/makegen/m4.sh
AS = as
TAR = tar
GZIP_ENV = --best

DEFS = @DEFS@ @SCHEME_DEFS@ -DMIT_SCHEME -DDEFAULT_LIBRARY_PATH=\"$(AUXDIR)\"
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@ -I. -I$(srcdir)
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
M4_FLAGS = @M4_FLAGS@
AS_FLAGS = @AS_FLAGS@

COMPILE = $(CC) $(DEFS) $(CPPFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(LDFLAGS) -o $@
EXPAND = $(M4) $(M4_FLAGS)
ASSEMBLE = $(AS) $(AS_FLAGS)

# **** File configuration ****

SHARED_SOURCES = @(write-sources "files-core")@ \
	@(write-sources "files-os-prim")@ \
	@(write-sources "files-unix")@ \
	$(OPTIONAL_SOURCES)
SHARED_OBJECTS = @(write-objects "files-core")@ \
	@(write-objects "files-os-prim")@ \
	@(write-objects "files-unix")@ \
	$(OPTIONAL_OBJECTS)

STD_SOURCES = $(SHARED_SOURCES) @(write-sources "files-gc-std")@
STD_OBJECTS = $(SHARED_OBJECTS) @(write-objects "files-gc-std")@

BCH_SOURCES = $(SHARED_SOURCES) @(write-sources "files-gc-bch")@
BCH_OBJECTS = $(SHARED_OBJECTS) @(write-objects "files-gc-bch")@

GC_HEAD_FILES = @GC_HEAD_FILES@
OPTIONAL_SOURCES = @OPTIONAL_SOURCES@
OPTIONAL_OBJECTS = @OPTIONAL_OBJECTS@
STATIC_LIBS = @STATIC_PREFIX@ @STATIC_LIBS@ @STATIC_SUFFIX@
PRBFISH_LIBS = @PRBFISH_LIBS@
PRMD5_LIBS = @PRMD5_LIBS@

MODULE_TARGETS = @MODULE_TARGETS@
MODULE_CFLAGS = @MODULE_CFLAGS@
MODULE_LDFLAGS = @MODULE_LDFLAGS@
COMPILE_MODULE = $(COMPILE) $(MODULE_CFLAGS)
LINK_MODULE = $(LINK) $(MODULE_LDFLAGS)
MODULE_LIBS = -lc

# **** Rules for C back end (part 1) ****

@LIARC_RULES_1@

# **** Program definitions ****

bin_PROGRAMS = scheme bchscheme
aux_PROGRAMS = gcdrone ppband
aux_LIBS = $(MODULE_TARGETS)
aux_DATA = utabmd.bin
EXTRA_PROGRAMS = findprim bintopsb psbtobin

scheme_SOURCES = $(STD_SOURCES) usrdef.c $(LIARC_SOURCES)
scheme_OBJECTS = $(STD_OBJECTS) usrdef.o $(LIARC_OBJECTS)
scheme_DEPENDENCIES = 
scheme_LDFLAGS = @DLD_LDFLAGS@
scheme_LIBS = $(STATIC_LIBS) $(LIBS)

bchscheme_SOURCES = $(BCH_SOURCES) bchdef.c $(LIARC_SOURCES)
bchscheme_OBJECTS = $(BCH_OBJECTS) bchdef.o $(LIARC_OBJECTS)
bchscheme_DEPENDENCIES = 
bchscheme_LDFLAGS = @DLD_LDFLAGS@
bchscheme_LIBS = $(STATIC_LIBS) $(LIBS)

bchdrn_SOURCES = bchdrn.c bchutl.c
bchdrn_OBJECTS = bchdrn.o bchutl.o
bchdrn_DEPENDENCIES = 
bchdrn_LDFLAGS = 
bchdrn_LIBS = $(LIBS)

findprim_SOURCES = findprim.c
findprim_OBJECTS = findprim.o
findprim_DEPENDENCIES = 
findprim_LDFLAGS = 
findprim_LIBS = $(LIBS)

bintopsb_SOURCES = bintopsb.c missing.c
bintopsb_OBJECTS = bintopsb.o missing.o
bintopsb_DEPENDENCIES = 
bintopsb_LDFLAGS = 
bintopsb_LIBS = $(LIBS)

psbtobin_SOURCES = psbtobin.c missing.c
psbtobin_OBJECTS = psbtobin.o missing.o
psbtobin_DEPENDENCIES = 
psbtobin_LDFLAGS = 
psbtobin_LIBS = $(LIBS)

ppband_SOURCES = ppband.c outf.c
ppband_OBJECTS = ppband.o outf.o
ppband_DEPENDENCIES = load.c storage.c
ppband_LDFLAGS = 
ppband_LIBS = $(LIBS)

ALL_PROGRAMS = $(bin_PROGRAMS) $(aux_PROGRAMS)
ALL_LIBS = $(aux_LIBS)
ALL_DATA = $(aux_DATA)

MOSTLYCLEAN_FILES = *.o cmpauxmd.s usrdef.c compinit.h utabmd.c utabmd.bci \
	bchdef.c $(LIARC_OBJECTS)

CLEAN_FILES = $(ALL_PROGRAMS) $(ALL_LIBS) $(ALL_DATA) $(EXTRA_PROGRAMS)

DISTCLEAN_FILES = Makefile config.h config.cache config.log config.status \
	cmpauxmd.m4 cmpauxmd.c cmpintmd.h makegen-cc

MAINTAINER_CLEAN_FILES = Makefile.in Makefile.deps liarc-rules-1 \
	config.h.in configure TAGS

# **** Implicit rules ****

.SUFFIXES:
.SUFFIXES: .c .o .s .m4

.c.o:
	$(COMPILE) -o $*.o -c $*.c

.m4.s:
	$(EXPAND) $*.m4 > $*.s

.s.o:
	$(ASSEMBLE) -o $*.o $*.s

# **** Main rules ****

default-target: $(ALL_PROGRAMS) $(ALL_LIBS)

all: $(ALL_PROGRAMS) $(ALL_LIBS) $(ALL_DATA)

scheme: $(scheme_OBJECTS) $(scheme_DEPENDENCIES)
	-rm -f $@
	$(LINK) $(scheme_LDFLAGS) $(scheme_OBJECTS) $(scheme_LIBS)

usrdef.c: $(STD_SOURCES) findprim Makefile
	-rm -f $@
	./findprim $(STD_SOURCES) > usrdef.c

bchscheme: $(bchscheme_OBJECTS) $(bchscheme_DEPENDENCIES)
	-rm -f $@
	$(LINK) $(bchscheme_LDFLAGS) $(bchscheme_OBJECTS) $(bchscheme_LIBS)

bchdef.c: $(BCH_SOURCES) findprim Makefile
	-rm -f $@
	./findprim $(BCH_SOURCES) > bchdef.c

gcdrone: $(bchdrn_OBJECTS) $(bchdrn_DEPENDENCIES)
	-rm -f $@
	$(LINK) $(bchdrn_LDFLAGS) $(bchdrn_OBJECTS) $(bchdrn_LIBS)

findprim: $(findprim_OBJECTS) $(findprim_DEPENDENCIES)
	-rm -f $@
	$(LINK) $(findprim_LDFLAGS) $(findprim_OBJECTS) $(findprim_LIBS)

bintopsb: $(bintopsb_OBJECTS) $(bintopsb_DEPENDENCIES)
	-rm -f $@
	$(LINK) $(bintopsb_LDFLAGS) $(bintopsb_OBJECTS) $(bintopsb_LIBS)

psbtobin: $(psbtobin_OBJECTS) $(psbtobin_DEPENDENCIES)
	-rm -f $@
	$(LINK) $(psbtobin_LDFLAGS) $(psbtobin_OBJECTS) $(psbtobin_LIBS)

ppband: $(ppband_OBJECTS) $(ppband_DEPENDENCIES)
	-rm -f $@
	$(LINK) $(ppband_LDFLAGS) $(ppband_OBJECTS) $(ppband_LIBS)

utabmd.bin: utabmd.scm
	./utabmd.sh

prbfish.so: prbfish.o
	$(LINK_MODULE) $^ $(PRBFISH_LIBS) $(MODULE_LIBS)

prmd5.so: prmd5.o
	$(LINK_MODULE) $^ $(PRMD5_LIBS) $(MODULE_LIBS)

prmhash.so: prmhash.o
	$(LINK_MODULE) $^ -lmhash $(MODULE_LIBS)

prmcrypt.so: prmcrypt.o
	$(LINK_MODULE) $^ -lmcrypt -lltdl $(MODULE_LIBS)

prgdbm.so: prgdbm.o
	$(LINK_MODULE) $^ -lgdbm $(MODULE_LIBS)

prdb4.so: prdb4.o
	$(LINK_MODULE) $^ -ldb-4 $(MODULE_LIBS)

prpgsql.so: prpgsql.o
	$(LINK_MODULE) $^ -lpq $(MODULE_LIBS)

@MODULE_RULES@

tags: TAGS
TAGS:
	etags -r '/^DEF[A-Z0-9_]*[ \t]*(\("[^"]+"\|[a-zA-Z_][a-zA-Z0-9_]*\)/' \
	    *.[ch] */*.[ch]

mostlyclean:
	-rm -f $(MOSTLYCLEAN_FILES)

clean: mostlyclean
	-rm -f $(CLEAN_FILES)

distclean: clean
	-rm -f $(DISTCLEAN_FILES)
	-rm -rf autom4te.cache

maintainer-clean: distclean
	-rm -f $(MAINTAINER_CLEAN_FILES)
	( cd cmpauxmd && $(MAKE) $@ )

install: install-binPROGRAMS install-auxPROGRAMS install-auxLIBS \
	install-auxDATA

install-binPROGRAMS: $(bin_PROGRAMS)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; \
	for p in $$list; do \
	    if test -f $$p; then \
		echo "$(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/."; \
		$(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/.; \
	    fi; \
	done

install-auxPROGRAMS: $(aux_PROGRAMS)
	$(mkinstalldirs) $(DESTDIR)$(AUXDIR)
	@list='$(aux_PROGRAMS)'; \
	for p in $$list; do \
	    if test -f $$p; then \
		echo "$(INSTALL_PROGRAM) $$p $(DESTDIR)$(AUXDIR)/."; \
		$(INSTALL_PROGRAM) $$p $(DESTDIR)$(AUXDIR)/.; \
	    fi; \
	done

install-auxLIBS: $(aux_LIBS)
	$(mkinstalldirs) $(DESTDIR)$(AUXDIR)/lib
	@list='$(aux_LIBS)'; \
	for p in $$list; do \
	    if test -f $$p; then \
		echo "$(INSTALL_DATA) $$p $(DESTDIR)$(AUXDIR)/lib/."; \
		$(INSTALL_DATA) $$p $(DESTDIR)$(AUXDIR)/lib/.; \
	    fi; \
	done

install-auxDATA: $(aux_DATA)
	$(mkinstalldirs) $(DESTDIR)$(AUXDIR)
	@list='$(aux_DATA)'; \
	for p in $$list; do \
	    if test -f $$p; then \
		echo "$(INSTALL_DATA) $$p $(DESTDIR)$(AUXDIR)/."; \
		$(INSTALL_DATA) $$p $(DESTDIR)$(AUXDIR)/.; \
	    fi; \
	done

.PHONY: default-target
.PHONY: all tags TAGS mostlyclean clean distclean maintainer-clean
.PHONY: install install_binPROGRAMS install_auxPROGRAMS install_auxDATA

# **** File dependencies ****

@(write-dependencies)@

# **** Rules for C back end (part 2) ****

@LIARC_RULES_2@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
