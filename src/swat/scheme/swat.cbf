;;; -*-Scheme-*-

;;(define (cf-conditionally filename)
;;  (sf-conditionally filename)
;;  (if (not (file-processed? filename "bin" "com"))
;;      (compile-bin-file filename)))
;;
;;
;;(fluid-let ((sf/default-syntax-table (->environment '(RUNTIME)))
;;	    (sf/default-declarations (cons '(usual-integrations)
;;					   sf/default-declarations)))
;;  (cf-conditionally "scc-macros")
;;  (load "scc-macros")
;;  (cf-conditionally "uitk-macros")
;;  (load "uitk-macros")
;;  (cf-conditionally "control-floating-errors")
;;  (cf-conditionally "structures")
;;  (cf-conditionally "structures2")
;;  (cf-conditionally "generics")
;;  (cf-conditionally "widget-mit")
;;  (cf-conditionally "tk-mit")
;;  (cf-conditionally "uitk")
;;  (cf-conditionally "xlibCONSTANTS")
;;  (cf-conditionally "mit-xlib")
;;  (cf-conditionally "mit-xhooks")
;;  (cf-conditionally "baseobj")
;;  (cf-conditionally "widget")
;;  (cf-conditionally "geometry")
;;  (cf-conditionally "simple")
;;  (cf-conditionally "canvas")
;;  (cf-conditionally "menu")
;;  (cf-conditionally "text")
;;
;;  )
;;



(compile-directory ".")

;; For `make install':

(with-output-to-file "compiled"
  (lambda ()
    (write "Scheme compiled")))