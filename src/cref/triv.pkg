#| -*-Scheme-*-

$Id: triv.pkg,v 1.7 2001/08/20 21:02:43 cph Exp $

Copyright (c) 2001 Massachusetts Institute of Technology

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
USA.
|#

;;;; CREF Packaging: hand-compiled package for bootstrapping

(vector
 'PACKAGE-DESCRIPTIONS
 2
 (let ((package
	(lambda (package-name ancestors exported-names imported-names)
	  (vector package-name
		  ancestors
		  '#()
		  (list->vector
		   (map (lambda (name)
			  (vector name (car ancestors)))
			exported-names))
		  (list->vector
		   (map (lambda (n.p)
			  (vector (car n.p) (cdr n.p)))
			imported-names))
		  #f))))
   (vector (package '(cross-reference)
		    '(())
		    '(cref/generate-all
		      cref/generate-constructors
		      cref/generate-cref
		      cref/generate-cref-unusual
		      cref/generate-trivial-constructor)
		    '())
	   (package '(cross-reference analyze-file)
		    '((cross-reference) ())
		    '(analyze-file)
		    '())
	   (package '(cross-reference constructor)
		    '((cross-reference) ())
		    '(construct-external-descriptions)
		    '())
	   (package '(cross-reference formatter)
		    '((cross-reference) ())
		    '(format-packages
		      format-packages-unusual)
		    '())
	   (package '(cross-reference reader)
		    '((cross-reference) ())
		    '(read-file-analyses!
		      read-package-model
		      resolve-references!)
		    '((package-file? . (package))))))
 (let ((files
	(lambda (package-name . files)
	  (vector package-name
		  (vector (list->vector files))
		  '#()
		  '#()))))
   (vector (files '(cross-reference) "mset" "object" "toplev")
	   (files '(cross-reference analyze-file) "anfile")
	   (files '(cross-reference constructor) "conpkg")
	   (files '(cross-reference formatter) "forpkg")
	   (files '(cross-reference reader) "redpkg"))))