
analyze.scm,9262
(define (expression/always-false? 39,1411
(define always-false?-dispatch-vector42,1535
(define define-method/always-false?45,1611
(define-method/always-false? 'access 48,1714
(define-method/always-false? 'assignment 50,1769
(define-method/always-false? 'combination52,1828
(define-method/always-false? 'conditional61,2198
(define-method/always-false? 'constant68,2571
(define-method/always-false? 'declaration72,2674
(define-method/always-false? 'delay 78,2849
(define-method/always-false? 'disjunction80,2903
(define-method/always-false? 'open-block85,3116
(define-method/always-false? 'procedure 91,3293
(define-method/always-false? 'quotation 93,3351
(define-method/always-false? 'reference 95,3409
(define-method/always-false? 'sequence97,3467
(define-method/always-false? 'the-environment 102,3605
(define (expression/boolean? 109,3808
(define boolean?-dispatch-vector112,3922
(define define-method/boolean?115,3993
(define-method/boolean? 'access 118,4086
(define-method/boolean? 'assignment 120,4136
(define-method/boolean? 'combination122,4190
(define-method/boolean? 'conditional128,4449
(define-method/boolean? 'constant135,4807
(define-method/boolean? 'declaration141,4999
(define-method/boolean? 'delay 145,5124
(define-method/boolean? 'disjunction147,5174
(define-method/boolean? 'open-block153,5451
(define-method/boolean? 'procedure 158,5583
(define-method/boolean? 'quotation 160,5636
(define-method/boolean? 'reference 162,5689
(define-method/boolean? 'sequence164,5742
(define-method/boolean? 'the-environment 168,5865
(define (expression/effect-free? 174,6069
(define effect-free?-dispatch-vector177,6191
(define define-method/effect-free?180,6266
(define-method/effect-free? 'access183,6367
(define-method/effect-free? 'assignment 187,6491
(define-method/effect-free? 'combination189,6549
(define-method/effect-free? 'conditional197,6927
(define-method/effect-free? 'constant 205,7367
(define-method/effect-free? 'declaration207,7422
(define-method/effect-free? 'delay 212,7605
(define-method/effect-free? 'disjunction214,7657
(define-method/effect-free? 'open-block223,8074
(define-method/effect-free? 'procedure 229,8240
(define-method/effect-free? 'quotation 231,8296
(define-method/effect-free? 'reference 233,8353
(define-method/effect-free? 'sequence235,8409
(define-method/effect-free? 'the-environment 239,8539
(define (expression/free-variables 247,8757
(define (expressions/free-variables 250,8883
(define free-variables-dispatch-vector256,9113
(define define-method/free-variables259,9190
(define-method/free-variables 'access262,9295
(define-method/free-variables 'assignment266,9423
(define-method/free-variables 'combination272,9638
(define-method/free-variables 'conditional279,9868
(define-method/free-variables 'constant291,10351
(define-method/free-variables 'declaration296,10456
(define-method/free-variables 'delay300,10594
(define-method/free-variables 'disjunction304,10719
(define-method/free-variables 'open-block313,11042
(define-method/free-variables 'procedure331,11631
(define-method/free-variables 'quotation337,11843
(define-method/free-variables 'reference342,11968
(define-method/free-variables 'sequence346,12092
(define-method/free-variables 'the-environment350,12221
(define-integrable (no-free-variables)355,12353
(define-integrable (singleton-variable 358,12400
(define (expression/free-variable? 367,12684
(define (expressions/free-variable? 370,12821
(define is-free-dispatch-vector377,13059
(define define-method/free-variable?380,13129
(define-method/free-variable? 'access383,13227
(define-method/free-variable? 'assignment387,13373
(define-method/free-variable? 'combination392,13582
(define-method/free-variable? 'conditional398,13822
(define-method/free-variable? 'constant 413,14534
(define-method/free-variable? 'declaration415,14592
(define-method/free-variable? 'delay419,14748
(define-method/free-variable? 'disjunction423,14891
(define-method/free-variable? 'open-block431,15236
(define-method/free-variable? 'procedure441,15608
(define-method/free-variable? 'quotation 445,15753
(define-method/free-variable? 'reference447,15812
(define-method/free-variable? 'sequence451,15939
(define-method/free-variable? 'the-environment 461,16293
(define (expression/free-variable-info 471,16698
(define (expression/free-variable-info-dispatch 474,16834
(define (expressions/free-variable-info 478,16999
(define free-info-dispatch-vector485,17250
(define define-method/free-variable-info488,17322
(define-method/free-variable-info 'access491,17426
(define-method/free-variable-info 'assignment496,17608
(define-method/free-variable-info 'combination502,17850
(define-method/free-variable-info 'conditional514,18357
(define-method/free-variable-info 'constant524,18747
(define-method/free-variable-info 'declaration529,18883
(define-method/free-variable-info 'delay534,19075
(define-method/free-variable-info 'disjunction539,19254
(define-method/free-variable-info 'open-block547,19544
(define-method/free-variable-info 'procedure557,19916
(define-method/free-variable-info 'quotation562,20097
(define-method/free-variable-info 'reference567,20234
(define-method/free-variable-info 'sequence573,20434
(define-method/free-variable-info 'the-environment578,20607
(define (expression/never-false? 589,21002
(define never-false?-dispatch-vector592,21124
(define define-method/never-false?595,21199
(define-method/never-false? 'access 598,21300
(define-method/never-false? 'assignment 600,21354
(define-method/never-false? 'combination602,21412
(define-method/never-false? 'conditional611,21781
(define-method/never-false? 'constant 618,22151
(define-method/never-false? 'declaration620,22213
(define-method/never-false? 'delay 624,22346
(define-method/never-false? 'disjunction626,22398
(define-method/never-false? 'open-block631,22606
(define-method/never-false? 'procedure 636,22746
(define-method/never-false? 'quotation 638,22802
(define-method/never-false? 'reference 640,22859
(define-method/never-false? 'sequence642,22916
(define-method/never-false? 'the-environment 646,23047
(define (expression/pure-false? 653,23307
(define pure-false?-dispatch-vector656,23427
(define define-method/pure-false?659,23501
(define-method/pure-false? 'access 662,23600
(define-method/pure-false? 'assignment 664,23653
(define-method/pure-false? 'combination666,23710
(define-method/pure-false? 'conditional677,24169
(define-method/pure-false? 'constant685,24606
(define-method/pure-false? 'declaration689,24707
(define-method/pure-false? 'delay 694,24843
(define-method/pure-false? 'disjunction696,24895
(define-method/pure-false? 'open-block 702,25122
(define-method/pure-false? 'procedure 704,25179
(define-method/pure-false? 'quotation 706,25235
(define-method/pure-false? 'reference 708,25291
(define-method/pure-false? 'sequence710,25347
(define-method/pure-false? 'the-environment 716,25585
(define (expression/pure-true? 724,25899
(define pure-true?-dispatch-vector727,26017
(define define-method/pure-true?730,26090
(define-method/pure-true? 'access 733,26187
(define-method/pure-true? 'assignment 735,26239
(define-method/pure-true? 'combination737,26295
(define-method/pure-true? 'conditional748,26753
(define-method/pure-true? 'constant756,27187
(define-method/pure-true? 'declaration760,27290
(define-method/pure-true? 'delay 764,27419
(define-method/pure-true? 'disjunction766,27470
(define-method/pure-true? 'open-block 772,27742
(define-method/pure-true? 'procedure 774,27798
(define-method/pure-true? 'quotation 776,27853
(define-method/pure-true? 'reference 778,27908
(define-method/pure-true? 'sequence780,27963
(define-method/pure-true? 'the-environment 786,28188
(define (expression/size 795,28492
(define size-dispatch-vector798,28598
(define define-method/size801,28665
(define-method/size 'access804,28750
(define-method/size 'assignment808,28867
(define-method/size 'combination812,28986
(define-method/size 'conditional819,29268
(define-method/size 'constant827,29540
(define-method/size 'declaration830,29628
(define-method/size 'delay834,29754
(define-method/size 'disjunction838,29868
(define-method/size 'open-block843,30067
(define-method/size 'procedure852,30370
(define-method/size 'quotation856,30486
(define-method/size 'reference860,30608
(define-method/size 'sequence865,30705
(define (expression->list 877,31050
(define expression->list-dispatch-vector880,31169
(define define-method/expression->list883,31248
(define-method/expression->list 'access886,31357
(define-method/expression->list 'assignment891,31521
(define-method/expression->list 'combination896,31691
(define-method/expression->list 'conditional901,31886
(define-method/expression->list 'constant907,32139
(define-method/expression->list 'declaration910,32235
(define-method/expression->list 'delay915,32423
(define-method/expression->list 'disjunction919,32551
(define-method/expression->list 'open-block924,32746
(define-method/expression->list 'procedure934,33069
(define-method/expression->list 'quotation946,33560
(define-method/expression->list 'reference950,33677
(define-method/expression->list 'sequence954,33798

butils.scm,102
(define (directory-processor 32,1107
(define sf-directory62,2209
(define (sf-conditionally 69,2362

cgen.scm,1238
(define *sf-associate*33,1160
(define (cgen/output 38,1228
(define (cgen/external 42,1318
(define (cgen/external-with-declarations 47,1455
(define (cgen/top-level 51,1600
(define (cgen/declaration 59,1888
(define flush-declarations?)65,2098
(define (maybe-flush-declarations 67,2128
(define *known-compiler-declarations*82,2685
(define (known-compiler-declaration? 100,3093
(define (cgen/expressions 103,3203
(define (cgen/expression 110,3388
(define dispatch-vector113,3505
(define %define-method/cgen116,3567
(define-integrable (define-method/cgen 119,3648
(define (cgen/variable 124,3824
(define-method/cgen 'access132,4083
(define-method/cgen 'assignment137,4261
(define-method/cgen 'combination144,4506
(define-method/cgen 'conditional150,4733
(define-method/cgen 'constant157,5030
(define-method/cgen 'declaration162,5151
(define-method/cgen 'delay168,5360
(define-method/cgen 'disjunction172,5500
(define-method/cgen 'procedure178,5731
(define (cgen-open-block 195,6332
(define-method/cgen 'quotation216,7241
(define-method/cgen 'reference221,7383
(define-method/cgen 'sequence225,7508
(define (remove-references 235,7855
(define-method/cgen 'the-environment243,8065
(define (pp-expression 249,8225

chtype.scm,886
(define (change-type/block 33,1156
(define (change-type/expressions 40,1413
(define (change-type/expression 45,1564
(define dispatch-vector49,1729
(define define-method/change-type52,1791
(define (change-type/object 57,1929
(define-method/change-type 'access64,2143
(define-method/change-type 'assignment68,2265
(define-method/change-type 'combination72,2389
(define-method/change-type 'conditional77,2582
(define-method/change-type 'constant83,2843
(define-method/change-type 'declaration86,2901
(define-method/change-type 'delay90,3032
(define-method/change-type 'disjunction94,3151
(define-method/change-type 'open-block99,3347
(define-method/change-type 'procedure107,3633
(define-method/change-type 'quotation111,3754
(define-method/change-type 'reference115,3881
(define-method/change-type 'sequence118,3939
(define-method/change-type 'the-environment122,4062

copy.scm,1333
(define root-block)33,1145
(define copy/variable/free)34,1165
(define copy/declarations)35,1193
(define (copy/expression/intern 37,1221
(define (copy/expression/extern 44,1522
(define (copy/expressions 51,1823
(define (copy/expression 56,1980
(define dispatch-vector60,2120
(define define-method/copy63,2182
(define (environment/make)66,2262
(define (environment/bind 69,2297
(define (environment/lookup 72,2398
(define (environment/rebind 79,2631
(define (make-renamer 87,2838
(define (copy/quotation 94,3080
(define (copy/block 104,3400
(define (copy/variable 122,4004
(define (copy/variable/free/intern 128,4197
(define (copy/variable/free/extern 147,4895
(define (copy/declarations/intern 150,5005
(define (copy/declarations/extern 161,5312
(define-method/copy 'access173,5705
(define-method/copy 'assignment186,6089
(define-method/copy 'combination194,6376
(define-method/copy 'conditional202,6675
(define-method/copy 'constant210,7042
(define-method/copy 'declaration215,7172
(define-method/copy 'delay224,7472
(define-method/copy 'disjunction230,7661
(define-method/copy 'procedure239,7968
(define-method/copy 'open-block258,8577
(define-method/copy 'quotation275,9157
(define-method/copy 'reference280,9305
(define-method/copy 'sequence287,9521
(define-method/copy 'the-environment293,9720

emodel.scm,306
(define (variable/make&bind! 33,1142
(define (%variable/make&bind! 38,1312
(define (block/lookup-name 44,1510
(define (%block/lookup-name 52,1792
(define (block/limited-lookup 57,1933
(define (block/lookup-names 65,2204
(define (block/for-each-bound-variable 70,2333
(define (block/unsafe! 73,2444

gconst.scm,74
(define global-constant-objects32,1114
(define global-primitives43,1407

object.scm,3054
(define (enumeration/make 34,1122
(define-structure (enumerand 51,1732
(define-integrable (enumeration/cardinality 57,1913
(define-integrable (enumeration/index->enumerand 60,2008
(define (enumeration/name->enumerand 63,2117
(define-integrable (enumeration/name->index 67,2269
(define-syntax define-enumeration70,2400
(define-enumeration enumeration/random85,2983
(define-enumeration enumeration/expression90,3069
(define-syntax define-simple-type114,3557
(define-integrable (object/enumerand 135,4334
(define (set-object/enumerand! 138,4405
(define-integrable (object/scode 141,4491
(define (with-new-scode 144,4558
(define-structure (block 150,4683
(define-guarantee block 161,5032
(define (block/make 163,5066
(define-structure (delayed-integration170,5303
(define-guarantee delayed-integration 180,5630
(define-structure (variable186,5840
(define-guarantee variable 200,6274
(define-simple-type access 203,6330
(define-simple-type assignment 204,6386
(define-simple-type combination 205,6444
(define-simple-type conditional 206,6521
(define-simple-type constant 207,6592
(define-simple-type declaration 208,6633
(define-simple-type delay 209,6695
(define-simple-type disjunction 210,6738
(define-simple-type open-block 211,6798
(define-simple-type procedure 212,6866
(define-simple-type quotation 213,6941
(define-simple-type sequence 214,6994
(define-simple-type the-environment 215,7049
(define primitive-boolean-predicates220,7183
(define (expression/call-to-boolean-predicate? 265,8162
(define effect-free-primitives277,8779
(define (expression/call-to-effect-free-primitive? 298,9207
(define (expression/call-to-not? 310,9767
(define (expression/constant-eq? 320,10228
(define-integrable (global-ref/make 326,10492
(define (global-ref? 332,10653
(define sf:enable-constant-folding? 342,10990
(define sf:enable-argument-deletion? 347,11236
(define combination/constant-folding-operators351,11373
(define (foldable-combination? 442,12887
(define (reducible-operator? 458,13575
(define (combination/make 474,14341
(define (combination/fold-constant 519,16655
(define-integrable (partition-operands 532,17128
(define (sequence/make 578,19369
(define-structure (reference602,20358
(define-guarantee reference 616,20822
(define-syntax define-flag620,20882
(define-flag side-effected 636,21411
(define-flag referenced 637,21484
(define-flag integrated 638,21555
(define-flag may-ignore 639,21627
(define-flag must-ignore 640,21699
(define open-block/value-marker642,21773
(define (expression/make-dispatch-vector)647,21957
(define (expression/make-method-definer 650,22066
(define-integrable (expression/method 656,22289
(define-integrable (name->method 659,22436
(define integration-info-tag665,22639
(define-integrable (make-integration-info 668,22705
(define-integrable (integration-info? 671,22802
(define-guarantee integration-info 675,22920
(define (integration-info/expression 677,22976
(define-integrable (constant->integration-info 681,23135
(define (noisy-test 692,23590

pardec.scm,1414
(define (declarations/parse 35,1180
(define (merge-usual-integrations 46,1531
(define (declarations/make-null)63,2087
(define (declarations/original 66,2155
(define (declarations/bind 69,2250
(define (declarations/map 89,2938
(define (declarations/known? 101,3420
(define-structure (declaration-set106,3533
(define-structure (declaration116,3820
(define (make-declarations 144,4785
(define (parse-declaration 154,5121
(define (define-declaration 160,5314
(define known-declarations169,5558
(define (known-declaration? 172,5593
(define-declaration 'usual-integrations178,5761
(define (r7rs-usual-integrations 253,8040
(define (define-integration-declaration 277,8759
(define-integration-declaration 'integrate)285,8974
(define-integration-declaration 'integrate-operator)286,9018
(define-declaration 'integrate-external288,9072
(define (operations->external 324,10174
(define-declaration 'ignorable357,11170
(define-declaration 'ignore371,11637
(define-declaration 'reduce-operator397,12320
(define (check-declaration-syntax 408,12691
(define-declaration 'replace-operator417,12994
(define (make-dumpable-expander 453,14154
(define (dumpable-expander? 459,14364
(define (dumpable-expander->dumped-expander 465,14540
(define (dumped-expander? 468,14655
(define (dumped-expander/declaration 472,14760
(define dumped-expander-tag475,14826
(define-declaration 'expand-operator482,15108

pthmap.scm,760
(define pathname-map/make)32,1089
(define pathname-map?)33,1116
(define pathname-map/lookup)34,1139
(define pathname-map/insert!)35,1168
(define pathname-map/tag 39,1208
(define pathname-map/root-node 40,1249
(define (node/make)44,1328
(define unbound-value 47,1377
(define node/value 48,1416
(define set-node/value! 49,1440
(define node/alist 50,1474
(define set-node/alist! 51,1498
(define (node/associate 53,1533
(define (make-node-list 58,1647
(define (cons-if 68,1949
(define (find-node 73,2026
(define (find-or-create-node 80,2209
(define (create-node 88,2444
(set! pathname-map/make97,2680
(set! pathname-map?101,2783
(define-print-method pathname-map?106,2908
(set! pathname-map/lookup109,2985
(set! pathname-map/insert!121,3310

reduct.scm,910
(define (lookup 158,5131
(define-integrable (handle-variable 165,5312
(define (->expression 175,5578
(define (any-shadowed? 215,6730
(define (filter-vars 221,6922
(define (combine-1 231,7132
(define (combine-2 234,7214
(define (identity-combiner 241,7384
(define (->singleton-combiner 245,7472
(define (->mapper-combiner 252,7666
(define (->wrapper 260,7897
(define (identity-wrapper 271,8156
(define (->error-thunk 275,8253
(define (->value-thunk 280,8373
(define (invert 287,8517
(define (make-grouper 293,8603
(define (group-right 333,9727
(define (group-left 341,9978
(define-integrable (with-arguments-from 351,10244
(define (decode-options 356,10348
(define (fail 383,11038
(define (incompatible 386,11123
(define (with-wrapper 390,11254
(define (with-singleton 403,11748
(define (reducer/make 415,12084
(define (replacement/make 491,14257
(define (parse-replacement 517,14972

subst.scm,3443
(define *top-level-block*)33,1159
(define (integrate/get-top-level-block)35,1187
(define *current-block-names*)40,1329
(define (ignored-variable-warning 42,1361
(define (integrate/top-level 48,1588
(define (integrate/top-level* 51,1705
(define (integrate/expressions 73,2526
(define (integrate/actions 78,2710
(define (integrate/expression 85,2928
(define dispatch-vector89,3083
(define define-method/integrate92,3145
(define-method/integrate 'access95,3231
(define-method/integrate 'assignment131,4473
(define-method/integrate 'combination154,5448
(define-method/integrate 'conditional164,5825
(define sf:enable-conditional-folding? 173,6265
(define (integrate/conditional 175,6309
(define-method/integrate 'constant212,7958
(define-method/integrate 'declaration217,8103
(define-method/integrate 'delay231,8607
(define-method/integrate 'disjunction238,8844
(define sf:enable-disjunction-folding? 246,9132
(define (integrate/disjunction 248,9176
(define-method/integrate 'open-block283,10807
(define-method/integrate 'procedure291,11113
(define-method/integrate 'quotation297,11347
(define (integrate/quotation 302,11515
(define sf:warn-on-unintegrated-argument 312,11891
(define-method/integrate 'reference314,11937
(define (reassign 351,13013
(define-method/integrate 'sequence356,13147
(define-method/integrate 'the-environment363,13401
(define sf:display-top-level-procedure-names? 374,13657
(define (maybe-displaying-name 376,13708
(define (integrate/open-block 386,14002
(define (variable/unreferenced? 420,15643
(define (integrate/procedure 426,15868
(define integrate-combination-dispatch-vector463,17406
(define define-method/integrate-combination466,17490
(define (integrate/combination 469,17609
(define-method/integrate-combination 'access474,17864
(define (integrate/access-operator 479,18103
(define-method/integrate-combination 'assignment525,19679
(define-method/integrate-combination 'combination535,20134
(define-method/integrate-combination 'conditional540,20359
(define sf:enable-elide-double-negatives? 545,20583
(define-method/integrate-combination 'constant547,20630
(define (integrate/primitive-operator 574,22081
(define-method/integrate-combination 'declaration579,22318
(define-method/integrate-combination 'delay584,22542
(define-method/integrate-combination 'disjunction594,22956
(define-method/integrate-combination 'open-block599,23208
(define-method/integrate-combination 'procedure605,23510
(define (integrate/procedure-operator 610,23760
(define-method/integrate-combination 'quotation617,24084
(define-method/integrate-combination 'reference622,24334
(define (integrate/reference-operator 627,24582
(define-method/integrate-combination 'sequence667,26070
(define-method/integrate-combination 'the-environment672,26319
(define (integrate-combination/default 679,26676
(define (integrate/hack-apply? 703,27624
(define (integrate/compound-operator 774,30079
(define (combination-with-operator 817,32105
(define (declaration-with-expression 823,32333
(define (procedure-with-body 834,32846
(define (hackify-variable 846,33377
(define (sequence-with-actions 851,33523
(define (constant/system-global-environment? 854,33626
(define (environment/recursive-bind 860,33799
(define (integrate/name 875,34483
(define (variable/final-value 894,35201
(define (delayed-integration/in-progress? 908,35675
(define (delayed-integration/force 911,35814

tables.scm,598
(define (environment/make)39,1304
(define (environment/bind 42,1339
(define-integrable (environment/bind-multiple 46,1487
(define (environment/lookup 49,1608
(define *unknown-value 57,1867
(define (simulate-unknown-application 61,2041
(define (simulate-application 86,2902
(define (operations/make)189,6206
(define (operations/lookup 192,6257
(define (operations/lookup-global 210,6870
(define (operations/shadow 219,7178
(define (operations/bind 228,7444
(define (operations/bind-top-level 236,7754
(define (operations/bind-global 244,8094
(define (operations/map-external 252,8425

toplev.scm,1364
(define bin-pathname-type 34,1133
(define (integrate/procedure 36,1167
(define (integrate/sexp 41,1339
(define (integrate/scode 47,1562
(define (sf 50,1660
(define (syntax&integrate 55,1873
(define sf:noisy? 64,2131
(define (sf/set-usual-integrations-default-deletions! 66,2154
(define (pathname/normalize 72,2404
(define sf/default-syntax-table75,2503
(define sf/default-declarations78,2565
(define sf/top-level-definitions81,2605
(define sf/usual-integrations-default-deletions84,2646
(define (syntax-file 89,2723
(define (sf/pathname-defaulting 102,3273
(define (sf/internal 122,3892
(define (sf/file->scode 155,5061
(define externs-pathname-type173,5675
(define sf/default-externs-pathname176,5715
(define (read-externs-file 179,5814
(define (write-externs-file 214,6973
(define externs-file-tag223,7226
(define externs-file-version226,7317
(define (integrate/file 231,7379
(define (integrate/simple 238,7555
(define (integrate/kernel 247,7816
(define (integrate/kernel-1 253,8018
(define (phase:read 260,8183
(define (phase:syntax 266,8314
(define (phase:transform 280,8762
(define (phase:optimize 285,8896
(define (phase:generate-scode 290,9025
(define (integrate/r7rs-scode-file 297,9287
(define (integrate/r7rs-library 302,9406
(define (phase:transform-r7rs 313,9767
(define (in-phase 318,9900
(define (timed 325,10055

usicon.scm,198
(define usual-integrations/constant-names)33,1153
(define usual-integrations/constant-values)34,1196
(define usual-integrations/constant-alist)35,1240
(define (usual-integrations/cache!)37,1284

usiexp.scm,3725
(define (make-combination 35,1217
(define (make-operand-binding 41,1376
(define (constant-eq? 54,1814
(define (unary-arithmetic 58,1940
(define (binary-arithmetic 65,2127
(define zero?-expansion73,2345
(define positive?-expansion76,2416
(define negative?-expansion79,2495
(define 1+-expansion82,2574
(define -1+-expansion85,2639
(define quotient-expansion88,2706
(define remainder-expansion91,2786
(define modulo-expansion94,2868
(define (pairwise-test 99,2979
(define (pairwise-test-inverse 114,3497
(define =-expansion122,3746
(define <-expansion127,3861
(define >-expansion132,3984
(define <=137,4107
(define >=138,4165
(define (fix:zero?-expansion 142,4249
(define (fix:=148,4467
(define char=155,4676
(define (fix:<=158,4721
(define (fix:>=172,5063
(define (right-accumulation 188,5443
(define +-expansion209,5951
(define *-expansion219,6300
(define (expt-expansion 224,6446
(define (right-accumulation-inverse 275,7784
(define --expansion291,8296
(define /-expansion298,8552
(define (apply*-expansion 305,8746
(define (cons*-expansion 317,9071
(define (cons*-expansion-loop 320,9164
(define (list-expansion 329,9394
(define (list-expansion-loop 332,9485
(define (values-expansion 339,9783
(define (call-with-values-expansion 372,10828
(define (call-to-car? 385,11122
(define (call-to-cdr? 390,11330
(define (call-to-general-car-cdr? 395,11538
(define (car-expansion 402,11839
(define (cdr-expansion 440,12972
(define (general-car-cdr-expansion 478,14112
(define caar-expansion 488,14361
(define cadr-expansion 489,14419
(define cdar-expansion 490,14477
(define cddr-expansion 491,14535
(define caaar-expansion 493,14594
(define caadr-expansion 494,14654
(define cadar-expansion 495,14714
(define caddr-expansion 496,14774
(define cdaar-expansion 497,14834
(define cdadr-expansion 498,14894
(define cddar-expansion 499,14954
(define cdddr-expansion 500,15014
(define caaaar-expansion 502,15075
(define caaadr-expansion 503,15137
(define caadar-expansion 504,15199
(define caaddr-expansion 505,15261
(define cadaar-expansion 506,15323
(define cadadr-expansion 507,15385
(define caddar-expansion 508,15447
(define cadddr-expansion 509,15509
(define cdaaar-expansion 510,15571
(define cdaadr-expansion 511,15633
(define cdadar-expansion 512,15695
(define cdaddr-expansion 513,15757
(define cddaar-expansion 514,15819
(define cddadr-expansion 515,15881
(define cdddar-expansion 516,15943
(define cddddr-expansion 517,16005
(define first-expansion 519,16068
(define second-expansion 520,16128
(define third-expansion 521,16189
(define fourth-expansion 522,16251
(define fifth-expansion 523,16314
(define sixth-expansion 524,16378
(define seventh-expansion 525,16443
(define eighth-expansion 526,16509
(define (eq?-expansion 530,16598
(define (make-string-expansion 553,17419
(define (make-bytevector-expansion 560,17621
(define (not-expansion 567,17833
(define (type-test-expansion 579,18339
(define weak-pair?-expansion 586,18523
(define (exact-integer?-expansion 588,18599
(define (exact-rational?-expansion 600,18963
(define (complex?-expansion 612,19385
(define (symbol?-expansion 626,19923
(define (default-object?-expansion 639,20301
(define (make-disjunction 647,20546
(define (make-type-test 654,20760
(define (string->symbol-expansion 659,20925
(define (intern-expansion 669,21261
(define (int:->flonum-expansion 679,21581
(define (make-primitive-expander 688,21829
(define usual-integrations/expansion-names696,22038
(define usual-integrations/expansion-values779,23131
(define usual-integrations/expansion-alist866,25009
(define (scode->scode-expander 877,25300
(define expander-evaluation-environment891,25661

xform.scm,1339
(define (transform/top-level 33,1161
(define (transform/recursive 40,1425
(define (transform/r7rs-library 43,1555
(define top-level?)55,1949
(define top-level-block)56,1969
(define root-block)57,1994
(define (transform/top-level-1 59,2015
(define (ui-warning)84,2889
(define (transform/expressions 96,3382
(define (transform/expression 103,3602
(define (environment/make)106,3740
(define (environment/lookup 109,3775
(define (environment/bind 116,4007
(define (transform/open-block 122,4156
(define (transform/open-block* 130,4432
(define (transform/variable 174,6058
(define (transform/assignment 180,6238
(define (transform/lambda 190,6622
(define (build-procedure 211,7442
(define (transform/procedure-body 232,8199
(define (transform/definition 246,8702
(define (transform/access 257,9171
(define (transform/combination 265,9414
(define (transform/combination* 268,9544
(define (transform/comment 276,9904
(define (transform/conditional 280,10048
(define (transform/constant 290,10498
(define (transform/declaration 294,10628
(define (transform/delay 301,10882
(define (transform/disjunction 307,11052
(define (transform/quotation 315,11330
(define (transform/quotation* 319,11498
(define (transform/sequence 324,11712
(define (transform/the-environment 332,11989
(define transform/dispatch337,12146

sf.pkg,221
MIT/GNU Scheme is free software;10,317
the Free Software Foundation;12,457
the Free Software Foundation; either version 2 of the License,12,457
the Free Software Foundation; either version 2 of the License, or 12,457

make.scm,0
