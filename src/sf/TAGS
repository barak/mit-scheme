
analyze.scm,9262
(define (expression/always-false? 39,1417
(define always-false?-dispatch-vector42,1541
(define define-method/always-false?45,1617
(define-method/always-false? 'access 48,1720
(define-method/always-false? 'assignment 50,1775
(define-method/always-false? 'combination52,1834
(define-method/always-false? 'conditional61,2204
(define-method/always-false? 'constant68,2577
(define-method/always-false? 'declaration72,2680
(define-method/always-false? 'delay 78,2855
(define-method/always-false? 'disjunction80,2909
(define-method/always-false? 'open-block85,3122
(define-method/always-false? 'procedure 91,3299
(define-method/always-false? 'quotation 93,3357
(define-method/always-false? 'reference 95,3415
(define-method/always-false? 'sequence97,3473
(define-method/always-false? 'the-environment 102,3611
(define (expression/boolean? 109,3814
(define boolean?-dispatch-vector112,3928
(define define-method/boolean?115,3999
(define-method/boolean? 'access 118,4092
(define-method/boolean? 'assignment 120,4142
(define-method/boolean? 'combination122,4196
(define-method/boolean? 'conditional128,4455
(define-method/boolean? 'constant135,4813
(define-method/boolean? 'declaration141,5005
(define-method/boolean? 'delay 145,5130
(define-method/boolean? 'disjunction147,5180
(define-method/boolean? 'open-block153,5457
(define-method/boolean? 'procedure 158,5589
(define-method/boolean? 'quotation 160,5642
(define-method/boolean? 'reference 162,5695
(define-method/boolean? 'sequence164,5748
(define-method/boolean? 'the-environment 168,5871
(define (expression/effect-free? 174,6075
(define effect-free?-dispatch-vector177,6197
(define define-method/effect-free?180,6272
(define-method/effect-free? 'access183,6373
(define-method/effect-free? 'assignment 187,6497
(define-method/effect-free? 'combination189,6555
(define-method/effect-free? 'conditional197,6933
(define-method/effect-free? 'constant 205,7373
(define-method/effect-free? 'declaration207,7428
(define-method/effect-free? 'delay 212,7611
(define-method/effect-free? 'disjunction214,7663
(define-method/effect-free? 'open-block223,8080
(define-method/effect-free? 'procedure 229,8246
(define-method/effect-free? 'quotation 231,8302
(define-method/effect-free? 'reference 233,8359
(define-method/effect-free? 'sequence235,8415
(define-method/effect-free? 'the-environment 239,8545
(define (expression/free-variables 247,8763
(define (expressions/free-variables 250,8889
(define free-variables-dispatch-vector256,9119
(define define-method/free-variables259,9196
(define-method/free-variables 'access262,9301
(define-method/free-variables 'assignment266,9429
(define-method/free-variables 'combination272,9644
(define-method/free-variables 'conditional279,9874
(define-method/free-variables 'constant291,10357
(define-method/free-variables 'declaration296,10462
(define-method/free-variables 'delay300,10600
(define-method/free-variables 'disjunction304,10725
(define-method/free-variables 'open-block313,11048
(define-method/free-variables 'procedure331,11637
(define-method/free-variables 'quotation337,11849
(define-method/free-variables 'reference342,11974
(define-method/free-variables 'sequence346,12098
(define-method/free-variables 'the-environment350,12227
(define-integrable (no-free-variables)355,12359
(define-integrable (singleton-variable 358,12406
(define (expression/free-variable? 367,12690
(define (expressions/free-variable? 370,12827
(define is-free-dispatch-vector377,13065
(define define-method/free-variable?380,13135
(define-method/free-variable? 'access383,13233
(define-method/free-variable? 'assignment387,13379
(define-method/free-variable? 'combination392,13588
(define-method/free-variable? 'conditional398,13828
(define-method/free-variable? 'constant 413,14540
(define-method/free-variable? 'declaration415,14598
(define-method/free-variable? 'delay419,14754
(define-method/free-variable? 'disjunction423,14897
(define-method/free-variable? 'open-block431,15242
(define-method/free-variable? 'procedure441,15614
(define-method/free-variable? 'quotation 445,15759
(define-method/free-variable? 'reference447,15818
(define-method/free-variable? 'sequence451,15945
(define-method/free-variable? 'the-environment 461,16299
(define (expression/free-variable-info 471,16704
(define (expression/free-variable-info-dispatch 474,16840
(define (expressions/free-variable-info 478,17005
(define free-info-dispatch-vector485,17256
(define define-method/free-variable-info488,17328
(define-method/free-variable-info 'access491,17432
(define-method/free-variable-info 'assignment496,17614
(define-method/free-variable-info 'combination502,17856
(define-method/free-variable-info 'conditional514,18363
(define-method/free-variable-info 'constant524,18753
(define-method/free-variable-info 'declaration529,18889
(define-method/free-variable-info 'delay534,19081
(define-method/free-variable-info 'disjunction539,19260
(define-method/free-variable-info 'open-block547,19550
(define-method/free-variable-info 'procedure557,19922
(define-method/free-variable-info 'quotation562,20103
(define-method/free-variable-info 'reference567,20240
(define-method/free-variable-info 'sequence573,20440
(define-method/free-variable-info 'the-environment578,20613
(define (expression/never-false? 589,21008
(define never-false?-dispatch-vector592,21130
(define define-method/never-false?595,21205
(define-method/never-false? 'access 598,21306
(define-method/never-false? 'assignment 600,21360
(define-method/never-false? 'combination602,21418
(define-method/never-false? 'conditional611,21787
(define-method/never-false? 'constant 618,22157
(define-method/never-false? 'declaration620,22219
(define-method/never-false? 'delay 624,22352
(define-method/never-false? 'disjunction626,22404
(define-method/never-false? 'open-block631,22612
(define-method/never-false? 'procedure 636,22752
(define-method/never-false? 'quotation 638,22808
(define-method/never-false? 'reference 640,22865
(define-method/never-false? 'sequence642,22922
(define-method/never-false? 'the-environment 646,23053
(define (expression/pure-false? 653,23313
(define pure-false?-dispatch-vector656,23433
(define define-method/pure-false?659,23507
(define-method/pure-false? 'access 662,23606
(define-method/pure-false? 'assignment 664,23659
(define-method/pure-false? 'combination666,23716
(define-method/pure-false? 'conditional677,24175
(define-method/pure-false? 'constant685,24612
(define-method/pure-false? 'declaration689,24713
(define-method/pure-false? 'delay 694,24849
(define-method/pure-false? 'disjunction696,24901
(define-method/pure-false? 'open-block 702,25128
(define-method/pure-false? 'procedure 704,25185
(define-method/pure-false? 'quotation 706,25241
(define-method/pure-false? 'reference 708,25297
(define-method/pure-false? 'sequence710,25353
(define-method/pure-false? 'the-environment 716,25591
(define (expression/pure-true? 724,25905
(define pure-true?-dispatch-vector727,26023
(define define-method/pure-true?730,26096
(define-method/pure-true? 'access 733,26193
(define-method/pure-true? 'assignment 735,26245
(define-method/pure-true? 'combination737,26301
(define-method/pure-true? 'conditional748,26759
(define-method/pure-true? 'constant756,27193
(define-method/pure-true? 'declaration760,27296
(define-method/pure-true? 'delay 764,27425
(define-method/pure-true? 'disjunction766,27476
(define-method/pure-true? 'open-block 772,27748
(define-method/pure-true? 'procedure 774,27804
(define-method/pure-true? 'quotation 776,27859
(define-method/pure-true? 'reference 778,27914
(define-method/pure-true? 'sequence780,27969
(define-method/pure-true? 'the-environment 786,28194
(define (expression/size 795,28498
(define size-dispatch-vector798,28604
(define define-method/size801,28671
(define-method/size 'access804,28756
(define-method/size 'assignment808,28873
(define-method/size 'combination812,28992
(define-method/size 'conditional819,29274
(define-method/size 'constant827,29546
(define-method/size 'declaration830,29634
(define-method/size 'delay834,29760
(define-method/size 'disjunction838,29874
(define-method/size 'open-block843,30073
(define-method/size 'procedure852,30376
(define-method/size 'quotation856,30492
(define-method/size 'reference860,30614
(define-method/size 'sequence865,30711
(define (expression->list 877,31056
(define expression->list-dispatch-vector880,31175
(define define-method/expression->list883,31254
(define-method/expression->list 'access886,31363
(define-method/expression->list 'assignment891,31527
(define-method/expression->list 'combination896,31697
(define-method/expression->list 'conditional901,31892
(define-method/expression->list 'constant907,32145
(define-method/expression->list 'declaration910,32241
(define-method/expression->list 'delay915,32429
(define-method/expression->list 'disjunction919,32557
(define-method/expression->list 'open-block924,32752
(define-method/expression->list 'procedure934,33075
(define-method/expression->list 'quotation946,33566
(define-method/expression->list 'reference950,33683
(define-method/expression->list 'sequence954,33804

butils.scm,102
(define (directory-processor 32,1113
(define sf-directory68,2383
(define (sf-conditionally 79,2700

cgen.scm,1238
(define *sf-associate*33,1166
(define (cgen/output 38,1234
(define (cgen/external 42,1324
(define (cgen/external-with-declarations 47,1461
(define (cgen/top-level 51,1606
(define (cgen/declaration 59,1894
(define flush-declarations?)65,2104
(define (maybe-flush-declarations 67,2134
(define *known-compiler-declarations*82,2691
(define (known-compiler-declaration? 100,3099
(define (cgen/expressions 103,3209
(define (cgen/expression 110,3394
(define dispatch-vector113,3511
(define %define-method/cgen116,3573
(define-integrable (define-method/cgen 119,3654
(define (cgen/variable 124,3830
(define-method/cgen 'access132,4089
(define-method/cgen 'assignment137,4267
(define-method/cgen 'combination144,4512
(define-method/cgen 'conditional150,4739
(define-method/cgen 'constant157,5036
(define-method/cgen 'declaration162,5157
(define-method/cgen 'delay168,5366
(define-method/cgen 'disjunction172,5506
(define-method/cgen 'procedure178,5737
(define (cgen-open-block 195,6338
(define-method/cgen 'quotation216,7247
(define-method/cgen 'reference221,7389
(define-method/cgen 'sequence225,7514
(define (remove-references 235,7861
(define-method/cgen 'the-environment243,8071
(define (pp-expression 249,8231

chtype.scm,886
(define (change-type/block 33,1162
(define (change-type/expressions 40,1419
(define (change-type/expression 45,1570
(define dispatch-vector49,1735
(define define-method/change-type52,1797
(define (change-type/object 57,1935
(define-method/change-type 'access64,2149
(define-method/change-type 'assignment68,2271
(define-method/change-type 'combination72,2395
(define-method/change-type 'conditional77,2588
(define-method/change-type 'constant83,2849
(define-method/change-type 'declaration86,2907
(define-method/change-type 'delay90,3038
(define-method/change-type 'disjunction94,3157
(define-method/change-type 'open-block99,3353
(define-method/change-type 'procedure107,3639
(define-method/change-type 'quotation111,3760
(define-method/change-type 'reference115,3887
(define-method/change-type 'sequence118,3945
(define-method/change-type 'the-environment122,4068

copy.scm,1333
(define root-block)33,1151
(define copy/variable/free)34,1171
(define copy/declarations)35,1199
(define (copy/expression/intern 37,1227
(define (copy/expression/extern 44,1528
(define (copy/expressions 51,1829
(define (copy/expression 56,1986
(define dispatch-vector60,2126
(define define-method/copy63,2188
(define (environment/make)66,2268
(define (environment/bind 69,2303
(define (environment/lookup 72,2404
(define (environment/rebind 79,2637
(define (make-renamer 87,2844
(define (copy/quotation 94,3086
(define (copy/block 104,3406
(define (copy/variable 122,4010
(define (copy/variable/free/intern 128,4203
(define (copy/variable/free/extern 147,4901
(define (copy/declarations/intern 150,5011
(define (copy/declarations/extern 161,5318
(define-method/copy 'access173,5711
(define-method/copy 'assignment186,6095
(define-method/copy 'combination194,6382
(define-method/copy 'conditional202,6681
(define-method/copy 'constant210,7048
(define-method/copy 'declaration215,7178
(define-method/copy 'delay224,7478
(define-method/copy 'disjunction230,7667
(define-method/copy 'procedure239,7974
(define-method/copy 'open-block258,8583
(define-method/copy 'quotation275,9163
(define-method/copy 'reference280,9311
(define-method/copy 'sequence287,9527
(define-method/copy 'the-environment293,9726

emodel.scm,306
(define (variable/make&bind! 33,1148
(define (%variable/make&bind! 38,1318
(define (block/lookup-name 44,1516
(define (%block/lookup-name 52,1798
(define (block/limited-lookup 57,1939
(define (block/lookup-names 65,2210
(define (block/for-each-bound-variable 70,2339
(define (block/unsafe! 73,2450

gconst.scm,74
(define global-constant-objects32,1120
(define global-primitives43,1413

object.scm,3054
(define (enumeration/make 34,1128
(define-structure (enumerand 51,1738
(define-integrable (enumeration/cardinality 57,1919
(define-integrable (enumeration/index->enumerand 60,2014
(define (enumeration/name->enumerand 63,2123
(define-integrable (enumeration/name->index 67,2275
(define-syntax define-enumeration70,2406
(define-enumeration enumeration/random85,2989
(define-enumeration enumeration/expression90,3075
(define-syntax define-simple-type114,3563
(define-integrable (object/enumerand 135,4340
(define (set-object/enumerand! 138,4411
(define-integrable (object/scode 141,4497
(define (with-new-scode 144,4564
(define-structure (block 150,4689
(define-guarantee block 161,5038
(define (block/make 163,5072
(define-structure (delayed-integration170,5309
(define-guarantee delayed-integration 180,5636
(define-structure (variable186,5846
(define-guarantee variable 200,6280
(define-simple-type access 203,6336
(define-simple-type assignment 204,6392
(define-simple-type combination 205,6450
(define-simple-type conditional 206,6527
(define-simple-type constant 207,6598
(define-simple-type declaration 208,6639
(define-simple-type delay 209,6701
(define-simple-type disjunction 210,6744
(define-simple-type open-block 211,6804
(define-simple-type procedure 212,6872
(define-simple-type quotation 213,6947
(define-simple-type sequence 214,7000
(define-simple-type the-environment 215,7055
(define primitive-boolean-predicates220,7189
(define (expression/call-to-boolean-predicate? 265,8168
(define effect-free-primitives277,8785
(define (expression/call-to-effect-free-primitive? 298,9213
(define (expression/call-to-not? 310,9773
(define (expression/constant-eq? 320,10234
(define-integrable (global-ref/make 326,10498
(define (global-ref? 332,10659
(define sf:enable-constant-folding? 342,10996
(define sf:enable-argument-deletion? 347,11242
(define combination/constant-folding-operators351,11379
(define (foldable-combination? 442,12893
(define (reducible-operator? 458,13581
(define (combination/make 474,14347
(define (combination/fold-constant 519,16661
(define-integrable (partition-operands 532,17134
(define (sequence/make 578,19375
(define-structure (reference602,20364
(define-guarantee reference 616,20828
(define-syntax define-flag620,20888
(define-flag side-effected 636,21417
(define-flag referenced 637,21490
(define-flag integrated 638,21561
(define-flag may-ignore 639,21633
(define-flag must-ignore 640,21705
(define open-block/value-marker642,21779
(define (expression/make-dispatch-vector)647,21963
(define (expression/make-method-definer 650,22072
(define-integrable (expression/method 656,22295
(define-integrable (name->method 659,22442
(define integration-info-tag665,22645
(define-integrable (make-integration-info 668,22711
(define-integrable (integration-info? 671,22808
(define-guarantee integration-info 675,22926
(define (integration-info/expression 677,22982
(define-integrable (constant->integration-info 681,23141
(define (noisy-test 692,23596

pardec.scm,1414
(define (declarations/parse 35,1186
(define (merge-usual-integrations 46,1537
(define (declarations/make-null)63,2093
(define (declarations/original 66,2161
(define (declarations/bind 69,2256
(define (declarations/map 89,2944
(define (declarations/known? 101,3426
(define-structure (declaration-set106,3539
(define-structure (declaration116,3826
(define (make-declarations 144,4791
(define (parse-declaration 154,5127
(define (define-declaration 160,5320
(define known-declarations169,5564
(define (known-declaration? 172,5599
(define-declaration 'usual-integrations178,5767
(define (r7rs-usual-integrations 253,8046
(define (define-integration-declaration 277,8765
(define-integration-declaration 'integrate)285,8980
(define-integration-declaration 'integrate-operator)286,9024
(define-declaration 'integrate-external288,9078
(define (operations->external 324,10180
(define-declaration 'ignorable357,11176
(define-declaration 'ignore371,11643
(define-declaration 'reduce-operator397,12326
(define (check-declaration-syntax 408,12697
(define-declaration 'replace-operator417,13000
(define (make-dumpable-expander 453,14160
(define (dumpable-expander? 459,14370
(define (dumpable-expander->dumped-expander 465,14546
(define (dumped-expander? 468,14661
(define (dumped-expander/declaration 472,14766
(define dumped-expander-tag475,14832
(define-declaration 'expand-operator482,15114

pthmap.scm,760
(define pathname-map/make)32,1095
(define pathname-map?)33,1122
(define pathname-map/lookup)34,1145
(define pathname-map/insert!)35,1174
(define pathname-map/tag 39,1214
(define pathname-map/root-node 40,1255
(define (node/make)44,1334
(define unbound-value 47,1383
(define node/value 48,1422
(define set-node/value! 49,1446
(define node/alist 50,1480
(define set-node/alist! 51,1504
(define (node/associate 53,1539
(define (make-node-list 58,1653
(define (cons-if 68,1955
(define (find-node 73,2032
(define (find-or-create-node 80,2215
(define (create-node 88,2450
(set! pathname-map/make97,2686
(set! pathname-map?101,2789
(define-print-method pathname-map?106,2914
(set! pathname-map/lookup109,2991
(set! pathname-map/insert!121,3316

reduct.scm,910
(define (lookup 158,5137
(define-integrable (handle-variable 165,5318
(define (->expression 175,5584
(define (any-shadowed? 215,6736
(define (filter-vars 221,6928
(define (combine-1 231,7138
(define (combine-2 234,7220
(define (identity-combiner 241,7390
(define (->singleton-combiner 245,7478
(define (->mapper-combiner 252,7672
(define (->wrapper 260,7903
(define (identity-wrapper 271,8162
(define (->error-thunk 275,8259
(define (->value-thunk 280,8379
(define (invert 287,8523
(define (make-grouper 293,8609
(define (group-right 333,9733
(define (group-left 341,9984
(define-integrable (with-arguments-from 351,10250
(define (decode-options 356,10354
(define (fail 383,11044
(define (incompatible 386,11129
(define (with-wrapper 390,11260
(define (with-singleton 403,11754
(define (reducer/make 415,12090
(define (replacement/make 491,14263
(define (parse-replacement 517,14978

subst.scm,3443
(define *top-level-block*)33,1165
(define (integrate/get-top-level-block)35,1193
(define *current-block-names*)40,1335
(define (ignored-variable-warning 42,1367
(define (integrate/top-level 48,1594
(define (integrate/top-level* 51,1711
(define (integrate/expressions 73,2532
(define (integrate/actions 78,2716
(define (integrate/expression 85,2934
(define dispatch-vector89,3089
(define define-method/integrate92,3151
(define-method/integrate 'access95,3237
(define-method/integrate 'assignment131,4479
(define-method/integrate 'combination154,5454
(define-method/integrate 'conditional164,5831
(define sf:enable-conditional-folding? 173,6271
(define (integrate/conditional 175,6315
(define-method/integrate 'constant212,7964
(define-method/integrate 'declaration217,8109
(define-method/integrate 'delay231,8613
(define-method/integrate 'disjunction238,8850
(define sf:enable-disjunction-folding? 246,9138
(define (integrate/disjunction 248,9182
(define-method/integrate 'open-block283,10813
(define-method/integrate 'procedure291,11119
(define-method/integrate 'quotation297,11353
(define (integrate/quotation 302,11521
(define sf:warn-on-unintegrated-argument 312,11897
(define-method/integrate 'reference314,11943
(define (reassign 351,13019
(define-method/integrate 'sequence356,13153
(define-method/integrate 'the-environment363,13407
(define sf:display-top-level-procedure-names? 374,13663
(define (maybe-displaying-name 376,13714
(define (integrate/open-block 386,14008
(define (variable/unreferenced? 420,15649
(define (integrate/procedure 426,15874
(define integrate-combination-dispatch-vector463,17412
(define define-method/integrate-combination466,17496
(define (integrate/combination 469,17615
(define-method/integrate-combination 'access474,17870
(define (integrate/access-operator 479,18109
(define-method/integrate-combination 'assignment525,19685
(define-method/integrate-combination 'combination535,20140
(define-method/integrate-combination 'conditional540,20365
(define sf:enable-elide-double-negatives? 545,20589
(define-method/integrate-combination 'constant547,20636
(define (integrate/primitive-operator 574,22087
(define-method/integrate-combination 'declaration579,22324
(define-method/integrate-combination 'delay584,22548
(define-method/integrate-combination 'disjunction594,22962
(define-method/integrate-combination 'open-block599,23214
(define-method/integrate-combination 'procedure605,23516
(define (integrate/procedure-operator 610,23766
(define-method/integrate-combination 'quotation617,24090
(define-method/integrate-combination 'reference622,24340
(define (integrate/reference-operator 627,24588
(define-method/integrate-combination 'sequence667,26076
(define-method/integrate-combination 'the-environment672,26325
(define (integrate-combination/default 679,26682
(define (integrate/hack-apply? 703,27630
(define (integrate/compound-operator 774,30085
(define (combination-with-operator 817,32111
(define (declaration-with-expression 823,32339
(define (procedure-with-body 834,32852
(define (hackify-variable 846,33383
(define (sequence-with-actions 851,33529
(define (constant/system-global-environment? 854,33632
(define (environment/recursive-bind 860,33805
(define (integrate/name 875,34489
(define (variable/final-value 894,35207
(define (delayed-integration/in-progress? 908,35681
(define (delayed-integration/force 911,35820

tables.scm,598
(define (environment/make)39,1310
(define (environment/bind 42,1345
(define-integrable (environment/bind-multiple 46,1493
(define (environment/lookup 49,1614
(define *unknown-value 57,1873
(define (simulate-unknown-application 61,2047
(define (simulate-application 86,2908
(define (operations/make)189,6212
(define (operations/lookup 192,6263
(define (operations/lookup-global 210,6876
(define (operations/shadow 219,7184
(define (operations/bind 228,7450
(define (operations/bind-top-level 236,7760
(define (operations/bind-global 244,8100
(define (operations/map-external 252,8431

toplev.scm,1507
(define (bin-pathname-type)34,1139
(define (integrate/procedure 37,1208
(define (integrate/sexp 42,1380
(define (integrate/scode 48,1603
(define (sf 51,1701
(define (syntax&integrate 56,1914
(define sf:noisy? 65,2172
(define (sf/set-usual-integrations-default-deletions! 67,2195
(define (pathname/normalize 73,2445
(define (sf/object-pathname 77,2601
(define sf/default-syntax-table80,2718
(define sf/default-declarations83,2780
(define sf/top-level-definitions86,2820
(define sf/usual-integrations-default-deletions89,2861
(define sf/cross-compiling?92,2917
(define sf/source-root95,2952
(define sf/object-root98,2989
(define (syntax-file 103,3047
(define (sf/pathname-defaulting 116,3597
(define (sf/internal 137,4247
(define (sf/file->scode 170,5416
(define (externs-pathname-type)189,6024
(define (sf/default-externs-pathname)192,6097
(define (read-externs-file 195,6200
(define (write-externs-file 232,7387
(define externs-file-tag241,7640
(define externs-file-version244,7731
(define (integrate/file 249,7793
(define (integrate/simple 256,7969
(define (integrate/kernel 265,8230
(define (integrate/kernel-1 271,8432
(define (phase:read 278,8597
(define (phase:syntax 284,8728
(define (phase:transform 298,9171
(define (phase:optimize 303,9305
(define (phase:generate-scode 308,9434
(define (integrate/r7rs-scode-file 315,9696
(define (integrate/r7rs-library 320,9815
(define (phase:transform-r7rs 331,10181
(define (in-phase 336,10314
(define (timed 343,10469

usicon.scm,198
(define usual-integrations/constant-names)33,1159
(define usual-integrations/constant-values)34,1202
(define usual-integrations/constant-alist)35,1246
(define (usual-integrations/cache!)37,1290

usiexp.scm,3725
(define (make-combination 35,1223
(define (make-operand-binding 41,1382
(define (constant-eq? 54,1820
(define (unary-arithmetic 58,1946
(define (binary-arithmetic 65,2133
(define zero?-expansion73,2351
(define positive?-expansion76,2422
(define negative?-expansion79,2501
(define 1+-expansion82,2580
(define -1+-expansion85,2645
(define quotient-expansion88,2712
(define remainder-expansion91,2792
(define modulo-expansion94,2874
(define (pairwise-test 99,2985
(define (pairwise-test-inverse 114,3503
(define =-expansion122,3752
(define <-expansion127,3867
(define >-expansion132,3990
(define <=137,4113
(define >=138,4171
(define (fix:zero?-expansion 142,4255
(define (fix:=148,4473
(define char=155,4682
(define (fix:<=158,4727
(define (fix:>=172,5069
(define (right-accumulation 188,5449
(define +-expansion209,5957
(define *-expansion219,6306
(define (expt-expansion 224,6452
(define (right-accumulation-inverse 275,7790
(define --expansion291,8302
(define /-expansion298,8558
(define (apply*-expansion 305,8752
(define (cons*-expansion 317,9077
(define (cons*-expansion-loop 320,9170
(define (list-expansion 329,9400
(define (list-expansion-loop 332,9491
(define (values-expansion 339,9789
(define (call-with-values-expansion 372,10834
(define (call-to-car? 385,11128
(define (call-to-cdr? 390,11336
(define (call-to-general-car-cdr? 395,11544
(define (car-expansion 402,11845
(define (cdr-expansion 440,12978
(define (general-car-cdr-expansion 478,14118
(define caar-expansion 488,14367
(define cadr-expansion 489,14425
(define cdar-expansion 490,14483
(define cddr-expansion 491,14541
(define caaar-expansion 493,14600
(define caadr-expansion 494,14660
(define cadar-expansion 495,14720
(define caddr-expansion 496,14780
(define cdaar-expansion 497,14840
(define cdadr-expansion 498,14900
(define cddar-expansion 499,14960
(define cdddr-expansion 500,15020
(define caaaar-expansion 502,15081
(define caaadr-expansion 503,15143
(define caadar-expansion 504,15205
(define caaddr-expansion 505,15267
(define cadaar-expansion 506,15329
(define cadadr-expansion 507,15391
(define caddar-expansion 508,15453
(define cadddr-expansion 509,15515
(define cdaaar-expansion 510,15577
(define cdaadr-expansion 511,15639
(define cdadar-expansion 512,15701
(define cdaddr-expansion 513,15763
(define cddaar-expansion 514,15825
(define cddadr-expansion 515,15887
(define cdddar-expansion 516,15949
(define cddddr-expansion 517,16011
(define first-expansion 519,16074
(define second-expansion 520,16134
(define third-expansion 521,16195
(define fourth-expansion 522,16257
(define fifth-expansion 523,16320
(define sixth-expansion 524,16384
(define seventh-expansion 525,16449
(define eighth-expansion 526,16515
(define (eq?-expansion 530,16604
(define (make-string-expansion 553,17425
(define (make-bytevector-expansion 560,17627
(define (not-expansion 567,17839
(define (type-test-expansion 579,18345
(define weak-pair?-expansion 586,18529
(define (exact-integer?-expansion 588,18605
(define (exact-rational?-expansion 600,18969
(define (complex?-expansion 612,19391
(define (symbol?-expansion 626,19929
(define (default-object?-expansion 639,20307
(define (make-disjunction 647,20552
(define (make-type-test 654,20766
(define (string->symbol-expansion 659,20931
(define (intern-expansion 669,21267
(define (int:->flonum-expansion 679,21587
(define (make-primitive-expander 688,21835
(define usual-integrations/expansion-names696,22044
(define usual-integrations/expansion-values779,23137
(define usual-integrations/expansion-alist866,25015
(define (scode->scode-expander 877,25306
(define expander-evaluation-environment891,25667

xform.scm,1339
(define (transform/top-level 33,1167
(define (transform/recursive 40,1431
(define (transform/r7rs-library 43,1561
(define top-level?)55,1955
(define top-level-block)56,1975
(define root-block)57,2000
(define (transform/top-level-1 59,2021
(define (ui-warning)84,2895
(define (transform/expressions 96,3388
(define (transform/expression 103,3608
(define (environment/make)106,3746
(define (environment/lookup 109,3781
(define (environment/bind 116,4013
(define (transform/open-block 122,4162
(define (transform/open-block* 130,4438
(define (transform/variable 174,6064
(define (transform/assignment 180,6244
(define (transform/lambda 190,6628
(define (build-procedure 211,7448
(define (transform/procedure-body 232,8205
(define (transform/definition 246,8708
(define (transform/access 257,9177
(define (transform/combination 265,9420
(define (transform/combination* 268,9550
(define (transform/comment 276,9910
(define (transform/conditional 280,10054
(define (transform/constant 290,10504
(define (transform/declaration 294,10634
(define (transform/delay 301,10888
(define (transform/disjunction 307,11058
(define (transform/quotation 315,11336
(define (transform/quotation* 319,11504
(define (transform/sequence 324,11718
(define (transform/the-environment 332,11995
(define transform/dispatch337,12152

sf.pkg,221
MIT/GNU Scheme is free software;10,323
the Free Software Foundation;12,463
the Free Software Foundation; either version 2 of the License,12,463
the Free Software Foundation; either version 2 of the License, or 12,463

make.scm,0
